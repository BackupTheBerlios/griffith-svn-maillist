From mikej06 at mail.berlios.de  Mon Jan  2 22:14:32 2012
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Mon,  2 Jan 2012 22:14:32 +0100
Subject: [Griffith-svn] r1612 - in trunk: . lib/plugins/imp
Message-ID: <20120102211432.844E648114B@sheep.berlios.de>

Author: mikej06
Date: 2012-01-02 22:14:32 +0100 (Mon, 02 Jan 2012)
New Revision: 1612

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/imp/DVDProfiler.py
Log:
[#909513] code errors in import plugins

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-12-27 19:22:24 UTC (rev 1611)
+++ trunk/ChangeLog	2012-01-02 21:14:32 UTC (rev 1612)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 
+2012-01-02  Michael Jahn
+	* [#909513] code errors in import plugins
+
 2011-12-27  Michael Jahn
 	* better error handling for PDF export plugin
 

Modified: trunk/lib/plugins/imp/DVDProfiler.py
===================================================================
--- trunk/lib/plugins/imp/DVDProfiler.py	2011-12-27 19:22:24 UTC (rev 1611)
+++ trunk/lib/plugins/imp/DVDProfiler.py	2012-01-02 21:14:32 UTC (rev 1612)
@@ -205,11 +205,11 @@
                                         details['screenplay'] = details['screenplay'] + lastName + ', '
                                     elif firstName:
                                         details['screenplay'] = details['screenplay'] + firstName + ', '
-                        if len(details['director']) > 2:
+                        if len(details['director']) > 1:
                             details['director'] = details['director'][:-2]
-                        if len(details['cameraman']) > 2:
+                        if len(details['cameraman']) > 1:
                             details['cameraman'] = details['cameraman'][:-2]
-                        if len(details['screenplay']) > 2:
+                        if len(details['screenplay']) > 1:
                             details['screenplay'] = details['screenplay'][:-2]
                     elif node.nodeName == 'Actors':
                         details['cast'] = ''
@@ -260,7 +260,7 @@
                         for genreElement in genreElements:
                             if len(genreElement.childNodes) > 0:
                                 details['genre'] = details['genre'] + genreElement.childNodes[0].data.strip() + ', '
-                        if details['genre'] > 2:
+                        if len(details['genre']) > 1:
                             details['genre'] = details['genre'][:-2]
                     elif node.nodeName == 'Studios':
                         details['studio'] = ''
@@ -268,7 +268,7 @@
                         for studioElement in studioElements:
                             if len(studioElement.childNodes) > 0:
                                 details['studio'] = details['studio'] + studioElement.childNodes[0].data.strip() + ', '
-                        if details['studio'] > 2:
+                        if len(details['studio']) > 1:
                             details['studio'] = details['studio'][:-2]
                     elif node.nodeName == 'Regions':
                         regionElements = node.getElementsByTagName('Region')



From lanus at mail.berlios.de  Sat Jan  7 17:51:15 2012
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sat,  7 Jan 2012 17:51:15 +0100
Subject: [Griffith-svn] r1613 - in trunk: . lib/plugins/movie
Message-ID: <20120107165115.30BFC4811E7@sheep.berlios.de>

Author: lanus
Date: 2012-01-07 17:51:14 +0100 (Sat, 07 Jan 2012)
New Revision: 1613

Added:
   trunk/lib/plugins/movie/PluginMovieDVDpt.py
Modified:
   trunk/ChangeLog
Log:
Added a plugin for the portuguese website www.dvdpt.com

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-02 21:14:32 UTC (rev 1612)
+++ trunk/ChangeLog	2012-01-07 16:51:14 UTC (rev 1613)
@@ -4,6 +4,8 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2012-01-07  Ivo Nunes
+    * Added a plugin for the portuguese website www.dvdpt.com
 
 2012-01-02  Michael Jahn
 	* [#909513] code errors in import plugins

Added: trunk/lib/plugins/movie/PluginMovieDVDpt.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieDVDpt.py	                        (rev 0)
+++ trunk/lib/plugins/movie/PluginMovieDVDpt.py	2012-01-07 16:51:14 UTC (rev 1613)
@@ -0,0 +1,143 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id: PluginMovieDVDpt.py 1138 2009-01-31 21:48:43Z mikej06 $'
+
+# Copyright (c) 2005-2009 Vasco Nunes, Piotr Ozarowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import gutils
+import movie
+import string
+
+plugin_name         = "DVDpt"
+plugin_description  = ""
+plugin_url          = "dvdpt.com"
+plugin_language     = _("Portuguese")
+plugin_author       = "Ivo Nunes"
+plugin_author_email = "<netherblood at gmail.com>"
+plugin_version      = "0.1"
+
+class Plugin(movie.Movie):
+    """A movie plugin object"""
+    def __init__(self, id):
+        self.encode='iso-8859-1'
+        self.movie_id = id
+        self.url = "http://www.dvdpt.com/" + str(self.movie_id) + ".php"
+
+    def get_image(self):
+        """Finds the film's poster image"""
+        self.image_url = "http://www.dvdpt.com/" + str(self.movie_id) + ".jpg"
+
+    def get_o_title(self):
+        """Finds the film's original title"""
+        self.o_title = string.capwords(gutils.trim(self.page, '<font face=arial size=-1><b>"', '"'))
+
+    def get_title(self):
+        """Finds the film's local title.
+        Probably the original title translation"""
+        self.title = string.capwords(gutils.trim(self.page, "<title>", "</title>"))
+
+    def get_director(self):
+        """Finds the film's director"""
+        self.director = gutils.trim(self.page, "<b>REALIZADOR</b></font>\n<br />\n<font face=arial size=-1>", "\n<br /><br />")
+        self.director = gutils.strip_tags(self.director)
+
+    def get_plot(self):
+        """Finds the film's plot"""
+        self.plot = gutils.trim(self.page, '<center>\n<b>"', '"</b><br />')
+
+    def get_year(self):
+        """Finds the film's year"""
+        self.year = gutils.trim(self.page, '" (', ' -')
+
+    def get_runtime(self):
+        """Finds the film's running time"""
+        self.runtime = gutils.trim(self.page, " - ", "m)")
+        #self.runtime = gutils.after(self.runtime, "-1>")
+
+    def get_genre(self):
+        """Finds the film's genre"""
+        self.genre = ""
+
+    def get_cast(self):
+        self.cast = gutils.trim(self.page, "<b>INT?RPRETES</b></font>\n<br />\n<font face=arial size=-1>", "\n</div>")
+
+    def get_classification(self):
+        """Find the film's classification"""
+        self.classification = ""
+
+    def get_studio(self):
+        """Find the studio"""
+        self.studio = gutils.trim(self.page, "<font color=red face=arial size=-1><b>EST?DIO</b></font> \n<br />\n<font face=arial size=-1>", "<br />")
+
+    def get_o_site(self):
+        """Find the film's oficial site"""
+        self.o_site = ""
+
+    def get_site(self):
+        """Find the film's imdb details page"""
+        self.site = ""
+
+    def get_trailer(self):
+        """Find the film's trailer page or location"""
+        self.trailer = ""
+
+    def get_country(self):
+        """Find the film's country"""
+        self.country = ""
+
+    def get_rating(self):
+        """Find the film's rating. From 0 to 10.
+        Convert if needed when assigning."""
+        self.rating = ""
+
+class SearchPlugin(movie.SearchMovie):
+    """A movie search object"""
+    def __init__(self):
+        self.original_url_search   = "http://search.freefind.com/find.html?id=58910933&pageid=r&mode=all&n=0&query="
+        self.translated_url_search = "http://search.freefind.com/find.html?id=58910933&pageid=r&mode=all&n=0&query="
+        self.encode                = 'utf-8'
+
+    def search(self, parent_window):
+        """Perform the web search"""
+        if not self.open_search(parent_window):
+            return None
+        self.sub_search()
+        return self.page
+
+    def sub_search(self):
+        """Isolating just a portion (with the data we want) of the results"""
+        self.page = gutils.trim(self.page, \
+            "<!-- search results copyright FreeFind.com.  All rights reserved. Results may not be re-used, meta searched, or searched robotically -->", "<table class=search-nav-form-table>")
+
+    def get_searches(self):
+        """Try to find both id and film title for each search result"""
+        elements = string.split(self.page, "<br>")
+        self.number_results = elements[-1]
+
+        if (len(elements[0])):
+            for element in elements:
+                self.ids.append(gutils.trim(element, '<a  href="http://www.dvdpt.com/', '.php" >'))
+                title = gutils.trim(element, '.php" >', '</a>')
+                title = title.replace("<b>", "")
+                title = title.replace("</b>", "")
+                self.titles.append(title)
+        else:
+            self.number_results = 0
+


Property changes on: trunk/lib/plugins/movie/PluginMovieDVDpt.py
___________________________________________________________________
Added: svn:executable
   + *



From piotrek at mail.berlios.de  Sun Jan  8 21:38:46 2012
From: piotrek at mail.berlios.de (piotrek at mail.berlios.de)
Date: Sun,  8 Jan 2012 21:38:46 +0100
Subject: [Griffith-svn] r1614 - in trunk: . lib/plugins/imp
Message-ID: <20120108203847.1DDFE4815AA@sheep.berlios.de>

Author: piotrek
Date: 2012-01-08 21:38:46 +0100 (Sun, 08 Jan 2012)
New Revision: 1614

Added:
   trunk/lib/plugins/imp/Tellico.py
Modified:
   trunk/AUTHORS
   trunk/ChangeLog
Log:
Telico import plugin added (thanks to Elan Ruusam?\195?\164e)


Modified: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2012-01-07 16:51:14 UTC (rev 1613)
+++ trunk/AUTHORS	2012-01-08 20:38:46 UTC (rev 1614)
@@ -32,3 +32,6 @@
 
 Ivo Nunes <netherblood at gmail.com>
 * Programmer
+
+Elan Ruusam?e <glen at delfi.ee>
+* Telico import plugin

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-07 16:51:14 UTC (rev 1613)
+++ trunk/ChangeLog	2012-01-08 20:38:46 UTC (rev 1614)
@@ -4,8 +4,12 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+
+2012-01-08  Piotr O?arowski
+	* Telico import plugin added (thanks to Elan Ruusam?e)
+
 2012-01-07  Ivo Nunes
-    * Added a plugin for the portuguese website www.dvdpt.com
+	* Added a plugin for the portuguese website www.dvdpt.com
 
 2012-01-02  Michael Jahn
 	* [#909513] code errors in import plugins

Added: trunk/lib/plugins/imp/Tellico.py
===================================================================
--- trunk/lib/plugins/imp/Tellico.py	                        (rev 0)
+++ trunk/lib/plugins/imp/Tellico.py	2012-01-08 20:38:46 UTC (rev 1614)
@@ -0,0 +1,244 @@
+# -*- coding: utf-8 -*-
+
+__revision__ = '$Id: $'
+
+# Copyright (c) 2011, 2012
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+from plugins.imp import ImportPlugin as IP
+import os
+import gutils
+import string
+from xml.dom import minidom, Node
+import zipfile
+from shutil import rmtree
+from tempfile import mkdtemp
+
+import logging
+log = logging.getLogger("Griffith")
+
+
+class ImportPlugin(IP):
+    description  = 'Tellico'
+    author       = 'Elan Ruusam?e'
+    email        = 'glen at delfi.ee'
+    version      = '1.1'
+    file_filters = '*.[tT][cC]'
+    mime_types   = None
+
+    fileversion  = None
+    filedom      = None
+    items        = None
+    itemindex    = 0
+    zipdir       = None
+
+    def initialize(self):
+        if not IP.initialize(self):
+            return False
+        self.edit = False
+        return True
+
+    def set_source(self, name):
+        IP.set_source(self, name)
+        self.filename = name
+        self.fileversion = self.read_fileversion()
+        if self.fileversion == None:
+            gutils.error(_('The format of the file is not supported.'))
+            return False
+        return True
+
+    def count_movies(self):
+        """Returns number of movies in file which is about to be imported"""
+        count = 0
+        if self.filedom:
+            try:
+                collectionElement = self.filedom.getElementsByTagName('collection')[0]
+                for element in collectionElement.childNodes:
+                    if element.nodeType == Node.ELEMENT_NODE and element.nodeName == 'entry':
+                        count = count + 1
+                log.info('Tellico Import: %s movies for import' % count)
+            except:
+                log.exception('')
+        else:
+            log.error('Tellico Import: No filedom object.')
+        return count
+
+    def get_movie_details(self):
+        """Returns dictionary with movie details"""
+        if not self.filedom:
+            log.error('Tellico Import: filedom not open')
+            return None
+
+        if not self.items:
+            collectionElement = self.filedom.getElementsByTagName('collection')[0]
+            self.items = collectionElement.childNodes
+            self.itemindex = 0
+        if not self.items or len(self.items) < 1:
+            return None
+        if len(self.items) <= self.itemindex:
+            return None
+        item = self.items[self.itemindex]
+        while not (item.nodeType == Node.ELEMENT_NODE and item.nodeName == 'entry') and len(self.items) > self.itemindex + 1:
+            self.itemindex = self.itemindex + 1
+            item = self.items[self.itemindex]
+        if len(self.items) <= self.itemindex:
+            return None
+        if not len(item.childNodes):
+            return None
+
+        details = {}
+        try:
+            details['number'] = item.getAttribute('id')
+            for node in item.childNodes:
+                if node.nodeType == Node.ELEMENT_NODE and len(node.childNodes) > 0:
+                    if node.nodeName == 'color':
+                        value = node.childNodes[0].data.strip()
+                        if value == 'Color':
+                            details['color'] = 1
+                        elif value == 'Black & White':
+                            details['color'] = 2
+                    elif node.nodeName == 'region':
+                        details['region'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'running-time':
+                        details['runtime'] = node.childNodes[0].data.strip()
+                        try:
+                            details['runtime'] = int(details['runtime'])
+                        except:
+                            details['runtime'] = 0
+                    elif node.nodeName == 'year':
+                        details['year'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'orig-title':
+                        details['o_title'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'title':
+                        details['title'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'directors':
+                        details['director'] = self._joinXmlNodes(node.getElementsByTagName('director'))
+                    elif node.nodeName == 'writers':
+                        details['screenplay'] = self._joinXmlNodes(node.getElementsByTagName('writer'))
+                    elif node.nodeName == 'o_site':
+                        details['o_site'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'url':
+                        details['site'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'nationalitys':
+                        details['country'] = self._joinXmlNodes(node.getElementsByTagName('nationality'))
+                    elif node.nodeName == 'genres':
+                        details['genre'] = self._joinXmlNodes(node.getElementsByTagName('genre'))
+                    elif node.nodeName == 'certification':
+                        details['classification'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'casts':
+                        details['cast'] = self._joinCastNodes(node.getElementsByTagName('cast'), separator = "\n")
+                    elif node.nodeName == 'plot':
+                        details['plot'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'comments':
+                        details['notes'] = node.childNodes[0].data.strip()
+                    elif node.nodeName == 'cover':
+                        imgfile = node.childNodes[0].data.strip()
+                        # use 'image' field, 'poster' field is buggy, bug #913283
+                        # https://bugs.launchpad.net/griffith/+bug/913283
+                        details['image'] = os.path.join(self.zipdir, 'images', imgfile)
+        except EOFError:
+            details = None
+        except Exception, e:
+            log.exception('')
+            details = None
+
+        self.itemindex = self.itemindex + 1
+        return details
+
+    def clear(self):
+        """clear plugin before next source file"""
+        IP.clear(self)
+        if self.filedom:
+            rmtree(self.zipdir)
+            self.zipdir = None
+            self.filedom.unlink()
+            self.filedom = None
+            self.fileversion = None
+            self.items = None
+            self.itemindex = 0
+
+    def destroy(self):
+        """close all resources"""
+        IP.destroy(self)
+
+    def read_fileversion(self):
+        version = None
+        try:
+            self.zipdir = self._extractZip(self.filename)
+            self.filedom = minidom.parse(os.path.join(self.zipdir, 'tellico.xml'))
+            rootElement = self.filedom.getElementsByTagName('tellico')[0]
+            version = rootElement.getAttribute('syntaxVersion')
+        except Exception, e:
+            log.error(str(e))
+            if self.filedom:
+                self.filedom.unlink()
+                self.filedom = None
+        log.info('Tellico: Found file version %s' % version)
+        return version
+
+    def _extractZip(self, filename):
+        zf = zipfile.ZipFile(filename, 'r')
+        tmpdir = mkdtemp(prefix = 'griffit2tellico')
+        zf.extractall(path = tmpdir)
+        return tmpdir
+
+    def _joinXmlNodes(self, elements, separator = ', '):
+        ret = ''
+        for element in elements:
+            if len(element.childNodes) > 0:
+                ret = ret + element.childNodes[0].data.strip() + separator
+
+        # chop off last separator
+        if len(elements) > 0:
+            ret = ret[:-len(separator)]
+        return ret
+
+    # join nodes for cast
+    def _joinCastNodes(self, elements, separator = ', '):
+        """
+        we assume that this format:
+            <cast>
+            <column>Actor/Actress</column>
+            <column>Role</column>
+            </cast>
+
+        ideally the columns likely came from header, which may differ:
+            <field flags="3" title="Cast" category="Cast" format="2" type="8" name="cast" description="...">
+                <prop name="column1" >Actor/Actress</prop>
+                <prop name="column2" >Role</prop>
+                <prop name="columns" >2</prop>
+            </field>
+        """
+
+        ret = ''
+        for element in elements:
+            actor = None
+            columns = element.getElementsByTagName('column')
+            actor = columns[0].childNodes[0].data.strip()
+            if len(columns) > 1 and len(columns[1].childNodes) > 0:
+                actor = actor + _(' as ') + columns[1].childNodes[0].data.strip()
+
+            if actor:
+                ret = ret + actor + separator
+
+        # chop off last separator
+        if len(elements) > 0:
+            ret = ret[:-len(separator)]
+
+        return ret



From piotrek at mail.berlios.de  Tue Jan 10 21:58:15 2012
From: piotrek at mail.berlios.de (piotrek at mail.berlios.de)
Date: Tue, 10 Jan 2012 21:58:15 +0100
Subject: [Griffith-svn] r1615 - in trunk: . lib/plugins/movie
Message-ID: <20120110205815.F35F04813FA@sheep.berlios.de>

Author: piotrek
Date: 2012-01-10 21:58:15 +0100 (Tue, 10 Jan 2012)
New Revision: 1615

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieFilmweb.py
Log:
Filmweb movie plugin updated (thanks to mariusz2806)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-08 20:38:46 UTC (rev 1614)
+++ trunk/ChangeLog	2012-01-10 20:58:15 UTC (rev 1615)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 
+2012-01-10  Piotr O?arowski
+	* Filmweb movie plugin updated (thanks to mariusz2806)
+
 2012-01-08  Piotr O?arowski
 	* Telico import plugin added (thanks to Elan Ruusam?e)
 

Modified: trunk/lib/plugins/movie/PluginMovieFilmweb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmweb.py	2012-01-08 20:38:46 UTC (rev 1614)
+++ trunk/lib/plugins/movie/PluginMovieFilmweb.py	2012-01-10 20:58:15 UTC (rev 1615)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2011 Piotr O?arowski
+# Copyright (c) 2005-2012 Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -27,12 +27,12 @@
 plugin_name = 'Filmweb'
 plugin_description = 'Web pe?en film?w'
 plugin_url = 'filmweb.pl'
-plugin_url_other = 'm.filmweb.pl'
+plugin_url_other = 'filmweb.pl'
 plugin_server = '193.200.227.13'
 plugin_language = _('Polish')
 plugin_author = 'Piotr O?arowski, Bartosz Kurczewski, Mariusz Szczepanek'
 plugin_author_email = '<mariusz2806 at gmail.com>'
-plugin_version = '1.28'
+plugin_version = '1.29'
 
 
 class Plugin(movie.Movie):
@@ -50,11 +50,14 @@
 
     def get_o_title(self):
         self.url = self.url.replace(plugin_server, plugin_url)
-        self.o_title = gutils.trim(self.page, '<title>', '</title>')
-        if self.o_title.find('/') > -1:
-            self.o_title = gutils.trim(self.o_title, '/', '(')
-        if self.o_title.find('(') > -1:
-            self.o_title = gutils.before(self.o_title, '(')
+        self.o_title = gutils.trim(self.page, '<h2 class=origTitle>', '</h2>')
+        self.o_title = gutils.after(self.o_title, '</span>')
+        if self.o_title == '':
+            self.o_title = gutils.trim(self.page, '<title>', '</title>')
+            if self.o_title.find('(') > -1:
+                self.o_title = gutils.before(self.o_title, '(')
+            if self.o_title.find('/') > -1:
+                self.o_title = gutils.before(self.o_title, '/')
 
     def get_title(self):
         self.url = self.url.replace(plugin_server, plugin_url)
@@ -68,20 +71,12 @@
         self.director = gutils.trim(self.page, "re?yseria:", '</tr>')
         self.director = gutils.after(self.director, '</th>')
         self.director = self.director.replace("(wi?cej...)", '')
-        self.director = self.director.replace('  ', '\t')
-        self.director = self.director.replace("\t ", '')
-        self.director = self.director.replace("\t", '')
-        self.director = self.director.replace(',', ', ')
         self.director = gutils.strip_tags(self.director)
 
     def get_screenplay(self):
         self.screenplay = gutils.trim(self.page, "scenariusz:", '</tr>')
         self.screenplay = gutils.after(self.screenplay, '</th>')
         self.screenplay = self.screenplay.replace("(wi?cej...)", '')
-        self.screenplay = self.screenplay.replace('  ', '\t')
-        self.screenplay = self.screenplay.replace("\t ", '')
-        self.screenplay = self.screenplay.replace("\t", '')
-        self.screenplay = self.screenplay.replace(',', ', ')
         self.screenplay = gutils.strip_tags(self.screenplay)
 
     def get_plot(self):
@@ -114,26 +109,16 @@
 
     def get_genre(self):
         self.genre = gutils.trim(self.page, "gatunek:", '</tr>')
-        self.genre = self.genre.replace("\t", '')
-        self.genre = self.genre.replace("\n", '')
-        self.genre = self.genre.replace('  ', '')
-        self.genre = self.genre.replace(',', ', ')
 
     def get_cast(self):
         self.cast = gutils.trim(self.page, '<div class="castListWrapper cl">', '<div class="additional-info comBox">')
-        url = gutils.after(self.cast, '</ul>')
-        url = gutils.trim(url, 'href="', '"')
         self.cast = gutils.before(self.cast, '</ul>')
-        self.cast = self.cast.replace(chr(13), '')
-        self.cast = self.cast.replace(chr(10), '')
-        self.cast = self.cast.replace("  ", '\t')
-        self.cast = self.cast.replace("\t ", '')
-        self.cast = self.cast.replace('\t', '')
-        self.cast = self.cast.replace(" (", '(')
-        self.cast = self.cast.replace('(', " (")
+        self.cast = self.cast.replace('</span> ', '')
         self.cast = self.cast.replace('<div>', _(" as "))
         self.cast = self.cast.replace('</li>', "\n")
-        self.cast = self.cast.replace('</span> ', '')
+        self.cast = gutils.strip_tags(self.cast)
+        self.cast = self.cast.replace('   ', '')
+        self.cast = self.cast.replace('  ', ' ')
 
     def get_classification(self):
         self.classification = ''
@@ -151,11 +136,7 @@
         self.trailer = ''
 
     def get_country(self):
-        self.country = gutils.trim(self.page, '<dt>kraj', '</dd>')
-        self.country = self.country.replace('  ', '')
-        self.country = self.country.replace("e:", '')
-        self.country = self.country.replace(":", '')
-        self.country = self.country.replace("\t", '')
+        self.country = gutils.trim(self.page, 'produkcja:', '</tr>')
 
     def get_rating(self):
         self.rating = gutils.trim(self.page, '<div class=rates>', '</div>')



From piotrek at mail.berlios.de  Mon Jan 23 22:07:54 2012
From: piotrek at mail.berlios.de (piotrek at mail.berlios.de)
Date: Mon, 23 Jan 2012 22:07:54 +0100
Subject: [Griffith-svn] r1616 - trunk/lib
Message-ID: <20120123210754.B7C6F4824F3@sheep.berlios.de>

Author: piotrek
Date: 2012-01-23 22:07:53 +0100 (Mon, 23 Jan 2012)
New Revision: 1616

Modified:
   trunk/lib/initialize.py
   trunk/lib/main_treeview.py
Log:
cosmetics (PEP8 related)


Modified: trunk/lib/initialize.py
===================================================================
--- trunk/lib/initialize.py	2012-01-10 20:58:15 UTC (rev 1615)
+++ trunk/lib/initialize.py	2012-01-23 21:07:53 UTC (rev 1616)
@@ -50,14 +50,11 @@
     if defaultEnc is None:
         defaultEnc = 'UTF-8'
     locations = {}
-    locations['exec'] = os.path.abspath(os.path.dirname(sys.argv[0])) # deprecated
+    locations['exec'] = os.path.abspath(os.path.dirname(sys.argv[0]))  # deprecated
     locations['lib'] = os.path.dirname(__file__)
     locations['home'] = home_dir
 
-    if os.name == 'nt' or os.name.startswith('win'): # win32, win64
-        import winshell
-        from win32com.shell import shellcon, shell
-
+    if os.name == 'nt' or os.name.startswith('win'):  # win32, win64
         locations['movie_plugins'] = "%s\\lib\\plugins\\movie" % locations['exec']
         locations['export_plugins'] = "%s\\lib\\plugins\\export" % locations['exec']
         locations['images'] = "%s\\images" % locations['exec']
@@ -165,6 +162,7 @@
         self.widgets['extensions']['toolbar_hb'].show()
         self.widgets['menu']['ext_toolbar'].set_active(True)
 
+
 def treeview(self):
     import main_treeview
     # set up the treeview to do multiple selection
@@ -174,7 +172,7 @@
     tree.set_headers_visible(True)
     tree.get_selection().set_mode(gtk.SELECTION_MULTIPLE)
     self.widgets['treeview'].get_selection().connect("changed", main_treeview.on_tree_selection, self)
-    
+
     # number column
     renderer = gtk.CellRendererText()
     self.number_column = gtk.TreeViewColumn(_('No.'), renderer, text=0)
@@ -280,6 +278,7 @@
     self.updated_column.set_alignment(0.5)
     self.updated_column.set_reorderable(True)
     self.widgets['treeview'].append_column(self.updated_column)
+
     # reflect saved column order and column sizes
     columnorder = self.config.get('columnorder', None, section='mainlist')
     if columnorder:
@@ -319,7 +318,7 @@
     self.total = self.db.session.query(db.Movie).count()
     self.widgets['treeview'].set_search_equal_func(search_func_treeview)
     self.widgets['treeview'].show()
-    
+
     # adding some completion fields - TODO: move it to initialize
     self.completion = gtk.EntryCompletion()
     self.widgets['add']['o_title'].set_completion(self.completion)
@@ -331,14 +330,15 @@
     self.completion_t.set_model(self.treemodel)
     self.completion_t.set_text_column(4)
 
+
 def search_func_treeview(model, column, key, iter):
-    return not (str(model.get_value(iter, 0)).startswith(key) or 
-        str(model.get_value(iter, 2)).lower().startswith(key.lower()) or 
+    return not (str(model.get_value(iter, 0)).startswith(key) or
+        str(model.get_value(iter, 2)).lower().startswith(key.lower()) or
         str(model.get_value(iter, 3)).lower().startswith(key.lower()))
 
 
 def loans_treeview(self):
-    self.loans_treemodel = gtk.TreeStore(str, str, str) # move to self.widgets
+    self.loans_treemodel = gtk.TreeStore(str, str, str)  # move to self.widgets
     self.widgets['movie']['loan_history'].set_model(self.loans_treemodel)
     self.widgets['movie']['loan_history'].set_headers_visible(True)
     # loan date
@@ -540,7 +540,7 @@
     for i in fields_to_import:
         j = j + 1
         w['fields'][i] = gtk.CheckButton(self.field_names[i])
-        w['fields'][i].set_active(True) # TODO: get from config
+        w['fields'][i].set_active(True)  # TODO: get from config
         if j <= k:
             w['box_import_1'].add(w['fields'][i])
         elif j <= 2 * k:
@@ -583,7 +583,6 @@
 def extension_preferences(self, module, enabled):
     # preferences window
     p_vbox = self.widgets['extensions']['preferences_vbox']
-
     configwidgets = {}
 
     label = "%s v%s <i>(%s &lt;%s&gt;)</i>" % (module.name, module.version, module.author, module.email)
@@ -665,7 +664,7 @@
     if hasattr(self, 'extensions'):
         for ext in self.extensions:
             ext.clear()
-    self.extensions = [] # deletes previous instances
+    self.extensions = []  # deletes previous instances
 
     for ext_name in plugins.extensions.by_name:
         ext_module = plugins.extensions.by_name[ext_name]
@@ -730,7 +729,7 @@
     pos_to_activate = 0
     selected_criteria = self.config.get('criteria', None, section='mainlist')
     self.search_criteria_sorted = sorted((self.field_names[criteria], criteria) for criteria in self.search_criteria)
-    self.search_criteria_sorted.insert( 0, ( _('Any'), 'any' ) ) 
+    self.search_criteria_sorted.insert(0, (_('Any'), 'any'))
     for (criterianame, criteria) in self.search_criteria_sorted:
         self.widgets['filter']['criteria'].insert_text(i, criterianame)
         if selected_criteria == criterianame:
@@ -745,12 +744,12 @@
             self.widgets['preferences']['sortby'].insert_text(i, _('Last added'))
         i += 1
     self.widgets['preferences']['sortby'].set_wrap_width(3)
-    self.widgets['preferences']['sortby'].set_active(0) # Number
+    self.widgets['preferences']['sortby'].set_active(0)  # Number
 
 
 def dictionaries(self):
     """initializes data filled dynamically by users"""
-    self.am_tags = {} # dictionary for tag CheckBoxes
+    self.am_tags = {}  # dictionary for tag CheckBoxes
     update_volume_combo_ids(self)
     update_collection_combo_ids(self)
     fill_volumes_combo(self)
@@ -765,7 +764,7 @@
     vcodec_combos(self)
     media_combos(self)
     create_tag_vbox(self, widget=self.widgets['add']['tag_vbox'], tab=self.am_tags)
-    self.sort_criteria = [ # "[]" because of index()
+    self.sort_criteria = [  # "[]" because of index()
         'number', 'o_title', 'title', 'director', 'year', 'runtime', 'country',
         'genre', 'studio', 'media_num', 'rating', 'classification', 'collection_id',
         'volume_id', 'cond', 'layers', 'region', 'movie_id']
@@ -921,7 +920,7 @@
 
 def fill_volumes_combo(self, default=0):
     _tmp = self.initialized
-    self.initialized = False # don't refresh main treeview
+    self.initialized = False  # don't refresh main treeview
     self.widgets['add']['volume'].get_model().clear()
     for i in self.volume_combo_ids:
         vol_id = self.volume_combo_ids[i]
@@ -940,7 +939,7 @@
 
 def fill_collections_combo(self, default=0):
     _tmp = self.initialized
-    self.initialized = False # don't refresh main treeview
+    self.initialized = False  # don't refresh main treeview
     self.widgets['add']['collection'].get_model().clear()
     self.widgets['filter']['collection'].get_model().clear()
     for i in self.collection_combo_ids:
@@ -964,9 +963,9 @@
 
 def fill_advfilter_combo(self):
     _tmp = self.initialized
-    self.initialized = False # don't refresh main treeview
+    self.initialized = False  # don't refresh main treeview
     self.widgets['filter']['advfilter'].get_model().clear()
-    self.widgets['filter']['advfilter'].insert_text(0, '') # empty one
+    self.widgets['filter']['advfilter'].insert_text(0, '')  # empty one
     for i, item in enumerate(self.db.session.query(db.Filter.name).order_by(db.Filter.name).all()):
         # add some white spaces to prevent scrollbar hides parts of the names
         self.widgets['filter']['advfilter'].insert_text(i + 1, item.name + '   ')
@@ -977,7 +976,7 @@
 
 def fill_preferences_tags_combo(self):
     _tmp = self.initialized
-    self.initialized = False # don't refresh main treeview
+    self.initialized = False  # don't refresh main treeview
     self.widgets['preferences']['tag_name'].get_model().clear()
     self.tags_ids = {}
     for i, tag in enumerate(self.db.session.query(db.Tag.name, db.Tag.tag_id).all()):
@@ -990,7 +989,7 @@
 
 def fill_resolutions_combo(self, default=0):
     _tmp = self.initialized
-    self.initialized = False # don't refresh main treeview
+    self.initialized = False  # don't refresh main treeview
     self.widgets['add']['resolution'].get_model().clear()
     #resolutions = [names[0] for names in db._movie.res_aliases.values()]
     resolutions = [names[0] for (res, names) in db._movie.res_aliases.iteritems()]
@@ -1086,7 +1085,7 @@
     self.widgets['preferences']['media'].show_all()
     if self.config.has_key('media', section='defaults'):
         pos = gutils.findKey(self.config.get('media', section='defaults'), self.media_ids)
-        if pos  is not None:
+        if pos is not None:
             self.widgets['preferences']['media'].set_active(int(pos))
         else:
             self.widgets['preferences']['media'].set_active(0)
@@ -1138,7 +1137,7 @@
 
 
 def remove_hbox(self, widget, tab):
-    number = len(widget.get_children())-1    # last box number
+    number = len(widget.get_children()) - 1  # last box number
     try:
         tab.pop()
         widget.remove(widget.get_children().pop())

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2012-01-10 20:58:15 UTC (rev 1615)
+++ trunk/lib/main_treeview.py	2012-01-23 21:07:53 UTC (rev 1616)
@@ -24,7 +24,6 @@
 import logging
 import os
 import gtk
-from sqlalchemy import select, desc
 from sqlalchemy.sql.expression import Select
 import db
 import gutils
@@ -32,12 +31,13 @@
 
 log = logging.getLogger("Griffith")
 
+
 def on_tree_selection(tree_selection, self):
     counts = tree_selection.count_selected_rows()
     treeview_selection_on_event(self, self.widgets['treeview'])
     treemodel, selected = tree_selection.get_selected_rows()
     self.selected_iter = [treemodel.get_iter(path) for path in selected]
-    
+
     if counts == 1:
         # TODO: rewrite me
         self.widgets['menu']['clone'].set_sensitive(True)
@@ -62,14 +62,17 @@
         self.widgets['popups']['print_cover'].set_sensitive(False)
     treeview_clicked(self)
 
+
 def foreach_treeview_selected(model, path, iter, selected):
     selected.append(model.get_value(iter, 0))
 
-def treeview_selection_on_event(self, treeview, iter = False):
+
+def treeview_selection_on_event(self, treeview, iter=False):
     self.selected = []
     treeview.get_selection().selected_foreach(foreach_treeview_selected, self.selected)
     #return selected
 
+
 def treeview_clicked(self):
     if self.initialized is False:
         return False
@@ -89,7 +92,8 @@
     else:
         return False
 
-def set_details(self, item=None):#{{{
+
+def set_details(self, item=None):  # {{{
     if item is None:
         item = {}
     if 'movie_id' in item and item['movie_id']:
@@ -127,7 +131,7 @@
             w['resolution'].set_text(item['resolution'])
         elif 'height' in item and item['height'] and 'width' in item and item['width']:
             w['resolution'].set_text("%dx%d" % (item['width'], item['height']))
-        else: # fallback to 'resolution'
+        else:  # fallback to 'resolution'
             w['resolution'].set_text(item['resolution'])
     else:
         w['resolution'].set_text('')
@@ -172,10 +176,10 @@
         else:
             log.info("Wrong value in 'region' field (movie_id=%s, region=%s)" % (item['movie_id'], item['region']))
             w['region'].set_text('')
-            self.widgets['tooltips'].set_tip(w['region'], self._regions[0]) # N/A
+            self.widgets['tooltips'].set_tip(w['region'], self._regions[0])  # N/A
     else:
         w['region'].set_text('')
-        self.widgets['tooltips'].set_tip(w['region'], self._regions[0]) # N/A
+        self.widgets['tooltips'].set_tip(w['region'], self._regions[0])  # N/A
     if 'layers' in item and item['layers']:
         if str(item['layers']) in [str(i) for i in range(len(self._layers))]:
             w['layers'].set_markup("<i>%s</i>" % self._layers[item['layers']])
@@ -303,7 +307,7 @@
             self.loan_date = str(item.loan_details.date)
             w['loan_info'].set_use_markup(False)
             w['loan_info'].set_label(_("This movie has been loaned to %s on %s") % (self.person_name, self.loan_date[:10]))
-    if 'loaned' in item and not item['loaned']: # "loaned" status can be changed above, so don't use "else:" in this line
+    if 'loaned' in item and not item['loaned']:  # "loaned" status can be changed above, so don't use "else:" in this line
         self.widgets['popups']['loan'].set_sensitive(True)
         self.widgets['popups']['email'].set_sensitive(False)
         self.widgets['popups']['return'].set_sensitive(False)
@@ -358,7 +362,7 @@
         i.destroy()
     if 'languages' in item and len(item['languages']) > 0:
         for i in item['languages']:
-            if i.type == 3: # subtitles
+            if i.type == 3:  # subtitles
                 if i.subformat:
                     tmp = "%s - %s" % (i.language.name, i.subformat.name)
                 else:
@@ -390,21 +394,21 @@
         tmp = ''
         for tag in item['tags']:
             tmp += "%s, " % tag.name
-        tmp = tmp[:-2] # cut last comma
+        tmp = tmp[:-2]  # cut last comma
         w['tags'].set_text(tmp)
     #}}}
 
 
-def populate(self, movies=None, where=None, qf=True):#{{{
-    if self.initialized is False: # dont try to fill movie list if Griffith is not initialized yet
+def populate(self, movies=None, where=None, qf=True):  # {{{
+    if self.initialized is False:  # dont try to fill movie list if Griffith is not initialized yet
         return False
 
-    if qf and movies is None or isinstance(movies, Select): # if ".execute().fetchall()" not invoked on movies yet
-        if not where: # due to possible 'seen', 'loaned', 'collection_id' in where
+    if qf and movies is None or isinstance(movies, Select):  # if ".execute().fetchall()" not invoked on movies yet
+        if not where:  # due to possible 'seen', 'loaned', 'collection_id' in where
             import advfilter
 
             # saved in advfilter
-            name = self.widgets['filter']['advfilter'].get_active_text()[:-3].decode('utf-8') # :-3 due to additional '   ' in the name
+            name = self.widgets['filter']['advfilter'].get_active_text()[:-3].decode('utf-8')  # :-3 due to additional '   ' in the name
             if name:
                 cond = self.db.session.query(db.Filter).filter_by(name=name).first()
                 if not cond:
@@ -529,13 +533,15 @@
     self.count_statusbar()
 #}}}
 
-def addmovie(self, movie): #{{{
+
+def addmovie(self, movie):  # {{{
     myiter = self.treemodel.append(None)
     setmovie(self, movie, myiter)
     return myiter
 #}}}
 
-def setmovie(self, movie, iter, treemodel = None): #{{{
+
+def setmovie(self, movie, iter, treemodel=None):  # {{{
     if not treemodel:
         treemodel = self.treemodel
 
@@ -573,7 +579,8 @@
     return iter
 #}}}
 
-def select(self, iter, ensurevisible = True): #{{{
+
+def select(self, iter, ensurevisible=True):  # {{{
     if iter:
         self.widgets['treeview'].get_selection().select_iter(iter)
         if ensurevisible:



From piotrek at mail.berlios.de  Mon Jan 23 22:24:19 2012
From: piotrek at mail.berlios.de (piotrek at mail.berlios.de)
Date: Mon, 23 Jan 2012 22:24:19 +0100
Subject: [Griffith-svn] r1617 - trunk/lib
Message-ID: <20120123212420.04C454824F3@sheep.berlios.de>

Author: piotrek
Date: 2012-01-23 22:24:19 +0100 (Mon, 23 Jan 2012)
New Revision: 1617

Modified:
   trunk/lib/initialize.py
Log:
add bool type to extension preferences


Modified: trunk/lib/initialize.py
===================================================================
--- trunk/lib/initialize.py	2012-01-23 21:07:53 UTC (rev 1616)
+++ trunk/lib/initialize.py	2012-01-23 21:24:19 UTC (rev 1617)
@@ -614,6 +614,9 @@
             w.insert_text(value)
             # TODO: min, max
         # elif type is int: # TODO
+        elif type_ is bool:
+            w = gtk.CheckButton()
+            w.set_active(bool(value))
         elif isinstance(type_, (list, tuple, dict)):
             model = gtk.TreeStore(str, str)
             if isinstance(type_, dict):



From mikej06 at mail.berlios.de  Sun Jan 29 20:05:00 2012
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 29 Jan 2012 20:05:00 +0100
Subject: [Griffith-svn] r1618 - in trunk: . lib/plugins/movie
Message-ID: <20120129190500.EA79348141E@sheep.berlios.de>

Author: mikej06
Date: 2012-01-29 20:05:00 +0100 (Sun, 29 Jan 2012)
New Revision: 1618

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieAmazon.py
Log:
[#923416] Connection failed. (Amazon plugin)

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-23 21:24:19 UTC (rev 1617)
+++ trunk/ChangeLog	2012-01-29 19:05:00 UTC (rev 1618)
@@ -2,9 +2,12 @@
 
 Griffith ChangeLog
 ------------------
-(c) 2005-2011  Vasco Nunes, Piotr O?arowski
+(c) 2005-2012  Vasco Nunes, Piotr O?arowski
 
 
+2012-01-29  Michael Jahn
+	* [#923416] Connection failed. (Amazon plugin)
+	
 2012-01-10  Piotr O?arowski
 	* Filmweb movie plugin updated (thanks to mariusz2806)
 

Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2012-01-23 21:24:19 UTC (rev 1617)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2012-01-29 19:05:00 UTC (rev 1618)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2006-2009
+# Copyright (c) 2006-2012
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -125,7 +125,9 @@
             if hasattr(self.page.EditorialReviews, 'EditorialReview'):
                 if isSequenceType(self.page.EditorialReviews.EditorialReview):
                     for review in self.page.EditorialReviews.EditorialReview:
-                        if string.find(review.Source, 'Amazon') > -1:
+                        if hasattr(review, 'Source') and \
+                            hasattr(review, 'Content') and \
+                            string.find(review.Source, 'Amazon') > -1:
                             self.plot = review.Content
                 else:
                     if hasattr(self.page.EditorialReviews.EditorialReview, 'Source') and \


Property changes on: trunk/lib/plugins/movie/PluginMovieAmazon.py
___________________________________________________________________
Added: svn:keywords
   + Id



From mikej06 at mail.berlios.de  Sun Jan 29 20:11:45 2012
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 29 Jan 2012 20:11:45 +0100
Subject: [Griffith-svn] r1619 - in trunk: . lib
Message-ID: <20120129191145.EAF7B48141E@sheep.berlios.de>

Author: mikej06
Date: 2012-01-29 20:11:45 +0100 (Sun, 29 Jan 2012)
New Revision: 1619

Modified:
   trunk/ChangeLog
   trunk/lib/edit.py
Log:
[#913299] importing covers gives list index out of range

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-29 19:05:00 UTC (rev 1618)
+++ trunk/ChangeLog	2012-01-29 19:11:45 UTC (rev 1619)
@@ -7,7 +7,8 @@
 
 2012-01-29  Michael Jahn
 	* [#923416] Connection failed. (Amazon plugin)
-	
+	* [#913299] importing covers gives list index out of range
+
 2012-01-10  Piotr O?arowski
 	* Filmweb movie plugin updated (thanks to mariusz2806)
 

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2012-01-29 19:05:00 UTC (rev 1618)
+++ trunk/lib/edit.py	2012-01-29 19:11:45 UTC (rev 1619)
@@ -152,5 +152,5 @@
 def update_tree_thumbnail(self, t_image_path):
     self.Image.set_from_file(t_image_path)
     pixbuf = self.Image.get_pixbuf()
-    if self.selected_iter[0]:
+    if len(self.selected_iter) > 0 and self.selected_iter[0]:
         self.treemodel.set_value(self.selected_iter[0], 1, pixbuf)
\ No newline at end of file



From mikej06 at mail.berlios.de  Sun Jan 29 20:28:38 2012
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 29 Jan 2012 20:28:38 +0100
Subject: [Griffith-svn] r1620 - in trunk: . lib/plugins/imp
Message-ID: <20120129192838.D75A748141E@sheep.berlios.de>

Author: mikej06
Date: 2012-01-29 20:28:38 +0100 (Sun, 29 Jan 2012)
New Revision: 1620

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/imp/__init__.py
Log:
[#913283] importer: 'poster' overwritten by 'image'

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2012-01-29 19:11:45 UTC (rev 1619)
+++ trunk/ChangeLog	2012-01-29 19:28:38 UTC (rev 1620)
@@ -8,6 +8,7 @@
 2012-01-29  Michael Jahn
 	* [#923416] Connection failed. (Amazon plugin)
 	* [#913299] importing covers gives list index out of range
+	* [#913283] importer: 'poster' overwritten by 'image'
 
 2012-01-10  Piotr O?arowski
 	* Filmweb movie plugin updated (thanks to mariusz2806)

Modified: trunk/lib/plugins/imp/__init__.py
===================================================================
--- trunk/lib/plugins/imp/__init__.py	2012-01-29 19:11:45 UTC (rev 1619)
+++ trunk/lib/plugins/imp/__init__.py	2012-01-29 19:28:38 UTC (rev 1620)
@@ -181,14 +181,11 @@
                             tags = details.pop('tags')
                         else:
                             tags = None
+                        poster = None
                         if 'poster' in details:
                             poster = details.pop('poster')
-                        else:
-                            poster = None
-                        if 'image' in details:
+                        elif 'image' in details:
                             poster = details.pop('image')
-                        else:
-                            poster = None
                         try:
                             # optional: do mapping of lookup data
                             if not self.foreignkeymaps:



