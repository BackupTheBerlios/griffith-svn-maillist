From mikej06 at mail.berlios.de  Fri Jul  3 16:12:59 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 3 Jul 2009 16:12:59 +0200
Subject: [Griffith-svn] r1233 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200907031412.n63ECxoH024241@sheep.berlios.de>

Author: mikej06
Date: 2009-07-03 16:12:47 +0200 (Fri, 03 Jul 2009)
New Revision: 1233

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieIMDB.py
Log:
updated IMDb plugin

Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2009-06-22 18:07:35 UTC (rev 1232)
+++ branches/0.9.x/ChangeLog	2009-07-03 14:12:47 UTC (rev 1233)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-03  Michael Jahn
+	* updated IMDb plugin
+
 2009-05-24  Michael Jahn
 	* updated CineMovies, FilmAffinity, FilmDb, OFDb plugin
 

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2009-06-22 18:07:35 UTC (rev 1232)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2009-07-03 14:12:47 UTC (rev 1233)
@@ -30,13 +30,13 @@
 plugin_language     = _('English')
 plugin_author       = 'Vasco Nunes, Piotr O?arowski'
 plugin_author_email = 'griffith-private at lists.berlios.de'
-plugin_version      = '1.8'
+plugin_version      = '1.9'
 
 class Plugin(movie.Movie):
 	def __init__(self, id):
 		self.encode   = 'iso8859-1'
 		self.movie_id = id
-		self.url      = "http://imdb.com/title/tt%s" % str(self.movie_id)
+		self.url      = "http://imdb.com/title/tt%s" % self.movie_id
 
 	def initialize(self):
 		self.cast_page = self.open_page(url=self.url + '/fullcredits')
@@ -60,11 +60,13 @@
 			self.title = re.sub('[(].*', '', gutils.trim(self.page, '<title>', '</title>'))
 
 	def get_director(self):
-		pattern = re.compile('<h5>Director[s]*?:</h5>[\n\s\r]*(.*?)(?:<br/>)?(?:<a[^>]+>more</a>)?[\n]*</div')
-		result = pattern.search(self.page)
-		if result:
-			self.director = result.groups()[0]
-			self.director = self.director.replace('<br/>', ', ')
+		self.director = ''
+		parts = re.split('<a href=', gutils.trim(self.cast_page, '>Directed by<', '</table>'))
+		if len(parts) > 1:
+			for part in parts[1:]:
+				director = gutils.trim(part, '>', '<')
+				self.director = self.director + director + ', '
+			self.director = self.director[0:len(self.director) - 2]
 
 	def get_plot(self):
 		self.plot = self.regextrim(self.page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
@@ -96,8 +98,8 @@
 		self.cast = string.replace(self.cast, ' ... ', _(' as '))
 		self.cast = string.replace(self.cast, '...', _(' as '))
 		self.cast = string.replace(self.cast, '</tr><tr>', "\n")
-		self.cast = string.replace(self.cast, '</tr><tr class="even">', "\n")
-		self.cast = string.replace(self.cast, '</tr><tr class="odd">', "\n")
+		self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+		self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
 		self.cast = self.__before_more(self.cast)
 
 	def get_classification(self):
@@ -204,7 +206,7 @@
 		self.open_search(parent_window)
 		tmp_page = gutils.trim(self.page, 'Here are the', '</TABLE>')
 		if not tmp_page:
-			has_results = re.match('[(]Displaying [1-9][0-7]* Results[)]', self.page)
+			has_results = re.match('[(]Displaying [1-9][0-7]* Result[s]*[)]', self.page)
 			if not has_results:
 				# nothing or one result found, try another url which looks deeper in the imdb database
 				# example: Adventures of Falcon -> one result, jumps directly to the movie page
@@ -212,7 +214,7 @@
 				self.url = 'http://www.imdb.com/find?more=tt;q='
 				if not self.open_search(parent_window):
 					return None
-			self.page = gutils.trim(self.page, '(Displaying', '<b>Suggestions For Improving Your Results</b>')
+			self.page = gutils.trim(self.page, '(Displaying', '>Suggestions For Improving Your Results<')
 		else:
 			self.page = tmp_page
 		self.page = self.page.decode('iso-8859-1')
@@ -247,8 +249,8 @@
 	# dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
 	#
 	test_configuration = {
-		'Rocky Balboa'         : [ 16, 16 ],
-		'Ein gl?ckliches Jahr' : [ 21, 21 ]
+		'Rocky Balboa'         : [ 15, 15 ],
+		'Ein gl?ckliches Jahr' : [ 22, 22 ]
 	}
 
 class PluginTest:

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-06-22 18:07:35 UTC (rev 1232)
+++ trunk/ChangeLog	2009-07-03 14:12:47 UTC (rev 1233)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-03  Michael Jahn
+	* updated IMDb plugin
+
 ---- 0.10-beta3 ----
 
 2009-06-11  Piotr O?arowski

Modified: trunk/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB.py	2009-06-22 18:07:35 UTC (rev 1232)
+++ trunk/lib/plugins/movie/PluginMovieIMDB.py	2009-07-03 14:12:47 UTC (rev 1233)
@@ -30,7 +30,7 @@
 plugin_language     = _('English')
 plugin_author       = 'Vasco Nunes, Piotr O?arowski'
 plugin_author_email = 'griffith-private at lists.berlios.de'
-plugin_version      = '1.8'
+plugin_version      = '1.9'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -60,11 +60,13 @@
             self.title = re.sub('[(].*', '', gutils.trim(self.page, '<title>', '</title>'))
 
     def get_director(self):
-        pattern = re.compile('<h5>Director[s]*?:</h5>[\n\s\r]*(.*?)(?:<br/>)?(?:<a[^>]+>more</a>)?[\n]*</div')
-        result = pattern.search(self.page)
-        if result:
-            self.director = result.groups()[0]
-            self.director = self.director.replace('<br/>', ', ')
+        self.director = ''
+        parts = re.split('<a href=', gutils.trim(self.cast_page, '>Directed by<', '</table>'))
+        if len(parts) > 1:
+            for part in parts[1:]:
+                director = gutils.trim(part, '>', '<')
+                self.director = self.director + director + ', '
+            self.director = self.director[0:len(self.director) - 2]
 
     def get_plot(self):
         self.plot = gutils.regextrim(self.page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
@@ -96,8 +98,8 @@
         self.cast = string.replace(self.cast, ' ... ', _(' as '))
         self.cast = string.replace(self.cast, '...', _(' as '))
         self.cast = string.replace(self.cast, '</tr><tr>', "\n")
-        self.cast = string.replace(self.cast, '</tr><tr class="even">', "\n")
-        self.cast = string.replace(self.cast, '</tr><tr class="odd">', "\n")
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
         self.cast = self.__before_more(self.cast)
 
     def get_classification(self):
@@ -167,13 +169,17 @@
 
     def get_screenplay(self):
         self.screenplay = ''
-        pattern = re.compile('<h5>Writer[s]*?(?:[ \t]+<a href="/wga">[(]WGA[)]</a>)*?:</h5>[\n\s\r]*(.*?)(?:<br/>)?(?:<a[^>]+>more</a>)?[\n]*</div')
-        result = pattern.search(self.page)
-        if result:
-            self.screenplay = result.groups()[0]
-            self.screenplay = self.screenplay.replace(' (written by)', '')
-            self.screenplay = self.screenplay.replace(' and<', '<')
-            self.screenplay = self.screenplay.replace('<br/>', ', ')
+        parts = re.split('<a href=', gutils.trim(self.cast_page, '>Writing credits<', '</table>'))
+        if len(parts) > 1:
+            for part in parts[1:]:
+                screenplay = gutils.trim(part, '>', '<')
+                if screenplay == 'WGA':
+                    continue
+                screenplay = screenplay.replace(' (written by)', '')
+                screenplay = screenplay.replace(' and<', '<')
+                self.screenplay = self.screenplay + screenplay + ', '
+            if len(self.screenplay) > 2:
+                self.screenplay = self.screenplay[0:len(self.screenplay) - 2]
 
     def get_cameraman(self):
         self.cameraman = ''
@@ -205,7 +211,7 @@
             return None
         tmp_page = gutils.trim(self.page, 'Here are the', '</TABLE>')
         if not tmp_page:
-            has_results = re.match('[(]Displaying [1-9][0-7]* Results[)]', self.page)
+            has_results = re.match('[(]Displaying [1-9][0-7]* Result[s]*[)]', self.page)
             if not has_results:
                 # nothing or one result found, try another url which looks deeper in the imdb database
                 # example: Adventures of Falcon -> one result, jumps directly to the movie page
@@ -213,7 +219,7 @@
                 self.url = 'http://www.imdb.com/find?more=tt;q='
                 if not self.open_search(parent_window):
                     return None
-            self.page = gutils.trim(self.page, '(Displaying', '<b>Suggestions For Improving Your Results</b>')
+            self.page = gutils.trim(self.page, '(Displaying', '>Suggestions For Improving Your Results<')
         else:
             self.page = tmp_page
         self.page = self.page.decode('iso-8859-1')
@@ -248,8 +254,8 @@
     # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
     #
     test_configuration = {
-        'Rocky Balboa'         : [ 16, 16 ],
-        'Ein gl?ckliches Jahr' : [ 21, 21 ]
+        'Rocky Balboa'         : [ 15, 15 ],
+        'Ein gl?ckliches Jahr' : [ 22, 22 ]
     }
 
 class PluginTest:



From mikej06 at mail.berlios.de  Fri Jul  3 23:07:04 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 3 Jul 2009 23:07:04 +0200
Subject: [Griffith-svn] r1234 - in trunk: . lib/plugins/imp
Message-ID: <200907032107.n63L74GG013784@sheep.berlios.de>

Author: mikej06
Date: 2009-07-03 23:06:47 +0200 (Fri, 03 Jul 2009)
New Revision: 1234

Added:
   trunk/lib/plugins/imp/AMC.py
Modified:
   trunk/ChangeLog
Log:
added Ant Movie Catalog import plugin

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-03 14:12:47 UTC (rev 1233)
+++ trunk/ChangeLog	2009-07-03 21:06:47 UTC (rev 1234)
@@ -7,6 +7,7 @@
 
 2009-07-03  Michael Jahn
 	* updated IMDb plugin
+	* added Ant Movie Catalog import plugin
 
 ---- 0.10-beta3 ----
 

Added: trunk/lib/plugins/imp/AMC.py
===================================================================
--- trunk/lib/plugins/imp/AMC.py	2009-07-03 14:12:47 UTC (rev 1233)
+++ trunk/lib/plugins/imp/AMC.py	2009-07-03 21:06:47 UTC (rev 1234)
@@ -0,0 +1,267 @@
+# -*- coding: utf-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2009
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+from plugins.imp import ImportPlugin as IP
+import os
+import sys
+import gutils
+import string
+import struct
+import logging
+log = logging.getLogger("Griffith")
+
+# format:
+#  LFFNR -> length field for next record
+# field name        size in bytes
+#--------------------------------
+# Number            4
+# Date              4
+# Rating            4
+# Year              4
+# Length            4
+# VideoBitrate      4
+# AudioBitrate      4
+# Disks             4
+# Checked           1
+# LFFNR             4
+# Media             LFFNR
+# LFFNR             4       # since V 3.3
+# MediaType         LFFNR   # since V 3.3
+# LFFNR             4       # since V 3.3
+# MediaSource       LFFNR   # since V 3.3
+# LFFNR             4
+# Borrower          LFFNR
+# LFFNR             4
+# OriginalTitle     LFFNR
+# LFFNR             4
+# TranslatedTitle   LFFNR
+# LFFNR             4
+# Director          LFFNR
+# LFFNR             4
+# Producer          LFFNR
+# LFFNR             4
+# Country           LFFNR
+# LFFNR             4
+# Category          LFFNR
+# LFFNR             4
+# Actors            LFFNR
+# LFFNR             4
+# URL               LFFNR
+# LFFNR             4
+# Description       LFFNR
+# LFFNR             4
+# Comments          LFFNR
+# LFFNR             4
+# VideoFormat       LFFNR
+# LFFNR             4
+# AudioFormat       LFFNR
+# LFFNR             4
+# Resolution        LFFNR
+# LFFNR             4
+# Framerate         LFFNR
+# LFFNR             4
+# Languages         LFFNR
+# LFFNR             4
+# Subtitles         LFFNR
+# LFFNR             4
+# Size              LFFNR
+# LFFNR             4
+# Picture           LFFNR
+# LFFNR             4
+# PictureData       LFFNR
+
+class ImportPlugin(IP):
+    description  = _('Ant Movie Catalog (version 3.5)')
+    author       = 'Michael Jahn'
+    email        = 'griffith-private at lists.berlios.de'
+    version      = '1.0'
+    file_filters = '*.[aA][mM][cC]'
+    mime_types   = None
+
+    fileHeader   = ' AMC_?.? Ant Movie Catalog         www.buypin.com  www.ant.be.tf '
+    fileHeader31 = ' AMC_3.1 Ant Movie Catalog 3.1.x   www.buypin.com  www.ant.be.tf '
+    fileHeader33 = ' AMC_3.3 Ant Movie Catalog 3.3.x   www.buypin.com  www.ant.be.tf '
+    fileHeader35 = ' AMC_3.5 Ant Movie Catalog 3.5.x   www.buypin.com    www.antp.be '
+
+    fileversion  = 0
+    openfile     = None # for get_movie_details
+
+    def initialize(self):
+        if not IP.initialize(self):
+            return False
+        self.edit = False
+        return True
+    
+    def set_source(self, name):
+        IP.set_source(self, name)
+        self.filename = name
+        self.fileversion = self.read_fileversion()
+        if self.fileversion == None:
+            gutils.error(self, _('The format of the file is not supported.'))
+            return False
+        return True
+
+    def count_movies(self):
+        """Returns number of movies in file which is about to be imported"""
+        count = 0
+        nroffields = 23 # since V 3.3
+        ifile = open(self.filename, 'rb')
+        try:
+            # seek to first record
+            ifile.seek(len(self.fileHeader) + 16)
+            # count records
+            while True:
+                ifile.seek(33, os.SEEK_CUR)
+                i = 0
+                while i < nroffields:
+                    self.seekfield(ifile)
+                    i = i + 1
+                count = count + 1
+        except EOFError:
+            pass
+        except Exception, e:
+            log.error(str(e))
+        finally:
+            ifile.close()
+        return count
+
+    def get_movie_details(self):
+        """Returns dictionary with movie details"""
+        if self.openfile == None:
+            self.openfile = open(self.filename, 'rb')
+            # seek to first record
+            self.openfile.seek(len(self.fileHeader) + 16)
+        details = {}
+        try:
+            details['number'] = self.readintfield(self.openfile)        # Number            4
+            self.openfile.seek(4, os.SEEK_CUR)                          # Date              4
+            details['rating'] = self.readintfield(self.openfile)        # Rating            4
+            details['year'] = self.readintfield(self.openfile)          # Year              4
+            details['runtime'] = self.readintfield(self.openfile)       # Length            4
+            self.openfile.seek(4, os.SEEK_CUR)                          # VideoBitrate      4
+            self.openfile.seek(4, os.SEEK_CUR)                          # AudioBitrate      4
+            details['media_num'] = self.readintfield(self.openfile)     # Disks             4
+            details['seen'] = self.readboolfield(self.openfile)         # Checked           1
+            self.seekfield(self.openfile)                               # Media             LFFNR
+            if self.fileversion >= 3.3:
+                self.seekfield(self.openfile)                           # MediaType         LFFNR   # since V 3.3
+                self.seekfield(self.openfile)                           # MediaSource       LFFNR   # since V 3.3
+            self.seekfield(self.openfile)                               # Borrower          LFFNR
+            details['o_title'] = self.readstringfield(self.openfile)    # OriginalTitle     LFFNR
+            details['title'] = self.readstringfield(self.openfile)      # TranslatedTitle   LFFNR
+            details['director'] = self.readstringfield(self.openfile)   # Director          LFFNR
+            self.seekfield(self.openfile)                               # Producer          LFFNR
+            details['country'] = self.readstringfield(self.openfile)    # Country           LFFNR
+            details['genre'] = self.readstringfield(self.openfile)      # Category          LFFNR
+            details['cast'] = self.readstringfield(self.openfile)       # Actors            LFFNR
+            details['o_site'] = self.readstringfield(self.openfile)     # URL               LFFNR
+            details['plot'] = self.readstringfield(self.openfile)       # Description       LFFNR
+            details['notes'] = self.readstringfield(self.openfile)      # Comments          LFFNR
+            self.seekfield(self.openfile)                               # VideoFormat       LFFNR
+            self.seekfield(self.openfile)                               # AudioFormat       LFFNR
+            self.seekfield(self.openfile)                               # Resolution        LFFNR
+            self.seekfield(self.openfile)                               # Framerate         LFFNR
+            self.seekfield(self.openfile)                               # Languages         LFFNR
+            self.seekfield(self.openfile)                               # Subtitles         LFFNR
+            self.seekfield(self.openfile)                               # Size              LFFNR
+            self.seekfield(self.openfile)                               # Picture           LFFNR
+            self.seekfield(self.openfile)                               # PictureData       LFFNR
+            
+            if details['title'] == None:
+                details['title'] = details['o_title']
+            if details['o_title'] == None:
+                details['o_title'] = details['title']
+            if not details['cast'] == None:
+                details['cast'] = string.replace(details['cast'], ', ', '\n')
+            if self.fileversion >= 3.5:
+                if not details['rating'] == None:
+                    details['rating'] = round(float(details['rating']) / 10.0, 0)
+        except EOFError:
+            details = None
+        except Exception, e:
+            log.error(str(e))
+            details = None
+        return details
+
+    def clear(self):
+        """clear plugin before next source file"""
+        IP.clear(self)
+        if self.openfile:
+            self.openfile.close()
+            self.openfile = None
+            self.fileversion = 0
+
+    def destroy(self):
+        """close all resources"""
+        IP.destroy(self)
+
+    def read_fileversion(self):
+        version = None
+        header = ''
+        ifile = open(self.filename, 'rb')
+        try:
+            header = ifile.read(len(self.fileHeader))
+        finally:
+            ifile.close()
+        # no support for other versions at the moment
+        if header == self.fileHeader35:
+            version = 3.5
+        elif header == self.fileHeader33:
+            version = 3.3
+        elif header == self.fileHeader31:
+            version = 3.1
+        return version;
+
+    def seekfield(self, ifile):
+        lenStr = ifile.read(4)
+        if len(lenStr) < 4:
+            raise EOFError
+        lenTuple = struct.unpack('i', lenStr)
+        if lenTuple[0]:
+            ifile.seek(lenTuple[0], os.SEEK_CUR)
+
+    def readstringfield(self, ifile):
+        field = None
+        lenStr = ifile.read(4)
+        if len(lenStr) < 4:
+            raise EOFError
+        lenTuple = struct.unpack('i', lenStr)
+        if lenTuple[0]:
+            field = ifile.read(lenTuple[0]).decode('iso8859-1')
+        return field
+
+    def readintfield(self, ifile):
+        intStr = ifile.read(4)
+        if len(intStr) < 4:
+            raise EOFError
+        intTuple = struct.unpack('i', intStr)
+        if intTuple[0] == -1:
+            return None
+        return intTuple[0]
+
+    def readboolfield(self, ifile):
+        byteStr = ifile.read(1)
+        intValue = ord(byteStr[0])
+        if intValue == -1:
+            return None
+        return intValue != 0
\ No newline at end of file



From piotrek at mail.berlios.de  Sat Jul  4 14:09:34 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 14:09:34 +0200
Subject: [Griffith-svn] r1235 - in trunk: . lib
Message-ID: <200907041209.n64C9YcI020834@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 14:09:33 +0200 (Sat, 04 Jul 2009)
New Revision: 1235

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/db.py
   trunk/lib/version.py
Log:
* If Region 0 (no region data) is selected, save "0" in database otherwise default region will be used [#305123]
* Version changed to 0.10-beta3+svn


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-03 21:06:47 UTC (rev 1234)
+++ trunk/ChangeLog	2009-07-04 12:09:33 UTC (rev 1235)
@@ -5,6 +5,11 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-04  Piotr O?arowski
+	* Version changed to 0.10-beta3+svn
+	* If Region 0 (no region data) is selected, save "0" in database
+	  otherwise default region will be used [#305123]
+
 2009-07-03  Michael Jahn
 	* updated IMDb plugin
 	* added Ant Movie Catalog import plugin

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2009-07-03 21:06:47 UTC (rev 1234)
+++ trunk/lib/add.py	2009-07-04 12:09:33 UTC (rev 1235)
@@ -629,10 +629,10 @@
     for i in t_movies.keys():
         if t_movies[i] == '':
             t_movies[i] = None
-    for i in ['color','cond','layers','region', 'media', 'vcodec']:
+    for i in ('color', 'cond', 'layers', 'media', 'vcodec'):
         if t_movies.has_key(i) and t_movies[i] < 1:
             t_movies[i] = None
-    for i in ['volume_id','collection_id', 'runtime']:
+    for i in ('volume_id','collection_id', 'runtime'):
         if t_movies.has_key(i) and (t_movies[i] is None or int(t_movies[i]) == 0):
             t_movies[i] = None
     if allow_only is not None:

Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-03 21:06:47 UTC (rev 1234)
+++ trunk/lib/db.py	2009-07-04 12:09:33 UTC (rev 1235)
@@ -391,7 +391,7 @@
     'languages' : relation(MovieLang, cascade='all, delete-orphan')})
 mapper(Poster, posters_table, properties={
     'movies': relation(Movie),
-    'data'  :  deferred(posters_table.c.data)
+    'data'  : deferred(posters_table.c.data)
     })
 mapper(Filter, filters_table)
 #}}}

Modified: trunk/lib/version.py
===================================================================
--- trunk/lib/version.py	2009-07-03 21:06:47 UTC (rev 1234)
+++ trunk/lib/version.py	2009-07-04 12:09:33 UTC (rev 1235)
@@ -22,7 +22,7 @@
 # GNU General Public License, version 2 or later
 
 pname        = "Griffith"
-pversion     = "0.10-beta3"
+pversion     = "0.10-beta3+svn"
 pauthor      = "Vasco Nunes, Piotr O?arowski <griffith-private at lists.berlios.de>"
 pyear        = "2005-2009"
 pwebsite     = "http://www.griffith.cc/"



From piotrek at mail.berlios.de  Sat Jul  4 14:29:34 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 14:29:34 +0200
Subject: [Griffith-svn] r1236 - in trunk: . lib po
Message-ID: <200907041229.n64CTYl9022092@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 14:29:30 +0200 (Sat, 04 Jul 2009)
New Revision: 1236

Modified:
   trunk/ChangeLog
   trunk/lib/gemail.py
   trunk/po/bg.po
   trunk/po/ca.po
   trunk/po/cs.po
   trunk/po/da.po
   trunk/po/de.po
   trunk/po/el.po
   trunk/po/en_GB.po
   trunk/po/es.po
   trunk/po/et.po
   trunk/po/fa.po
   trunk/po/fi.po
   trunk/po/fr.po
   trunk/po/hu.po
   trunk/po/id.po
   trunk/po/it.po
   trunk/po/ja.po
   trunk/po/ko.po
   trunk/po/lv.po
   trunk/po/messages.pot
   trunk/po/nb.po
   trunk/po/nds.po
   trunk/po/nl.po
   trunk/po/oc.po
   trunk/po/pl.po
   trunk/po/ps.po
   trunk/po/pt.po
   trunk/po/pt_BR.po
   trunk/po/ru.po
   trunk/po/sk.po
   trunk/po/sr.po
   trunk/po/sv.po
   trunk/po/tr.po
   trunk/po/uk.po
   trunk/po/zh_CN.po
Log:
Mail content can be translated again (gettext issue fixed) 


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/ChangeLog	2009-07-04 12:29:30 UTC (rev 1236)
@@ -9,6 +9,7 @@
 	* Version changed to 0.10-beta3+svn
 	* If Region 0 (no region data) is selected, save "0" in database
 	  otherwise default region will be used [#305123]
+	* Mail content can be translated again (gettext issue fixed) 
 
 2009-07-03  Michael Jahn
 	* updated IMDb plugin

Modified: trunk/lib/gemail.py
===================================================================
--- trunk/lib/gemail.py	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/lib/gemail.py	2009-07-04 12:29:30 UTC (rev 1236)
@@ -73,9 +73,7 @@
                 use_auth, self.config.get('username', '', section='mail'), \
                 self.config.get('password', '', section='mail'), \
                 self.config.get('email', 'griffith', section='mail'), self.person_email, \
-                _("Movie loan reminder"), _("Hi, %s!\n\nJust to remind you " + \
-                "that I'm really needing the following movie I have loaned to you " + \
-                "recently:\n\n%s (%s)\n\nLoaned on %s") \
+                _("Movie loan reminder"), _("Hi, %s!\n\nJust to remind you that I'm really needing the following movie I have loaned to you recently:\n\n%s (%s)\n\nLoaned on %s") \
                 %(self.person_name, self.widgets['movie']['o_title'].get_text().decode('utf-8'), \
                 self.widgets['movie']['title'].get_text().decode('utf-8'), self.loan_date[:10]))
         except:

Modified: trunk/po/bg.po
===================================================================
--- trunk/po/bg.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/bg.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:19+0000\n"
 "Last-Translator: Emil Pavlov <emil.p.pavlov at gmail.com>\n"
 "Language-Team: Bulgarian <dict at fsa-bg.org>\n"
@@ -552,18 +552,20 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"??????????????????, %s!\n"
-"\n"
-"???????? ???? ???? ?????????????????? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "?????????????? ???? ???????? ???? ???????? ??????????????????. ????????, ?????????????????? ?????????????????????? ???? ???? ??-????????."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???????? ???????????????????? ???????????????????? ???????? ???? ???????? ??????????."
 
@@ -623,8 +625,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -692,8 +694,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "????????"
 
@@ -1272,14 +1274,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1328,6 +1324,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1413,13 +1415,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1564,6 +1566,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""
@@ -2491,6 +2501,15 @@
 msgid "Source"
 msgstr "????????????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "??????????????????, %s!\n"
+#~ "\n"
+#~ "???????? ???? ???? ?????????????????? "
+
 #~ msgid "This name is already in use!"
 #~ msgstr "???????? ?????? ???????? ???? ????????????????!"
 

Modified: trunk/po/ca.po
===================================================================
--- trunk/po/ca.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/ca.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:38+0000\n"
 "Last-Translator: el_libre XDDDDDDDDDDDDDDDDDDDDDDDDDDD <el.libre at gmail.com>\n"
 "Language-Team: Catalan <ca at li.org>\n"
@@ -551,14 +551,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -618,8 +623,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Idioma"
 
@@ -687,8 +692,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Color"
 
@@ -1260,14 +1265,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1316,6 +1315,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1401,13 +1406,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>??udio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1552,6 +1557,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/cs.po
===================================================================
--- trunk/po/cs.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/cs.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:55+0000\n"
 "Last-Translator: Petr Pulc <petrpulc at gmail.com>\n"
 "Language-Team: Gnome Czech <gnome-cs-list at gnome.org>\n"
@@ -562,14 +562,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Email nemohl b??t odesl??n. Pros??m zkontrolujte nastaven??."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Tato osoba nem?? definovanou e-mailovou adresu."
 
@@ -629,8 +634,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Jazyk"
 
@@ -698,8 +703,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Barva"
 
@@ -1291,14 +1296,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1347,6 +1346,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1432,13 +1437,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1587,6 +1592,14 @@
 msgid "Full XML list export plugin"
 msgstr "Z??suvn?? modul pro kompletn?? XML export"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Z??suvn?? modul pro kompletn?? import CSV"

Modified: trunk/po/da.po
===================================================================
--- trunk/po/da.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/da.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:55+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Dansk-gruppen <dansk at dansk-gruppen.dk>\n"
@@ -567,17 +567,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hej, %s!\n"
-"\n"
-"Lige for at huske dig p?? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Mail kunne ikke sendes. Tjek venligst e-mail ops??tning."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Denne person har ingen e-post-adresse defineret."
 
@@ -637,8 +639,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Sprog"
 
@@ -706,8 +708,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Farve"
 
@@ -1302,14 +1304,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1358,6 +1354,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1443,13 +1445,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Lyd</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1598,6 +1600,14 @@
 msgid "Full XML list export plugin"
 msgstr "Fuld XML eksportliste udvidelsesmodul"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Fuld CSV importliste udvidelsesmodul"
@@ -2617,6 +2627,15 @@
 msgid "Source"
 msgstr "Kilde"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hej, %s!\n"
+#~ "\n"
+#~ "Lige for at huske dig p?? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Sikkerhedskopifunktionen er kun tilg??ngelig for SQLite"
 

Modified: trunk/po/de.po
===================================================================
--- trunk/po/de.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/de.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-12-16 22:07+0000\n"
 "Last-Translator: Michael <mikej06 at hotmail.com>\n"
 "Language-Team: German <de at li.org>\n"
@@ -570,19 +570,21 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hallo, %s!\n"
-"\n"
-"Nur zur Erinnerung, "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "Die E-Mail konnte nicht versendet werden.\n"
 "Bitte ??berpr??fen Sie Ihre E-Mail Einstellungen."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Bei dieser Person ist keine E-Mail Adresse angegeben."
 
@@ -643,8 +645,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Sprache"
 
@@ -712,8 +714,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Farbe"
 
@@ -1312,14 +1314,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1368,6 +1364,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1453,13 +1455,13 @@
 msgstr "International"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Audio"
 
@@ -1608,6 +1610,14 @@
 msgid "Full XML list export plugin"
 msgstr "Vollst??ndiges XML Listen Export Modul"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Vollst??ndiges CSV Listen Import Modul"
@@ -2633,6 +2643,15 @@
 msgid "Source"
 msgstr "Quelle"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hallo, %s!\n"
+#~ "\n"
+#~ "Nur zur Erinnerung, "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Backup funktioniert im Moment nur mit der SQLite Datenbank."
 

Modified: trunk/po/el.po
===================================================================
--- trunk/po/el.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/el.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2009-02-08 21:59+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Greek <el at li.org>\n"
@@ -567,17 +567,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"????????, %s!\n"
-"\n"
-"?????? ???????????????????? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "???? e-mail ?????? ??????????????. ???????????????? ?????????????? ?????? e-mail ??????????????????."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???? ?????????????? ?????????????????????? ?????????????????? ???????????????????????? ?????? ???????? ???? ??????????."
 
@@ -637,8 +639,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "????????????"
 
@@ -706,8 +708,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "??????????????"
 
@@ -1318,14 +1320,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1374,6 +1370,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1459,13 +1461,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>????????</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1614,6 +1616,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin ???????????? ???????????????? ???????????? XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Plugin ???????????? ?????????????????? CSV ????????????"
@@ -2639,6 +2649,15 @@
 msgid "Source"
 msgstr "??????????????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "????????, %s!\n"
+#~ "\n"
+#~ "?????? ???????????????????? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "?? ???????????????????? ?????????????????????? ???????????????????? ?????????? ?????????????????? ???????? ?????? ???? ???????????? "

Modified: trunk/po/en_GB.po
===================================================================
--- trunk/po/en_GB.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/en_GB.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-12-05 13:45+0000\n"
 "Last-Translator: Josh Holland <Unknown>\n"
 "Language-Team: English (United Kingdom) <en_GB at li.org>\n"
@@ -569,17 +569,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hi, %s!\n"
-"\n"
-"Just to remind you "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Mail could not be sent. Please check e-mail preferences."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "This person has no e-mail address defined."
 
@@ -640,8 +642,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Language"
 
@@ -709,8 +711,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Colour"
 
@@ -1309,14 +1311,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1365,6 +1361,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1450,13 +1452,13 @@
 msgstr "International"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Audio"
 
@@ -1605,6 +1607,14 @@
 msgid "Full XML list export plugin"
 msgstr "Full XML list export plug-in"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Full CSV list import plug-in"
@@ -2622,6 +2632,15 @@
 msgid "Source"
 msgstr "Source"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Backup function is available only for SQLite engine for now"
 

Modified: trunk/po/es.po
===================================================================
--- trunk/po/es.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/es.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2009-02-04 01:11+0000\n"
 "Last-Translator: DiegoJ <diegojromerolopez at gmail.com>\n"
 "Language-Team: Spanish <es at li.org>\n"
@@ -571,19 +571,21 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"??Hola, %s!\n"
-"\n"
-"Tan s??lo recordarle que "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "No se pudo enviar el correo electr??nico. Por favor, compruebe las "
 "preferencias de correo electr??nico."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Esta persona no tiene definida ninguna direcci??n de e-mail."
 
@@ -644,8 +646,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Idioma"
 
@@ -713,8 +715,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Color"
 
@@ -1314,14 +1316,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1370,6 +1366,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1455,13 +1457,13 @@
 msgstr "Internacional"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Audio"
 
@@ -1610,6 +1612,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin para exportar lista en XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Extensi??n para para importar una lista de CSV completa"
@@ -2630,6 +2640,15 @@
 msgid "Source"
 msgstr "C??digo fuente"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "??Hola, %s!\n"
+#~ "\n"
+#~ "Tan s??lo recordarle que "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "La funci??n de hacer copias de seguridad s??lo est?? disponible para SQLite "

Modified: trunk/po/et.po
===================================================================
--- trunk/po/et.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/et.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:17+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Estonian <et at li.org>\n"
@@ -549,14 +549,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -616,8 +621,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -685,8 +690,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1258,14 +1263,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1314,6 +1313,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1399,13 +1404,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1550,6 +1555,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/fa.po
===================================================================
--- trunk/po/fa.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/fa.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-03-29 07:29+0000\n"
 "Last-Translator: Artin <Unknown>\n"
 "Language-Team: Persian <fa at li.org>\n"
@@ -543,14 +543,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -610,8 +615,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -679,8 +684,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1252,14 +1257,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1308,6 +1307,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1393,13 +1398,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1544,6 +1549,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/fi.po
===================================================================
--- trunk/po/fi.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/fi.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-05-04 09:49+0000\n"
 "Last-Translator: Kari Argillander <Unknown>\n"
 "Language-Team: Finnish <fi at li.org>\n"
@@ -554,14 +554,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -621,8 +626,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -690,8 +695,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1263,14 +1268,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1319,6 +1318,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1404,13 +1409,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1555,6 +1560,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/fr.po
===================================================================
--- trunk/po/fr.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/fr.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:56+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Fran??ais\n"
@@ -562,24 +562,25 @@
 msgid "Movie loan reminder"
 msgstr "Rappel de pr??t de film"
 
-# python-format
 #: ../lib/gemail.py:76
 #, python-format
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Salut, %s!\n"
-"\n"
-"Juste, pour te rappeler "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "L'email n'a pas pu ??tre envoy??. Merci de v??rifier les pr??f??renes d'email"
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Cette personne n'a aucun courriel d??fini."
 
@@ -639,8 +640,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Langue"
 
@@ -708,8 +709,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Couleur"
 
@@ -1312,14 +1313,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1368,6 +1363,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1453,13 +1454,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1608,6 +1609,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin d'export de liste XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Plugin d'import de liste CSV compl??te"
@@ -2629,6 +2638,16 @@
 msgid "Source"
 msgstr "Source"
 
+# python-format
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Salut, %s!\n"
+#~ "\n"
+#~ "Juste, pour te rappeler "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "La fonction de backup n'est, pour le moment, disponible que pour le "

Modified: trunk/po/hu.po
===================================================================
--- trunk/po/hu.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/hu.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 11:41+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Hungarian <hu at li.org>\n"
@@ -545,14 +545,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -612,8 +617,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -681,8 +686,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1254,14 +1259,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1310,6 +1309,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1395,13 +1400,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1546,6 +1551,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/id.po
===================================================================
--- trunk/po/id.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/id.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:17+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Indonesian <id at li.org>\n"
@@ -559,16 +559,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hi, %s!\n"
-"hanya mengingatkan "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Mail tidak dapat dikirim. Mohon periksa pilihan email."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Orang ini memiliki alamat email yang tidak terdefinisi."
 
@@ -628,8 +631,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Bahasa"
 
@@ -697,8 +700,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Warna"
 
@@ -1279,14 +1282,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1335,6 +1332,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1420,13 +1423,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1573,6 +1576,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""
@@ -2491,6 +2502,14 @@
 msgid "Source"
 msgstr "Sumber"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hi, %s!\n"
+#~ "hanya mengingatkan "
+
 #~ msgid "This name is already in use!"
 #~ msgstr "Nama ini sudah dipakai!"
 

Modified: trunk/po/it.po
===================================================================
--- trunk/po/it.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/it.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-12-22 23:39+0000\n"
 "Last-Translator: Simone Oberti <Unknown>\n"
 "Language-Team: <tp at lists.linux.it>\n"
@@ -566,19 +566,21 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Salve, %s!\n"
-"\n"
-"Solo un promemoria "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "Potrebbero esserci problemi nell'invio della posta. Verificare le preferenze "
 "email."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Nessun indirizzo email definito per questa persona."
 
@@ -639,8 +641,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Lingua"
 
@@ -708,8 +710,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Colore"
 
@@ -1311,14 +1313,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1367,6 +1363,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1452,13 +1454,13 @@
 msgstr "Internazionale"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Audio"
 
@@ -1607,6 +1609,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin di esportazione elenco XML completo"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Plugin di importazione elenco CSV completo"
@@ -2630,6 +2640,15 @@
 msgid "Source"
 msgstr "Sorgente"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Salve, %s!\n"
+#~ "\n"
+#~ "Solo un promemoria "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "La funzione di backup ?? al momento disponibile solo per il motore SQLite"

Modified: trunk/po/ja.po
===================================================================
--- trunk/po/ja.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/ja.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 11:37+0000\n"
 "Last-Translator: Jack Nihil <jnihil at gmail.com>\n"
 "Language-Team: Japanese <ja at li.org>\n"
@@ -548,14 +548,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -615,8 +620,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -684,8 +689,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1257,14 +1262,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1313,6 +1312,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1398,13 +1403,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1549,6 +1554,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/ko.po
===================================================================
--- trunk/po/ko.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/ko.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:13+0000\n"
 "Last-Translator: ChangeTheWorld <ssalki77 at gmail.com>\n"
 "Language-Team: Korean\n"
@@ -559,17 +559,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"???????????????, %s!\n"
-"\n"
-"???????????? ???????????? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "?????? ???????????? ??????????????????. ??????????????? e-mail?????? ????????? ????????????."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "??? ????????? ?????????????????? ???????????? ???????????????."
 
@@ -629,8 +631,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "??????"
 
@@ -698,8 +700,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "??????"
 
@@ -1275,14 +1277,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1331,6 +1327,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1416,13 +1418,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>?????????</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1571,6 +1573,14 @@
 msgid "Full XML list export plugin"
 msgstr "?????? XML ???????????? ??????????????? ????????????"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "?????? CSV ???????????? ??????????????? ???????????????"
@@ -2502,6 +2512,15 @@
 msgid "Source"
 msgstr "??????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "???????????????, %s!\n"
+#~ "\n"
+#~ "???????????? ???????????? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "?????? ?????? ????????? SQLite ??????????????? ???????????????"
 

Modified: trunk/po/lv.po
===================================================================
--- trunk/po/lv.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/lv.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:34+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Latvian <lv at li.org>\n"
@@ -543,14 +543,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -610,8 +615,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Valoda"
 
@@ -679,8 +684,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Kr??sa"
 
@@ -1252,14 +1257,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1308,6 +1307,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1393,13 +1398,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1544,6 +1549,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/messages.pot
===================================================================
--- trunk/po/messages.pot	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/messages.pot	2009-07-04 12:29:30 UTC (rev 1236)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:49+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL at ADDRESS>\n"
 "Language-Team: LANGUAGE <LL at li.org>\n"
@@ -542,14 +542,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -609,8 +614,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr ""
 
@@ -678,8 +683,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr ""
 
@@ -1251,14 +1256,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1307,6 +1306,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1392,13 +1397,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1543,6 +1548,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/nb.po
===================================================================
--- trunk/po/nb.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/nb.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2009-01-30 19:31+0000\n"
 "Last-Translator: Eirik Fikkan <Unknown>\n"
 "Language-Team: Norwegian Bokmal <nb at li.org>\n"
@@ -563,17 +563,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hei, %s!\n"
-"\n"
-"Vil bare minne deg p?? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Epost ikke sendt. Vennligst sjekk epost-innstillingene."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Denne personen har ingen e-post definert"
 
@@ -634,8 +636,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Spr??k"
 
@@ -703,8 +705,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Farge"
 
@@ -1297,14 +1299,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1353,6 +1349,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1438,13 +1440,13 @@
 msgstr "Internasjonal"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Lyd</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Lyd"
 
@@ -1591,6 +1593,14 @@
 msgid "Full XML list export plugin"
 msgstr "Eksportering av full XML liste utvidelse"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Importer full CSV liste utvidelse"
@@ -2599,6 +2609,15 @@
 msgid "Source"
 msgstr "Kilde"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hei, %s!\n"
+#~ "\n"
+#~ "Vil bare minne deg p?? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Backup funksjonen er forel??pig bare tilgjengelig for SQLite"
 

Modified: trunk/po/nds.po
===================================================================
--- trunk/po/nds.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/nds.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2009-01-01 15:46+0000\n"
 "Last-Translator: apank <Unknown>\n"
 "Language-Team: German, Low <nds at li.org>\n"
@@ -573,18 +573,20 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hallo %s!\n"
-"\n"
-"Nur zur Erinnerung, "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "E-Mail konnte nicht gesendet werden. Pr??fen Sie die E-Mail-Einstellungen."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Zu dieser Person wurde keine E-Mail-Adresse angegeben"
 
@@ -645,8 +647,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Sprache"
 
@@ -714,8 +716,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Farbe"
 
@@ -1318,14 +1320,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1374,6 +1370,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1459,13 +1461,13 @@
 msgstr "International"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "Ton"
 
@@ -1614,6 +1616,14 @@
 msgid "Full XML list export plugin"
 msgstr "PlugIn zum Export im XML-Format"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "PlugIn zum Export im CSV-Format (komplette Liste)"
@@ -2636,6 +2646,15 @@
 msgid "Source"
 msgstr "Quelle"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hallo %s!\n"
+#~ "\n"
+#~ "Nur zur Erinnerung, "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "Die Backup-Funktion ist derzeit nur bei Verwendung der SQLite-Engine "

Modified: trunk/po/nl.po
===================================================================
--- trunk/po/nl.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/nl.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 11:56+0000\n"
 "Last-Translator: Gijs Dekker <dekker.gijs at gmail.com>\n"
 "Language-Team: Dutch <vertaling at vrijschrift.org>\n"
@@ -562,17 +562,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hallo %s!\n"
-"\n"
-"Om je er even aan te herinneren. "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "De e-mail kon niet verzonden worden.  Kijk uw e-mail opties na."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Voor deze persoon is geen e-mail adres ingesteld."
 
@@ -632,8 +634,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Taal"
 
@@ -701,8 +703,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Kleur"
 
@@ -1304,14 +1306,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1360,6 +1356,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1445,13 +1447,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Audio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1600,6 +1602,14 @@
 msgid "Full XML list export plugin"
 msgstr "Exporteer naar XML plugin"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Importeer CSV-bestand plugin"
@@ -2619,6 +2629,15 @@
 msgid "Source"
 msgstr "Bron"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hallo %s!\n"
+#~ "\n"
+#~ "Om je er even aan te herinneren. "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Backup functie is alleen beschikbaar voor SQLite databases"
 

Modified: trunk/po/oc.po
===================================================================
--- trunk/po/oc.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/oc.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:16+0000\n"
 "Last-Translator: Yannig MARCHEGAY (Kokoyaya) <yannig at marchegay.org>\n"
 "Language-Team: Occitan (post 1500) <oc at li.org>\n"
@@ -543,14 +543,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -610,8 +615,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Lenga"
 
@@ -679,8 +684,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Color"
 
@@ -1252,14 +1257,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1308,6 +1307,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1393,13 +1398,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1546,6 +1551,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""

Modified: trunk/po/pl.po
===================================================================
--- trunk/po/pl.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/pl.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: griffith 0.10-beta3\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:49+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2009-02-09 00:23+0000\n"
 "Last-Translator: Piotr O??arowski <piotr at griffith.cc>\n"
 "Language-Team: Polski\n"
@@ -565,17 +565,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Witaj, %s!\n"
-"\n"
-"Przypominam, ??e "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Mail nie m??g?? zosta?? wys??any. Sprawd?? ustawienia."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Ta osoba nie posiada zdefiniowano adresu e-mail."
 
@@ -635,8 +637,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "J??zyk"
 
@@ -704,8 +706,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Kolor"
 
@@ -1303,14 +1305,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1359,6 +1355,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1444,13 +1446,13 @@
 msgstr "mi??dzynarodowy"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>??cie??ka d??wi??kowa</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "D??wi??k"
 
@@ -1599,6 +1601,14 @@
 msgid "Full XML list export plugin"
 msgstr "Wtyczka eksportu pe??nej listy film??w do XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Wtyczka importu film??w z pliku CSV"
@@ -2616,6 +2626,15 @@
 msgid "Source"
 msgstr "??r??d??o"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Witaj, %s!\n"
+#~ "\n"
+#~ "Przypominam, ??e "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "Funkcja tworzenia kopii zapasowej jest na razie dost??pna tylko dla "

Modified: trunk/po/ps.po
===================================================================
--- trunk/po/ps.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/ps.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-12-06 21:07+0000\n"
 "Last-Translator: Baseer Ahmad Baheer <suraj.lmar at gmail.com>\n"
 "Language-Team: Pashto <ps at li.org>\n"
@@ -556,16 +556,21 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
-msgstr "??????????%s "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
+msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "?????????? ???? ?????????????????? ???? ???? ?????????? ???????? ?????????????? ???????? ???? ?? ?????????????????? ?????????????? ???? "
 "??????"
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???? ???? ?????? ?????????? ?????????????????? ???? ??????"
 
@@ -625,8 +630,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "??????"
 
@@ -694,8 +699,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "??????"
 
@@ -1284,14 +1289,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1340,6 +1339,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1425,13 +1430,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1576,6 +1581,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""
@@ -2494,6 +2507,12 @@
 msgid "Source"
 msgstr "????????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr "??????????%s "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "?? ???????? ?????? ?????????? ?? ???????? ???????? ?????????? ?? SQLite ?????????? ?????? ????"
 

Modified: trunk/po/pt.po
===================================================================
--- trunk/po/pt.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/pt.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:59+0000\n"
 "Last-Translator: Rui Ara?jo <ruka.araujo at gmail.com>\n"
 "Language-Team: Portuguese <pt at li.org>\n"
@@ -566,19 +566,21 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Ol?, %s!\n"
-"\n"
-"? s? para recordar que "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "A mensagem de correio electr?nico n?o pode ser enviada. Verifique as "
 "prefer?ncias."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Esta pessoa nao tem um endere?o de e-mail definido"
 
@@ -638,8 +640,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Idioma"
 
@@ -707,8 +709,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Cor"
 
@@ -1308,14 +1310,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1364,6 +1360,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1449,13 +1451,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>?udio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1604,6 +1606,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin de exporta??o de XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Plugin para importa??o de uma lista CSV"
@@ -2625,6 +2635,15 @@
 msgid "Source"
 msgstr "Fonte"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Ol?, %s!\n"
+#~ "\n"
+#~ "? s? para recordar que "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "A fun??o de c?pia de seguran?a est? dispon?vel apenas para sistemas que "

Modified: trunk/po/pt_BR.po
===================================================================
--- trunk/po/pt_BR.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/pt_BR.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -9,7 +9,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-10-17 19:39+0000\n"
 "Last-Translator: ThiagoSerra <thiagoserra at yahoo.com.br>\n"
 "Language-Team: Portuguese\n"
@@ -570,17 +570,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Oi, %s!\n"
-"\n"
-"?? s?? para recordar que "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "E-mail n??o p??de ser enviado. Verifique as prefer??ncias de e-mail."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "N??o foi informado o endere??o de e-mail desta pessoa!"
 
@@ -640,8 +642,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Idioma"
 
@@ -709,8 +711,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Cor"
 
@@ -1309,14 +1311,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1365,6 +1361,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1450,13 +1452,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>??udio</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1605,6 +1607,14 @@
 msgid "Full XML list export plugin"
 msgstr "Plugin de exporta????o de XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Plugin para exporta????o de listagem em CSV"
@@ -2628,6 +2638,15 @@
 msgid "Source"
 msgstr "Fonte"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Oi, %s!\n"
+#~ "\n"
+#~ "?? s?? para recordar que "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "A fun????o de c??pia de seguran??a est?? dispon??vel apenas para sistemas que "

Modified: trunk/po/ru.po
===================================================================
--- trunk/po/ru.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/ru.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-12-29 20:42+0000\n"
 "Last-Translator: Andrew Krasilnikov <Unknown>\n"
 "Language-Team: Russian <ru at li.org>\n"
@@ -564,17 +564,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"????????????, %s!\n"
-"\n"
-"???????????? ?????????????????? ?????? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "???????????????? ?????????????????? ???? ????????????????????. ?????????????????? ?????????????????? ??????????"
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???? ???????????? ?????????? e-mail ?????? ?????????? ????????????????"
 
@@ -635,8 +637,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "????????"
 
@@ -704,8 +706,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "????????"
 
@@ -1305,14 +1307,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1361,6 +1357,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1446,13 +1448,13 @@
 msgstr "??????????????????????????"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>??????????</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr "??????????"
 
@@ -1601,6 +1603,14 @@
 msgid "Full XML list export plugin"
 msgstr "???????????? ???????????????? ???????????? ?? XML"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "???????????? ?????????????? ???????????? ???? CSV"
@@ -2623,6 +2633,15 @@
 msgid "Source"
 msgstr "????????????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "????????????, %s!\n"
+#~ "\n"
+#~ "???????????? ?????????????????? ?????? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "?????????????? ???????????????????? ?????????????????????? ???????????????? ???????????? ???????????? ?????? SQLite"
 

Modified: trunk/po/sk.po
===================================================================
--- trunk/po/sk.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/sk.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 11:57+0000\n"
 "Last-Translator: Maro?? Brojo <majobrojo at gmail.com>\n"
 "Language-Team: Slovak <sk at li.org>\n"
@@ -545,14 +545,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
-msgstr "Ahoj, %s! "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
+msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr ""
 
@@ -612,8 +617,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Jazyk:"
 
@@ -681,8 +686,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Farba"
 
@@ -1255,14 +1260,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1311,6 +1310,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1396,13 +1401,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "Zvuk"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1549,6 +1554,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""
@@ -2467,6 +2480,12 @@
 msgid "Source"
 msgstr ""
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr "Ahoj, %s! "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Funkcia z??lohovania je moment??lne dostupn?? iba pre SQLite engine"
 

Modified: trunk/po/sr.po
===================================================================
--- trunk/po/sr.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/sr.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 11:46+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Serbian <gnu at prevod.org>\n"
@@ -563,17 +563,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"????????????, %s!\n"
-"\n"
-"???????? ???? ???? ???????????????? "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "?????????? ???????? ??????????????. ?????????????????? ???????????????????? ??-??????????."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???? ?????? ?????????? ???? ?????????????? ???????????? ?? ???????????? ??-??????????."
 
@@ -633,8 +635,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "??????????"
 
@@ -702,8 +704,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "????????"
 
@@ -1299,14 +1301,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1355,6 +1351,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1440,13 +1442,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>????????</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1595,6 +1597,14 @@
 msgid "Full XML list export plugin"
 msgstr "?????????????? ???? ?????????? XML ??????????"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "?????????????? ???? ???????? CSV ??????????"
@@ -2608,6 +2618,15 @@
 msgid "Source"
 msgstr "??????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "????????????, %s!\n"
+#~ "\n"
+#~ "???????? ???? ???? ???????????????? "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "???????????????? ???????????? ???????????????? ???????????? ???? ???? ???????? ???????????????? ???????? ???? SQLite"
 

Modified: trunk/po/sv.po
===================================================================
--- trunk/po/sv.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/sv.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -6,7 +6,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:59+0000\n"
 "Last-Translator: Daniel Nylander <yeager at ubuntu.com>\n"
 "Language-Team: Swedish <tp-sv at listor.tp-sv.se>\n"
@@ -566,17 +566,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Hej, %s!\n"
-"\n"
-"Vill bara p??minna dig om "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Kunde inte skicka e-post. Kontrollera e-postinst??llningarna."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Den h??r personen har ingen angiven e-postadress."
 
@@ -636,8 +638,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Spr??k"
 
@@ -706,8 +708,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "F??rg"
 
@@ -1304,14 +1306,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1360,6 +1356,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1445,13 +1447,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Ljud</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1600,6 +1602,14 @@
 msgid "Full XML list export plugin"
 msgstr "Exporteringsmodul f??r fullst??ndig XML-lista"
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Importeringsmodul f??r fullst??ndig CSV-lista"
@@ -2619,6 +2629,15 @@
 msgid "Source"
 msgstr "K??lla"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Hej, %s!\n"
+#~ "\n"
+#~ "Vill bara p??minna dig om "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr ""
 #~ "S??kerhetskopiering ??r endast tillg??nglig f??r SQLite-motorn f??r tillf??llet"

Modified: trunk/po/tr.po
===================================================================
--- trunk/po/tr.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/tr.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-07-23 17:59+0000\n"
 "Last-Translator: HdS619 <thestreet at hotmail.it>\n"
 "Language-Team: Turkish <tr at li.org>\n"
@@ -563,17 +563,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
-"Merhaba, %s\n"
-"\n"
-"Sadece hat??rlatmak istedim! "
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "Mail g??nderilemedi. L??tfen e-mail ayarlar??n??z?? kontrol ediniz."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "Bu kiiye ait e-mail adresi belirtilmemi??!"
 
@@ -633,8 +635,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "Dil"
 
@@ -702,8 +704,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "Renk"
 
@@ -1302,14 +1304,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1358,6 +1354,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1443,13 +1445,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>Ses</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1598,6 +1600,14 @@
 msgid "Full XML list export plugin"
 msgstr "Tam XML listesi aktarma eklentisi."
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr "Tam CSV listesi aktarma eklentisi."
@@ -2619,6 +2629,15 @@
 msgid "Source"
 msgstr "Kaynak"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr ""
+#~ "Merhaba, %s\n"
+#~ "\n"
+#~ "Sadece hat??rlatmak istedim! "
+
 #~ msgid "Backup function is available only for SQLite engine for now"
 #~ msgstr "Yedekleme fonksiyonu sadece SQLite moturu i??in mevcut."
 

Modified: trunk/po/uk.po
===================================================================
--- trunk/po/uk.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/uk.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:29+0000\n"
 "Last-Translator: Piotr O??arowski <Unknown>\n"
 "Language-Team: Ukrainian <uk at li.org>\n"
@@ -560,15 +560,20 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
-msgstr "????????????, %s "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
+msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr ""
 "?????????? ???? ???????? ???????? ??????????????????????. ????????-?????????? ?????????????????? ???????????????????????? ??????????."
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "???? ???????????? ???????????? ?????????????????????? ?????????? ?????? ???????? ??????????."
 
@@ -628,8 +633,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "????????"
 
@@ -697,8 +702,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "??????????"
 
@@ -1276,14 +1281,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1332,6 +1331,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1417,13 +1422,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1568,6 +1573,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""
@@ -2488,6 +2501,12 @@
 msgid "Source"
 msgstr "?????????? ????????????????"
 
+#~ msgid ""
+#~ "Hi, %s!\n"
+#~ "\n"
+#~ "Just to remind you "
+#~ msgstr "????????????, %s "
+
 #~ msgid "This name is already in use!"
 #~ msgstr "???? ????'?? ?????? ????????????????????????????????!"
 

Modified: trunk/po/zh_CN.po
===================================================================
--- trunk/po/zh_CN.po	2009-07-04 12:09:33 UTC (rev 1235)
+++ trunk/po/zh_CN.po	2009-07-04 12:29:30 UTC (rev 1236)
@@ -7,7 +7,7 @@
 msgstr ""
 "Project-Id-Version: Griffith 0.10-beta1\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2009-06-11 22:43+0200\n"
+"POT-Creation-Date: 2009-07-04 14:26+0200\n"
 "PO-Revision-Date: 2008-11-18 12:33+0000\n"
 "Last-Translator: Kempson Chen <kempson.chen at gmail.com>\n"
 "Language-Team: Simplified Chinese <zh_CN at li.org>\n"
@@ -556,14 +556,19 @@
 msgid ""
 "Hi, %s!\n"
 "\n"
-"Just to remind you "
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
 msgstr ""
 
-#: ../lib/gemail.py:82
+#: ../lib/gemail.py:80
 msgid "Mail could not be sent. Please check e-mail preferences."
 msgstr "???????????????????????????????????????????????????"
 
-#: ../lib/gemail.py:84
+#: ../lib/gemail.py:82
 msgid "This person has no e-mail address defined."
 msgstr "????????????????????????????????????"
 
@@ -623,8 +628,8 @@
 #: ../lib/initialize.py:309 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:366
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:411
-#: ../lib/plugins/movie/PluginMovieIMDB.py:160
-#: ../lib/plugins/movie/PluginMovieIMDB.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
 msgid "Language"
 msgstr "??????"
 
@@ -692,8 +697,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:368
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:413
-#: ../lib/plugins/movie/PluginMovieIMDB.py:164
-#: ../lib/plugins/movie/PluginMovieIMDB.py:333 ../glade/griffith.glade.h:44
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:44
 msgid "Color"
 msgstr "??????"
 
@@ -1271,14 +1276,8 @@
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
 #: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
-#: ../lib/plugins/movie/PluginMovieIMDB.py:96
-#: ../lib/plugins/movie/PluginMovieIMDB.py:97
-#: ../lib/plugins/movie/PluginMovieIMDB.py:269
-#: ../lib/plugins/movie/PluginMovieIMDB.py:270
-#: ../lib/plugins/movie/PluginMovieIMDB.py:271
-#: ../lib/plugins/movie/PluginMovieIMDB.py:272
-#: ../lib/plugins/movie/PluginMovieIMDB.py:273
-#: ../lib/plugins/movie/PluginMovieIMDB.py:274
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
 #: ../lib/plugins/movie/PluginMovieIMDB.py:275
 #: ../lib/plugins/movie/PluginMovieIMDB.py:276
 #: ../lib/plugins/movie/PluginMovieIMDB.py:277
@@ -1327,6 +1326,12 @@
 #: ../lib/plugins/movie/PluginMovieIMDB.py:320
 #: ../lib/plugins/movie/PluginMovieIMDB.py:321
 #: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:157
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:312
 #: ../lib/plugins/movie/PluginMovieKinoDe.py:313
@@ -1412,13 +1417,13 @@
 msgstr ""
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
-#: ../lib/plugins/movie/PluginMovieIMDB.py:162 ../glade/griffith.glade.h:4
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
 msgid "<b>Audio</b>"
 msgstr "<b>??????</b>"
 
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:367
 #: ../lib/plugins/movie/PluginMovieIMDB-de.py:412
-#: ../lib/plugins/movie/PluginMovieIMDB.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
 msgid "Audio"
 msgstr ""
 
@@ -1563,6 +1568,14 @@
 msgid "Full XML list export plugin"
 msgstr ""
 
+#: ../lib/plugins/imp/AMC.py:94
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:120
+msgid "The format of the file is not supported."
+msgstr ""
+
 #: ../lib/plugins/imp/CSV.py:42
 msgid "Full CSV list import plugin"
 msgstr ""



From piotrek at mail.berlios.de  Sat Jul  4 15:21:34 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 15:21:34 +0200
Subject: [Griffith-svn] r1237 - in trunk: . lib
Message-ID: <200907041321.n64DLYoW024726@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 15:21:34 +0200 (Sat, 04 Jul 2009)
New Revision: 1237

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/initialize.py
   trunk/lib/preferences.py
Log:
[#269865] Don't change movie plugin selection after adding a movie


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-04 12:29:30 UTC (rev 1236)
+++ trunk/ChangeLog	2009-07-04 13:21:34 UTC (rev 1237)
@@ -7,10 +7,12 @@
 
 2009-07-04  Piotr O?arowski
 	* Version changed to 0.10-beta3+svn
-	* If Region 0 (no region data) is selected, save "0" in database
-	  otherwise default region will be used [#305123]
-	* Mail content can be translated again (gettext issue fixed) 
+	* [#305123] If Region 0 (no region data) is selected, save "0" in
+	  database otherwise default region will be used
+	* Mail content can be translated again (gettext issue fixed)
+	* [#269865] Don't change movie plugin selection after adding a movie
 
+
 2009-07-03  Michael Jahn
 	* updated IMDb plugin
 	* added Ant Movie Catalog import plugin

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2009-07-04 12:29:30 UTC (rev 1236)
+++ trunk/lib/add.py	2009-07-04 13:21:34 UTC (rev 1237)
@@ -620,7 +620,6 @@
     w['picture'].set_from_file(image_path)
     
     w['notebook'].set_current_page(0)
-    w['source'].set_active(self.d_plugin)
     w['o_title'].grab_focus()
     #}}}
 

Modified: trunk/lib/initialize.py
===================================================================
--- trunk/lib/initialize.py	2009-07-04 12:29:30 UTC (rev 1236)
+++ trunk/lib/initialize.py	2009-07-04 13:21:34 UTC (rev 1237)
@@ -389,7 +389,6 @@
     self.plugins = gutils.read_plugins('PluginMovie', \
         self.locations['movie_plugins'])
     self.plugins.sort()
-    self.d_plugin = 0
     mcounter = 0
     default_plugin = self.config.get('default_movie_plugin')
     for p in self.plugins:
@@ -399,9 +398,8 @@
         self.widgets['preferences']['default_plugin'].append_text(plugin_name)
         if plugin_name == default_plugin:
             self.widgets['preferences']['default_plugin'].set_active(mcounter)
-            self.d_plugin = mcounter
+            self.widgets['add']['source'].set_active(mcounter)
         mcounter = mcounter + 1
-    self.widgets['add']['source'].set_active(self.d_plugin)
 
 def export_plugins(self):
     """
@@ -715,7 +713,7 @@
             name = self.db.session.query(db.Volume.name).filter_by(volume_id=vol_id).first().name
         else:
             name = ''
-        self.widgets['add']['volume'].insert_text(int(i), str(name))
+        self.widgets['add']['volume'].insert_text(int(i), name)
     self.widgets['add']['volume'].show_all()
     i = gutils.findKey(default, self.volume_combo_ids)
     if i is not None:
@@ -734,9 +732,9 @@
             name = self.db.session.query(db.Collection.name).filter_by(collection_id=col_id).first().name
         else:
             name = ''
-        self.widgets['add']['collection'].insert_text(int(i), str(name))
+        self.widgets['add']['collection'].insert_text(int(i), name)
         # add some white spaces to prevent scrollbar hides parts of the names    
-        self.widgets['filter']['collection'].insert_text(int(i), str(name) + '   ')
+        self.widgets['filter']['collection'].insert_text(int(i), name + '   ')
     self.widgets['add']['collection'].show_all()
     self.widgets['filter']['collection'].show_all()
     self.widgets['filter']['collection'].set_active(0)

Modified: trunk/lib/preferences.py
===================================================================
--- trunk/lib/preferences.py	2009-07-04 12:29:30 UTC (rev 1236)
+++ trunk/lib/preferences.py	2009-07-04 13:21:34 UTC (rev 1237)
@@ -172,7 +172,6 @@
         plugin_name = plugin_module.replace('PluginMovie','')
         if plugin_name == default_movie_plugin:
             w['default_plugin'].set_active(mcounter)
-            self.d_plugin = mcounter
         mcounter = mcounter + 1
 
     # rating image
@@ -371,9 +370,9 @@
         plugin_module = os.path.basename(p).replace('.py','')
         plugin_name = plugin_module.replace('PluginMovie','')
         if gutils.on_combo_box_entry_changed(w['default_plugin']) == plugin_name:
-            self.d_plugin = mcounter
+            break
         mcounter = mcounter + 1
-    self.widgets['add']['source'].set_active(self.d_plugin)
+    self.widgets['add']['source'].set_active(mcounter)
 
     if self.windows:
         save_reader = ''



From piotrek at mail.berlios.de  Sat Jul  4 22:40:06 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 22:40:06 +0200
Subject: [Griffith-svn] r1238 - in trunk: . lib
Message-ID: <200907042040.n64Ke6De030727@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 22:40:05 +0200 (Sat, 04 Jul 2009)
New Revision: 1238

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/backup.py
Log:
Rollback all pending operations before creating new database


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-04 13:21:34 UTC (rev 1237)
+++ trunk/ChangeLog	2009-07-04 20:40:05 UTC (rev 1238)
@@ -11,8 +11,8 @@
 	  database otherwise default region will be used
 	* Mail content can be translated again (gettext issue fixed)
 	* [#269865] Don't change movie plugin selection after adding a movie
+	* Rollback all pending operations before creating new database
 
-
 2009-07-03  Michael Jahn
 	* updated IMDb plugin
 	* added Ant Movie Catalog import plugin

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2009-07-04 13:21:34 UTC (rev 1237)
+++ trunk/griffith	2009-07-04 20:40:05 UTC (rev 1238)
@@ -1364,6 +1364,8 @@
                     delete_poster_from_cache(self, poster[0])
 
                 log.debug('dropping old tables...')
+                self.db.session.rollback() # cancel all pending operations
+                self.db.session.bind.engine.dispose()
                 db.metadata.drop_all(self.db.session.bind.engine)
                 #from sqlalchemy.orm import clear_mappers
                 #clear_mappers()

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2009-07-04 13:21:34 UTC (rev 1237)
+++ trunk/lib/backup.py	2009-07-04 20:40:05 UTC (rev 1238)
@@ -127,6 +127,7 @@
 
 def merge_db(src_db, dst_db): # FIXME
     merged = 0
+    dst_db.session.rollback() # cancel all pending operations
     src_session = src_db.Session() # create new session
     dst_session = dst_db.Session() # create new session
     movies = src_session.query(db.Movie).count()
@@ -138,7 +139,7 @@
             t_movies[column] = eval("movie.%s"%column)
 
         # replace number with new one
-        t_movies["number"] = gutils.find_next_available(self.db)
+        t_movies["number"] = gutils.find_next_available(dst_db)
 
         # don't restore volume/collection/tag/language/loan data (it's dangerous)
         t_movies.pop('movie_id')
@@ -237,6 +238,7 @@
         if merge:
             merge_db(tmp_db, self.db)
         else:
+            self.db.session.rollback() # cancel all pending operations
             copy_db(tmp_db.session.bind, self.db.session.bind)
             # update old database section with current config values
             # (important while restoring to external databases)



From piotrek at mail.berlios.de  Sat Jul  4 22:50:47 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 22:50:47 +0200
Subject: [Griffith-svn] r1239 - trunk/lib
Message-ID: <200907042050.n64KolwF031463@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 22:50:46 +0200 (Sat, 04 Jul 2009)
New Revision: 1239

Modified:
   trunk/lib/backup.py
Log:
copy posters first (to avoid IntegrityError)


Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2009-07-04 20:40:05 UTC (rev 1238)
+++ trunk/lib/backup.py	2009-07-04 20:50:46 UTC (rev 1239)
@@ -111,6 +111,10 @@
     log.debug('replacing old database with new one')
     db.metadata.drop_all(dst_engine) # remove all previous data
     db.metadata.create_all(dst_engine) # create table stucture
+    
+    # posters
+    for poster in db.metadata.tables['posters'].select(bind=src_engine).execute():
+        db.metadata.tables['posters'].insert(bind=dst_engine).execute(md5sum=poster.md5sum, data=StringIO(poster.data).read())
 
     for table in db.metadata.sorted_tables:
         if table.name in ('posters', 'filters'):
@@ -121,9 +125,6 @@
         if data:
             log.debug('inserting new data...')
             dst_engine.execute(table.insert(), data)
-    # posters
-    for poster in db.metadata.tables['posters'].select(bind=src_engine).execute():
-        db.metadata.tables['posters'].insert(bind=dst_engine).execute(md5sum=poster.md5sum, data=StringIO(poster.data).read())
 
 def merge_db(src_db, dst_db): # FIXME
     merged = 0



From piotrek at mail.berlios.de  Sat Jul  4 23:08:09 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 4 Jul 2009 23:08:09 +0200
Subject: [Griffith-svn] r1240 - in trunk: . lib
Message-ID: <200907042108.n64L88Dq032746@sheep.berlios.de>

Author: piotrek
Date: 2009-07-04 23:08:08 +0200 (Sat, 04 Jul 2009)
New Revision: 1240

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/main_treeview.py
Log:
Poster window (if visible) is updated along with current movie change


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-04 20:50:46 UTC (rev 1239)
+++ trunk/ChangeLog	2009-07-04 21:08:08 UTC (rev 1240)
@@ -12,6 +12,7 @@
 	* Mail content can be translated again (gettext issue fixed)
 	* [#269865] Don't change movie plugin selection after adding a movie
 	* Rollback all pending operations before creating new database
+	* Poster window (if visible) is updated along with current movie change
 
 2009-07-03  Michael Jahn
 	* updated IMDb plugin

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2009-07-04 20:50:46 UTC (rev 1239)
+++ trunk/griffith	2009-07-04 21:08:08 UTC (rev 1240)
@@ -1365,7 +1365,6 @@
 
                 log.debug('dropping old tables...')
                 self.db.session.rollback() # cancel all pending operations
-                self.db.session.bind.engine.dispose()
                 db.metadata.drop_all(self.db.session.bind.engine)
                 #from sqlalchemy.orm import clear_mappers
                 #clear_mappers()

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2009-07-04 20:50:46 UTC (rev 1239)
+++ trunk/lib/main_treeview.py	2009-07-04 21:08:08 UTC (rev 1240)
@@ -41,10 +41,12 @@
             return False
         number = tmp_model.get_value(tmp_iter,0)
         movie = self.db.session.query(db.Movie).filter_by(number=number).first()
-        # FIXME
-        #movie.refresh() # loan data can be obsolete in cache
         if movie is None:
             log.info("Treeview: movie doesn't exists (number=%s)", number)
+        elif movie.poster_md5 and self.widgets['poster_window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
+            # poster window is opened
+            filename = gutils.get_image_fname(movie.poster_md5, self.db)
+            self.widgets['big_poster'].set_from_file(filename)
         set_details(self, movie)
     else:
         set_details(self, {})



From piotrek at mail.berlios.de  Sun Jul  5 18:03:02 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 18:03:02 +0200
Subject: [Griffith-svn] r1241 - in trunk: . lib
Message-ID: <200907051603.n65G32c6018637@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 18:03:01 +0200 (Sun, 05 Jul 2009)
New Revision: 1241

Modified:
   trunk/ChangeLog
   trunk/lib/advfilter.py
   trunk/lib/db.py
   trunk/lib/dbupgrade.py
   trunk/lib/main_treeview.py
   trunk/lib/sql.py
Log:
Use SQLAlchemy's PickleType to store search conditions
(old rules are removed without warning - beta version privilege ;)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/ChangeLog	2009-07-05 16:03:01 UTC (rev 1241)
@@ -5,6 +5,10 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-05  Piotr O?arowski
+	* Use SQLAlchemy's PickleType to store search conditions
+	  (old rules are removed without warning - beta version privilege ;)
+
 2009-07-04  Piotr O?arowski
 	* Version changed to 0.10-beta3+svn
 	* [#305123] If Region 0 (no region data) is selected, save "0" in

Modified: trunk/lib/advfilter.py
===================================================================
--- trunk/lib/advfilter.py	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/lib/advfilter.py	2009-07-05 16:03:01 UTC (rev 1241)
@@ -363,17 +363,29 @@
         info(_("Name is empty"), widgets['window'])
         return False
 
-    if sql.save_conditions(gsql, name, cond):
-        info(_("Search conditions saved"), widgets['window'])
+    session = gsql.Session(bind=gsql.session.bind)
+    #session.bind = gsql.session.bind
+    filter_ = session.query(db.Filter).filter_by(name=name).first()
+    if filter_:
+        filter_.data = cond
     else:
+        filter_ = db.Filter(name=name, data=cond)
+    session.add(filter_)
+    try:
+        session.commit()
+    except Exception, e:
+        session.rollback()
+        log.warn(e)
         warning(_("Cannot save search conditions"), widgets['window'])
+        return False
+    info(_("Search conditions saved"), widgets['window'])
 
 def load(gsql, widgets, field_names):
     name = widgets['cb_name'].get_active_text().decode('utf-8')
     if not name:
         log.debug("search rule name is empty")
         return False
-    cond = sql.load_conditions(gsql, name)
+    cond = gsql.session.query(db.Filter).filter_by(name=name).first().data
     if cond:
         return set_conditions(widgets, cond, field_names)
     else:

Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/lib/db.py	2009-07-05 16:03:01 UTC (rev 1241)
@@ -25,7 +25,6 @@
 # XXX: keep stdlib and SQLAlchemy imports only in this file
 
 import logging
-import marshal
 import re
 import string
 
@@ -67,6 +66,7 @@
 class Tag(DBTable): pass
 class VCodec(DBTable): pass
 class Volume(DBTable): pass
+class Filter(DBTable): pass
 
 class Person(DBTable):
     @validates('email')
@@ -94,7 +94,7 @@
                 log.error('md5sum has wrong size')
 
     def __repr__(self):
-        return "<Poster(%s)>" % self.md5sum
+        return "<Poster:%s>" % self.md5sum
 
 class Configuration(object):
     def __repr__(self):
@@ -195,22 +195,6 @@
 
     def __repr__(self):
         return "<MovieTag:%s-%s>" % (self.movie_id, self.tag_id)
-
-class Filter(object):
-    def __init__(self, name=None, cond=None):
-        if name and cond:
-            self.name = name
-            #self.data = marshal.dumps(cond)
-            self.conditions = cond
-
-    def __repr__(self):
-        return "<Filter(%s)>" % self.name
-
-    def _set_cond(self, cond):
-        self.data = marshal.dumps(cond)
-    def _get_cond(self):
-        return marshal.loads(self.data)
-    conditions = property(_get_cond, _set_cond)
 #}}}
 
 ### table definitions ######################################### {{{
@@ -334,8 +318,7 @@
 
 filters_table = Table('filters', metadata,
     Column('name', Unicode(64), primary_key=True),
-    #Column('data', PickleType, nullable=False))
-    Column('data', Binary, nullable=False))
+    Column('data', PickleType, nullable=False))
 #}}}
 
 ### mappers ################################################### {{{

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/lib/dbupgrade.py	2009-07-05 16:03:01 UTC (rev 1241)
@@ -217,7 +217,21 @@
         db_version.value = unicode(version)
         self.session.add(db_version)
         self.session.commit()
+    
+    if version == 4:    # fix changes between v4 and v5
+        version += 1
+        log.info("Upgrading database to version %d...", version)
+        
+        log.info('... deleting old filters')
+        # new format, filters were introduced in -beta so we'll free to delete them without warning
+        query = 'DELETE FROM filters;'
+        self.session.bind.execute(query)
 
+        db_version = self.session.query(db.Configuration).filter_by(param=u'version').one()
+        db_version.value = unicode(version)
+        self.session.add(db_version)
+        self.session.commit()
+
     return True
 
 

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/lib/main_treeview.py	2009-07-05 16:03:01 UTC (rev 1241)
@@ -21,15 +21,19 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
+import os
+
+import gtk
 from sqlalchemy import select, desc
 from sqlalchemy.sql.expression import Select
-import os
-import gtk
-import logging
-log = logging.getLogger("Griffith")
+
 import db
 import gutils
+import sql
 
+log = logging.getLogger("Griffith")
+
 def treeview_clicked(self):
     if self.initialized is False:
         return False
@@ -44,7 +48,7 @@
         if movie is None:
             log.info("Treeview: movie doesn't exists (number=%s)", number)
         elif movie.poster_md5 and self.widgets['poster_window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
-            # poster window is opened
+            # poster window is visible
             filename = gutils.get_image_fname(movie.poster_md5, self.db)
             self.widgets['big_poster'].set_from_file(filename)
         set_details(self, movie)
@@ -52,7 +56,6 @@
         set_details(self, {})
 
 def set_details(self, item=None):#{{{
-    from sql import get_loan_info, get_loan_history
     if item is None:
         item = {}
     if 'movie_id' in item and item['movie_id']:
@@ -258,7 +261,7 @@
         w['email_reminder_button'].set_sensitive(True)
         w['return_button'].set_sensitive(True)
         
-        data_loan = get_loan_info(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
+        data_loan = sql.get_loan_info(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
         if data_loan is None:
             log.warning("movie has no loan data, changing 'loaned' flag to False (movie_id: %s)", item['movie_id'])
             item.loaned = False
@@ -284,7 +287,7 @@
     # loan history    
     self.loans_treemodel.clear()
     if 'collection_id' in item or 'volume_id' in item or 'movie_id' in item:
-        loans = get_loan_history(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
+        loans = sql.get_loan_history(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
         for loan in loans:
             myiter = self.loans_treemodel.append(None)
             self.loans_treemodel.set_value(myiter, 0,'%s' % str(loan.date)[:10])
@@ -371,8 +374,7 @@
             # saved in advfilter
             name = self.widgets['filter']['advfilter'].get_active_text()[:-3].decode('utf-8') # :-3 due to additional '   ' in the name
             if name:
-                from sql import load_conditions
-                cond = load_conditions(self.db, name)
+                cond = self.db.session.query(db.Filter).filter_by(name=name).first().data
                 if not cond:
                     cond = advfilter.get_def_conditions()
             else:

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-04 21:08:08 UTC (rev 1240)
+++ trunk/lib/sql.py	2009-07-05 16:03:01 UTC (rev 1241)
@@ -39,7 +39,7 @@
 
 
 class GriffithSQL(object):
-    version = 4 # database format version, increase after changing data structures
+    version = 5 # database format version, increase after changing data structures
     DEFAULT_PORTS = dict(postgres=5432, mysql=3306, mssql=1433)
 
     def __init__(self, config, griffith_dir, fallback=True):
@@ -400,29 +400,4 @@
                                                         )).all()
     else:
         return gsql.session.query(db.Loan).filter(db.Loan.movie_id==movie_id).filter(db.Loan.return_date!=None).all()
-
-def save_conditions(gsql, name, cond):
-    session = gsql.Session(bind=gsql.session.bind)
-    #session.bind = gsql.session.bind
-    filter_ = session.query(db.Filter).filter_by(name=name).first()
-    if filter_:
-        filter_.conditions = cond
-    else:
-        filter_ = db.Filter(name, cond)
-    session.add(filter_)
-    try:
-        session.commit()
-    except Exception, e:
-        session.rollback()
-        log.warn(e)
-        return False
-    return True
-
-def load_conditions(gsql, name):
-    filter_ = gsql.session.query(db.Filter).filter_by(name=name).first()
-    if filter_:
-        return filter_.conditions
-    else:
-        log.warn("Cannot find search conditions: %s", name)
-        return None
 #}}}



From piotrek at mail.berlios.de  Sun Jul  5 20:16:26 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 20:16:26 +0200
Subject: [Griffith-svn] r1242 - in trunk: . lib
Message-ID: <200907051816.n65IGQNJ008755@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 20:16:25 +0200 (Sun, 05 Jul 2009)
New Revision: 1242

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/advfilter.py
   trunk/lib/dbupgrade.py
   trunk/lib/edit.py
   trunk/lib/people.py
   trunk/lib/sql.py
Log:
Remove ilike from search criteria


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/ChangeLog	2009-07-05 18:16:25 UTC (rev 1242)
@@ -8,6 +8,7 @@
 2009-07-05  Piotr O?arowski
 	* Use SQLAlchemy's PickleType to store search conditions
 	  (old rules are removed without warning - beta version privilege ;)
+	* Remove ilike from search criteria
 
 2009-07-04  Piotr O?arowski
 	* Version changed to 0.10-beta3+svn

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/add.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -374,7 +374,7 @@
     }
     if self._am_movie_id is not None:
         t_movies['movie_id'] = self._am_movie_id
-    
+
     if t_movies['collection_id'] > 0:
         t_movies['collection_id'] = self.collection_combo_ids[t_movies['collection_id']]
     else:
@@ -693,7 +693,7 @@
         return False
 
     rows = len(self.treemodel)
-    if rows>0:
+    if rows > 0:
         insert_after = self.treemodel.get_iter(rows-1)    # last
     else:
         insert_after = None
@@ -855,8 +855,8 @@
         session.commit()
     except IntegrityError, e:
         session.rollback()
-        gutils.warning(str(e.orig))
         log.warn("Cannot commit movie: %s", e.message)
+        gutils.warning(unicode(e.orig))
         return False
     except Exception, e:
         log.error("Unexpected problem: %s", e)

Modified: trunk/lib/advfilter.py
===================================================================
--- trunk/lib/advfilter.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/advfilter.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -21,15 +21,18 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
+from copy import deepcopy
+
 import gtk
-from copy       import deepcopy
 from sqlalchemy import select
-import logging
-log = logging.getLogger("Griffith")
+
 import db
 import sql
 from gutils import info
 
+log = logging.getLogger("Griffith")
+
 __conditions = { # default
     'loaned'          : None,  # None, True, False
     'seen'            : None,  # None, True, False
@@ -51,15 +54,13 @@
     'contains_n'      : {}, # see above
     'like'            : {}, # see above
     'like_n'          : {}, # see above
-    'ilike'           : {}, # see above
-    'ilike_n'         : {}, # see above
     }
 
 QUERY_FIELDS = ('title', 'o_title', 'director', 'plot', 'cast', 'notes', 'number',
                 'runtime', 'year', 'screenplay', 'cameraman', 'country', 'genre',
                 'studio', 'classification', 'o_site', 'site', 'trailer')
 QUERY_COMMANDS = ('equals', 'equals_n', 'startswith', 'startswith_n', 'contains',
-                  'contains_n', 'like', 'like_n', 'ilike', 'ilike_n')
+                  'contains_n', 'like', 'like_n')
 QUERY_COMMAND_NAMES = {
     'equals'      : _('is equal to'),
     'equals_n'    : _('is not equal to'),
@@ -68,9 +69,7 @@
     'contains'    : _('contains'),
     'contains_n'  : _("doesn't contain"),
     'like'        : _('like'),
-    'like_n'      : _('not like'),
-    'ilike'       : _('ilike'),
-    'ilike_n'     : _('not ilike')}
+    'like_n'      : _('not like')}
 
 # widgets -----------------------------------------------------{{{
 
@@ -269,13 +268,13 @@
         else:
             hbox_items[1].set_active(True)
 
-    if not cond["equals"] and not cond["startswith"] and not cond["contains"] and not cond["like"] and not cond["ilike"]:
+    if not cond["equals"] and not cond["startswith"] and not cond["contains"] and not cond["like"]:
         for i in widgets['dynamic_vbox'].get_children():
             i.destroy()
         add_query_widget(widgets['dynamic_vbox'], field_names)
     else:
         vbox = widgets['dynamic_vbox']
-        for rule in ('equals', 'startswith', 'contains', 'like', 'ilike'):
+        for rule in ('equals', 'startswith', 'contains', 'like'):
             for field in cond[rule]:
                 for text in cond[rule][field]:
                     add_query_widget(vbox, field_names, field, rule, text)

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/dbupgrade.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -22,16 +22,19 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
+import os.path
+
 from sqlalchemy import *
-import os.path
+
+import db
 import gutils
-import db
-import logging
+
 log = logging.getLogger("Griffith")
 
 def upgrade_database(self, version, config):
     """Create new db or update existing one to current format"""
-    b = self.session.bind
+    b = self.engine
     if version == 0 or version is None:
         log.info('Creating new database...')
         # version is 0 or none only for new databases

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/edit.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -21,20 +21,21 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
 import os
+import tempfile
+from urllib import urlcleanup, FancyURLopener, urlretrieve
+
 import gtk
-import tempfile
-import shutil
-from PIL     import Image
-from urllib  import urlcleanup, FancyURLopener, urlretrieve
-import logging
-log = logging.getLogger("Griffith")
+from PIL import Image
+
 import amazon
 import db
 import delete
 import gutils
-import movie
 
+log = logging.getLogger("Griffith")
+
 def change_poster(self):
     """
     changes movie poster image to a custom one
@@ -78,7 +79,7 @@
     session.add(movie)
     try:
         session.commit()
-    except Exceptionm, e:
+    except Exception, e:
         session.rollback()
         log.error("cannot add poster to database: %s" % e)
         return False
@@ -234,6 +235,7 @@
 
 def get_poster(self, f, result):
     from widgets import reconnect_add_signals
+    from movie import Progress, Retriever
     if f is None:
         treeselection = self.widgets['results']['treeview'].get_selection()
         (tmp_model, tmp_iter) = treeselection.get_selected()
@@ -248,8 +250,8 @@
     canceled = False
     if len(result.Item[f].LargeImage.URL):
         try:
-            progress = movie.Progress(self.widgets['window'],_("Fetching poster"),_("Wait a moment"))
-            retriever = movie.Retriever(result.Item[f].LargeImage.URL, self.widgets['window'], progress, file_to_copy)
+            progress = Progress(self.widgets['window'],_("Fetching poster"),_("Wait a moment"))
+            retriever = Retriever(result.Item[f].LargeImage.URL, self.widgets['window'], progress, file_to_copy)
             retriever.start()
             while retriever.isAlive():
                 progress.pulse()

Modified: trunk/lib/people.py
===================================================================
--- trunk/lib/people.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/people.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -21,9 +21,11 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
+
+import db
 import gutils
-import db
-import logging
+
 log = logging.getLogger("Griffith")
 
 def show_people_window(self):
@@ -61,6 +63,7 @@
         try:
             self.db.session.commit()
         except Exception, e:
+            self.db.session.rollback()
             log.info(str(e))
         else:
             myiter = self.p_treemodel.insert_after(None, None)
@@ -105,6 +108,7 @@
     try:
         self.db.session.commit()
     except Exception, e:
+        self.db.session.rollback()
         log.info(str(e))
     else:
         self.update_statusbar(_("Record updated"))

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-05 16:03:01 UTC (rev 1241)
+++ trunk/lib/sql.py	2009-07-05 18:16:25 UTC (rev 1242)
@@ -103,7 +103,8 @@
             conn = engine.connect()
 
         self.Session = sessionmaker(bind=engine) # create new sessions using this class
-        self.session = self.Session() # global session
+        self.engine = engine
+        self.session = self.Session() # TODO: get rid of it, force developers to create new session using gsql.Session()
         #}}}
 
         # check if database needs an upgrade
@@ -196,10 +197,6 @@
         values = [ not_(db.movies_table.columns[field].like(value)) for value in cond["like_n"][field] ]
         query.append_whereclause(and_(*values))
 
-    for field in cond["ilike_n"]:
-        values = [ not_(db.movies_table.columns[field].ilike(value)) for value in cond["ilike_n"][field] ]
-        query.append_whereclause(and_(*values))
-
     for field in cond["contains_n"]: # XXX: it's not the SQLAlchemy's .contains() i.e. not for one-to-many or many-to-many collections
         values = [ not_(db.movies_table.columns[field].like('%'+value+'%')) for value in cond["contains_n"][field] ]
         query.append_whereclause(and_(*values))
@@ -216,10 +213,6 @@
         values = [ db.movies_table.columns[field].like(value) for value in cond["like"][field] ]
         query.append_whereclause(or_(*values))
 
-    for field in cond["ilike"]:
-        values = [ db.movies_table.columns[field].ilike(value) for value in cond["ilike"][field] ]
-        query.append_whereclause(or_(*values))
-
     for field in cond["contains"]: # XXX: it's not the SQLAlchemy's .contains() i.e. not for one-to-many or many-to-many collections
         values = [ db.movies_table.columns[field].like('%'+value+'%') for value in cond["contains"][field] ]
         query.append_whereclause(or_(*values))



From piotrek at mail.berlios.de  Sun Jul  5 21:08:21 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 21:08:21 +0200
Subject: [Griffith-svn] r1243 - trunk/lib
Message-ID: <200907051908.n65J8LfL013279@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 21:08:21 +0200 (Sun, 05 Jul 2009)
New Revision: 1243

Modified:
   trunk/lib/add.py
Log:
use new db session (transaction) while adding/updating movies


Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2009-07-05 18:16:25 UTC (rev 1242)
+++ trunk/lib/add.py	2009-07-05 19:08:21 UTC (rev 1243)
@@ -67,10 +67,12 @@
 
 
 def update_movie(self):
+    session = self.db.Session()
+
     if self._am_movie_id is not None:
-        movie = self.db.session.query(db.Movie).filter_by(movie_id=self._am_movie_id).one()
+        movie = session.query(db.Movie).filter_by(movie_id=self._am_movie_id).one()
     else:
-        movie = self.db.session.query(db.Movie).filter_by(movie_id=self._movie_id).one()
+        movie = session.query(db.Movie).filter_by(movie_id=self._movie_id).one()
     if movie is None: # movie was deleted in the meantime
         return add_movie_db(self, True)
     
@@ -85,7 +87,7 @@
         else:
             new_poster_md5 = gutils.md5sum(file(new_image_path, 'rb'))
             details["poster_md5"] = new_poster_md5
-            if self.db.session.query(db.Poster).filter_by(md5sum=new_poster_md5).count() == 0:
+            if session.query(db.Poster).filter_by(md5sum=new_poster_md5).count() == 0:
                 try:
                     data = file(tmp_image_path, 'rb').read()
                 except Exception, e:
@@ -94,19 +96,19 @@
                     poster = db.Poster(md5sum=new_poster_md5, data=data)
                     del details["image"]
                     details['poster_md5'] = new_poster_md5
-                    self.db.session.add(poster)
+                    session.add(poster)
 
                     # delete old image
                     import delete
-                    old_poster = self.db.session.query(db.Poster).filter_by(md5sum=old_poster_md5).first()
+                    old_poster = session.query(db.Poster).filter_by(md5sum=old_poster_md5).first()
                     if old_poster and len(old_poster.movies) == 1: # other movies are not using the same poster
-                        self.db.session.delete(old_poster)
+                        session.delete(old_poster)
                         delete.delete_poster_from_cache(self, old_poster_md5)
 
-    update_movie_instance(movie, details, self.db.session)
+    update_movie_instance(movie, details, session)
     
-    self.db.session.add(movie)
-    if commit(self, self.db.session):
+    session.add(movie)
+    if commit(session):
         treeselection = self.widgets['treeview'].get_selection()
         (tmp_model, tmp_iter) = treeselection.get_selected()
         
@@ -644,6 +646,8 @@
 
 
 def add_movie_db(self, close):
+    session = self.db.Session()
+
     details = get_details(self)
     if not details['o_title'] and not details['title']:
         gutils.error(self.widgets['results']['window'],
@@ -652,13 +656,13 @@
         return False
 
     if details['o_title']:
-        if self.db.session.query(db.Movie).filter_by(o_title=details['o_title']).count() > 0:
+        if session.query(db.Movie).filter_by(o_title=details['o_title']).count() > 0:
             response = gutils.question(_('Movie with that title already exists, are you sure you want to add?'), \
                                        False, self.widgets['add']['window'])
             if response == gtk.RESPONSE_NO:
                 return False
     if details['title']:
-        if self.db.session.query(db.Movie).filter_by(title=details['title']).count() > 0:
+        if session.query(db.Movie).filter_by(title=details['title']).count() > 0:
             response = gutils.question(_('Movie with that title already exists, are you sure you want to add?'), \
                                        False, self.widgets['add']['window'])
             if response == gtk.RESPONSE_NO:
@@ -669,7 +673,7 @@
         if os.path.isfile(tmp_image_path):
             new_poster_md5 = gutils.md5sum(file(tmp_image_path, 'rb'))
 
-            if self.db.session.query(db.Poster).filter_by(md5sum=new_poster_md5).count() == 0:
+            if session.query(db.Poster).filter_by(md5sum=new_poster_md5).count() == 0:
                 try:
                     data = file(tmp_image_path, 'rb').read()
                 except Exception, e:
@@ -678,7 +682,7 @@
                     poster = db.Poster(md5sum=new_poster_md5, data=data)
                     del details["image"]
                     details["poster_md5"] = new_poster_md5
-                    self.db.session.add(poster)
+                    session.add(poster)
             try:
                 os.remove(tmp_image_path)
             except Exception, e:
@@ -687,9 +691,9 @@
             log.warn("cannot read temporary file: %s", tmp_image_path)
 
 
-    movie = update_movie_instance(None, details, self.db.session)
-    self.db.session.add(movie)
-    if not commit(self, self.db.session):
+    movie = update_movie_instance(None, details, session)
+    session.add(movie)
+    if not commit(session):
         return False
 
     rows = len(self.treemodel)
@@ -738,13 +742,15 @@
 
 
 def clone_movie(self):
+    session = self.db.Session()
+
     treeselection = self.widgets['treeview'].get_selection()
     (tmp_model, tmp_iter) = treeselection.get_selected()
     if tmp_iter is None:
         log.warn("cannot clone movie: no item selected")
         return False
     number = tmp_model.get_value(tmp_iter, 0)
-    movie = self.db.session.query(db.Movie).filter_by(number=number).first()
+    movie = session.query(db.Movie).filter_by(number=number).first()
 
     if movie is None:
         log.warn("cannot clone movie: Movie(%s) not found", number)
@@ -800,8 +806,8 @@
     new_movie.loans          = movie.loans
     
     # save
-    self.db.session.add(new_movie)
-    if not commit(self, self.db.session):
+    session.add(new_movie)
+    if not commit(session):
         return False
 
     image_path = gutils.get_image_fname(movie.poster_md5, self.db)
@@ -850,7 +856,7 @@
     return movie
 
 
-def commit(self, session):
+def commit(session):
     try:
         session.commit()
     except IntegrityError, e:



From piotrek at mail.berlios.de  Sun Jul  5 23:10:22 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 23:10:22 +0200
Subject: [Griffith-svn] r1244 - in trunk: . lib
Message-ID: <200907052110.n65LALH9021079@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 23:10:21 +0200 (Sun, 05 Jul 2009)
New Revision: 1244

Modified:
   trunk/ChangeLog
   trunk/lib/backup.py
   trunk/lib/db.py
Log:
Update current value of sequence after restoring data from backup in PostgreSQL


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-05 19:08:21 UTC (rev 1243)
+++ trunk/ChangeLog	2009-07-05 21:10:21 UTC (rev 1244)
@@ -9,6 +9,8 @@
 	* Use SQLAlchemy's PickleType to store search conditions
 	  (old rules are removed without warning - beta version privilege ;)
 	* Remove ilike from search criteria
+	* Update current value of sequence after restoring data from backup in
+	  PostgreSQL
 
 2009-07-04  Piotr O?arowski
 	* Version changed to 0.10-beta3+svn

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2009-07-05 19:08:21 UTC (rev 1243)
+++ trunk/lib/backup.py	2009-07-05 21:10:21 UTC (rev 1244)
@@ -117,15 +117,28 @@
         db.metadata.tables['posters'].insert(bind=dst_engine).execute(md5sum=poster.md5sum, data=StringIO(poster.data).read())
 
     for table in db.metadata.sorted_tables:
-        if table.name in ('posters', 'filters'):
-            continue # see below
+        if table.name in ('posters',):
+            continue # see above
         log.debug('... processing %s table', table)
-        data = [dict((col.key, x[col.name]) for col in table.c)
-                    for x in src_engine.execute(table.select())]
+        data = [dict((col.key, row[col.name]) for col in table.c)
+                    for row in src_engine.execute(table.select())]
         if data:
             log.debug('inserting new data...')
             dst_engine.execute(table.insert(), data)
 
+            if dst_engine.name == 'postgres':
+                # update current value of sequences
+                primary_column_name = table.primary_key.keys()[0]
+                if primary_column_name.endswith('_id'):
+                    currval = max(row[primary_column_name] for row in data)
+                    query = "SELECT setval('%s_%s_seq', %s)" % (table.name, primary_column_name, currval)
+                    log.debug('updating sequence: %s', query)
+                    try:
+                        dst_engine.execute(query)
+                    except Exception, e:
+                        e = getattr(e, 'message', e)
+                        log.error('cannot update sequence: %s', e)
+
 def merge_db(src_db, dst_db): # FIXME
     merged = 0
     dst_db.session.rollback() # cancel all pending operations

Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-05 19:08:21 UTC (rev 1243)
+++ trunk/lib/db.py	2009-07-05 21:10:21 UTC (rev 1244)
@@ -199,7 +199,7 @@
 
 ### table definitions ######################################### {{{
 movies_table = Table('movies', metadata,
-    Column('movie_id', Integer, primary_key = True),
+    Column('movie_id', Integer, primary_key=True),
     Column('number', Integer, nullable=False, unique=True, index=True),
     Column('collection_id', ForeignKey('collections.collection_id')),
     Column('volume_id', ForeignKey('volumes.volume_id')),



From piotrek at mail.berlios.de  Sun Jul  5 23:40:54 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 23:40:54 +0200
Subject: [Griffith-svn] r1245 - in trunk: . lib
Message-ID: <200907052140.n65LesIL022925@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 23:40:53 +0200 (Sun, 05 Jul 2009)
New Revision: 1245

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/backup.py
Log:
* wrap long lines in changelog
* rename backup function in backup module


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-05 21:10:21 UTC (rev 1244)
+++ trunk/ChangeLog	2009-07-05 21:40:53 UTC (rev 1245)
@@ -1,4 +1,4 @@
-# $Id$
+# $Id$ vim: ts=4
 
 Griffith ChangeLog
 ------------------
@@ -99,7 +99,8 @@
 	* Cinematografo movie plugin updated
 
 2009-02-28  Michael Jahn
-	* screenplay, cameraman, resolution and barcode added to Search-For section in preferences
+	* screenplay, cameraman, resolution and barcode added to Search-For
+	  section in preferences
 
 2009-02-24  Michael Jahn
 	* Amazon posters: removing of temporary files fixed
@@ -115,7 +116,8 @@
 ---- 0.10-beta2 ----
 
 2009-02-10  Piotr O?arowski
-	* Fix upgrading from v2 to v4 (columns that are not available yet, are not used)
+	* Fix upgrading from v2 to v4 (columns that are not available yet, are not
+	  used)
 	* Releasing 0.10-beta2
 
 2009-02-07  Michael Jahn
@@ -148,7 +150,8 @@
 	* Add loaned_movies_count and returned_movies_count properties to Person
 
 2009-01-17  Piotr O?arowski
-	* Use MediumBLOB on MySQL to store posters. Database has to be recreated if 0.10-beta1 was used to create it.
+	* Use MediumBLOB on MySQL to store posters. Database has to be recreated
+	  if 0.10-beta1 was used to create it.
 	* Few SQL optimizations
 
 2009-01-16  Piotr O?arowski
@@ -187,11 +190,13 @@
 	* IMDB movie plugin updated
 
 2008-12-16  Piotr O?arowski
-	* Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)
+	* Reload movie plugin each time search is performed (in --debug mode only,
+	  this should ease writing plugins)
 	* Canceling search doesn't throw exception anymore (closes: 100038)
 
 2008-12-07  Piotr O?arowski
-	* update_image(): update the md5 *after* all other queries (so that UPDATE will not be invoked)
+	* update_image(): update the md5 *after* all other queries (so that UPDATE
+	  will not be invoked)
 
 2008-12-07  Piotr O?arowski
 	* CSFD movie plugin updated (thanks to Ale? Nejdr)
@@ -213,7 +218,8 @@
 	* fixed rating, runtime and year are not shown with MySQL backend
 
 2008-11-10  Michael Jahn
-	* optimized windows setup related code, added links to documentation files, forum and wiki to the installer
+	* optimized windows setup related code, added links to documentation
+	  files, forum and wiki to the installer
 
 2008-11-18  Piotr O?arowski
 	* Version changed to 0.10-beta2~svn
@@ -251,7 +257,8 @@
 	* [#179618] During "Get from Web ", griffith window keeps stealing focus
 
 2008-10-23  Michael Jahn
-	* PDF export: disabled movie grouping if movie list is not sorted by title or original title
+	* PDF export: disabled movie grouping if movie list is not sorted by title
+	  or original title
 	* [#258817] The application doesn't save volume
 
 2008-10-25  Piotr O?arowski
@@ -276,15 +283,18 @@
 
 2008-09-14  Piotr O?arowski
 	* Warn about backups when starting develpement version
-	* seen/loaned settings available in adv. filter window (much more to come soon)
+	* seen/loaned settings available in adv. filter window (much more to come
+	  soon)
 
 2008-09-13  Piotr O?arowski
 	* Loaning movies is working again
 
 2008-09-12  Piotr O?arowski
 	* Validate loan contact's email address
-	* Python required version bumped to 2.4 (it was required for a while aready)
-	* Use SQLAlchemy's validate decorator (minimum required SA version bumped to 0.5rc1)
+	* Python required version bumped to 2.4 (it was required for a while
+	  aready)
+	* Use SQLAlchemy's validate decorator (minimum required SA version bumped
+	  to 0.5rc1)
 
 2008-09-09  Piotr O?arowski
 	* Add aspect ratio, cameraman and screenplay to the database
@@ -321,7 +331,8 @@
 
 2008-07-28  Piotr O?arowski
 	* Switch back to 4 spaces indentation
-	* Rewrite SQLAlchemy related data to use session (to ease accessing simultaneously multiple databases)
+	* Rewrite SQLAlchemy related data to use session (to ease accessing
+	  simultaneously multiple databases)
 
 ---- 0.9.7.1 ----
 
@@ -330,12 +341,16 @@
 	* Version changed to 0.9.7
 
 2008-07-24  Michael Jahn
-	* main treeview doesn't accept DB-NULL or empty strings for the int-fields rating, year and runtime
+	* main treeview doesn't accept DB-NULL or empty strings for the int-fields
+	  rating, year and runtime
 
 2008-07-24  Michael Jahn
-	* Windows only: set_wrap_width doesn't work in filter toolbar without side effects if GTK 2.12.9 is used
-	* updated INSTALL file to new versions (GTK, Glade, PyGTK, py2exe, pywin32, Inno Setup)
-	* fixed URL creation in setup script; added removing of .pyo files if deinstalled
+	* Windows only: set_wrap_width doesn't work in filter toolbar without side
+	  effects if GTK 2.12.9 is used
+	* updated INSTALL file to new versions (GTK, Glade, PyGTK, py2exe,
+	  pywin32, Inno Setup)
+	* fixed URL creation in setup script; added removing of .pyo files if
+	  deinstalled
 
 ---- 0.9.7 ----
 
@@ -345,13 +360,16 @@
 	* Filmweb movie plugin updated (thanks to mariusz2806)
 	* Added Latvian translation (thanks to Aleksandrs Zdancuks)
 	* Added Ukrainian translation (thanks to vazaz)
-	* Updated translations: bg, ca, da, de, el, es, fr, it, nb, pt, pt_BR, ru, sv, tr
+	* Updated translations: bg, ca, da, de, el, es, fr, it, nb, pt, pt_BR, ru,
+	  sv, tr
 	* Version changed to 0.9.7
 
 2008-07-18  Michael Jahn
-	* added User-Agent support, because some web sites doesn't like the Python urllib default
+	* added User-Agent support, because some web sites doesn't like the Python
+	  urllib default
 	* updated Zelluloid plugin
-	* support for accents in titles for searching if plugin needs it (Zelluloid needs german umlauts)
+	* support for accents in titles for searching if plugin needs it
+	  (Zelluloid needs german umlauts)
 
 2008-07-17  Michael Jahn
 	* updated OFDb plugin
@@ -361,7 +379,8 @@
 2008-07-13  Michael Jahn
 	* updated DVDEmpire plugin
 	* [#236598] scroll bar in filter "by volume" appears
-	* fixed loan label in main view if html entities are used in the name of a person
+	* fixed loan label in main view if html entities are used in the name of a
+	  person
 
 2008-07-11  Michael Jahn
 	* added quick filter for tags
@@ -371,7 +390,8 @@
 	* updated Filmtipset plugin
 
 2008-05-09  Michael Jahn
-	* added cast, genre and grouping by first letter to pdf export (thanks to Luigi Pantano)
+	* added cast, genre and grouping by first letter to pdf export (thanks to
+	  Luigi Pantano)
 
 2008-05-08  Michael Jahn
 	* updated DVD Empire plugin
@@ -409,8 +429,10 @@
 	* sort collection list and volume list by name
 
 2008-02-03  Michael Jahn
-	* hit enter key in title/original title box starts retrieving data from web for a new entry
-	* HTML export: replace linebreaks with <br /> in the data if "XHTML 1.0" is found in the template header
+	* hit enter key in title/original title box starts retrieving data from
+	  web for a new entry
+	* HTML export: replace linebreaks with <br /> in the data if "XHTML 1.0"
+	  is found in the template header
 
 ---- 0.9.6 ----
 
@@ -424,7 +446,8 @@
 	* Translators tab (about dialog) filled in automatically
 
 2008-01-13  Piotr O?arowski
-	* Distribute local copy of SQLAlchemy 0.3.11 (Griffith 0.10 which will work with SQLAlchemy 0.4.x is not ready yet)
+	* Distribute local copy of SQLAlchemy 0.3.11 (Griffith 0.10 which will
+	  work with SQLAlchemy 0.4.x is not ready yet)
 	* Version changed to 0.9.6
 	* Update .desktop file to Desktop Entry Specification's version 1.0
 
@@ -453,7 +476,8 @@
 	* Russian language file updated
 
 2007-11-28  Michael Jahn
-	* [#164966] deactivating spellchecker option in preferences dialog disables the depending elements
+	* [#164966] deactivating spellchecker option in preferences dialog
+	  disables the depending elements
 
 2007-11-22  Michael Jahn
 	* added columns genre, seen, runtime and year to the mainlist
@@ -468,7 +492,8 @@
 2007-11-08  Michael Jahn
 	* status bar shows count of movies after applying a filter
 	* changed HTML export:
-	  + exported poster file names contain the movie number instead of the random name
+	  + exported poster file names contain the movie number instead of the
+	    random name
 	  + movies without a poster get the griffith picture
 
 2007-10-15  Michael Jahn
@@ -479,15 +504,17 @@
 	* Italian language file updated
 
 2007-09-06  Vasco Nunes
-	* Berlios task [#003126] complete. Griffith's dir should point to 'Application Data' on windows systems.
+	* Berlios task [#003126] complete. Griffith's dir should point to
+	  'Application Data' on windows systems.
 
 2007-09-06  Michael Jahn
 	* save window state, position and size on windows systems
 	* save selected quick filter criteria
-	* fixed backup if path or filename contains special characters (like german umlauts)
+	* fixed backup if path or filename contains special characters (like
+	  german umlauts)
 	* use deflate for backup if available
-	* added auto-test feature for movie plugins (only used by developers; execute
-	  test_movieplugins.py directly)
+	* added auto-test feature for movie plugins (only used by developers;
+	  execute test_movieplugins.py directly)
 	* FilmeVonAZ and OFDb plugin updated
 	* fixed saving media and vcodec defaults in preferences dialog
 
@@ -499,7 +526,8 @@
 2007-09-02  Piotr O?arowski
 	* Translation files synchronized with Rosetta
 	  + new: Catalan, Norwegian Bokmal
-	  + uptaded: Brazilian Portuguese, Cech, Dutch, French, German, Italian, Portuguese, Russian
+	  + uptaded: Brazilian Portuguese, Cech, Dutch, French, German, Italian,
+	    Portuguese, Russian
 	* Polish translation updated
 	* Print cover function fixed (reportlab doesn't like unicode)
 
@@ -508,7 +536,8 @@
 	* added "auto-fixing" of config file values for defaults section
 
 2007-09-01  Piotr O?arowski
-	* Respect medium and video codec's default value in add window (closes: #11864)
+	* Respect medium and video codec's default value in add window
+	  (closes: #11864)
 	* griffith.glade file converted to glade3 format
 
 2007-09-01  Michael Jahn
@@ -543,7 +572,8 @@
 
 2007-08-04  Piotr O?arowski
 	* Removing tags function fixed
-	* Copy all files from "data" subdirectory to the exported location in HTML export plugin
+	* Copy all files from "data" subdirectory to the exported location in HTML
+	  export plugin
 	  + add index.htm files to html_table{,s} templates
 	* Fixed volume/colection loaning problem
 
@@ -584,7 +614,8 @@
 ---- 0.9.3 ----
 
 2007-06-30  Piotr O?arowski
-	* Use python2.5's sqlite3 module if available (no need to install pysqlite2)
+	* Use python2.5's sqlite3 module if available (no need to install
+	  pysqlite2)
 	* Check dependencies at startup
 	* Detect old config while restoring data
 	* Stopklatka movie plugin updated
@@ -592,7 +623,8 @@
 2007-06-29  Piotr O?arowski
 	* Added Greek translation (thanks to Ioannis Koniaris)
 	* Added Simplified Chinese translation (thanks to kempson)
-	* Updated German, Spanish, French and Portuguese Brazilian translations (from Rosetta)
+	* Updated German, Spanish, French and Portuguese Brazilian translations
+	  (from Rosetta)
 	* Updated Polish translations
 	* Do not register mime type in .desktop file
 
@@ -632,13 +664,14 @@
 	* Add sections to config file
 
 2007-06-09  Vasco Nunes
-	* Added new alpha export plugin for iPods.
-	  Exports directly to iPod on macosx for now, saves files in custom location on other platforms.
-	  Not handling 4Kb iPod notes limit yet.
+	* Added new alpha export plugin for iPods. Exports directly to iPod on
+	  MacOSX for now, saves files in custom location on other platforms.Not
+	  handling 4Kb iPod notes limit yet.
 
 2007-05-31  Piotr O?arowski
 	* IMDB, IMDB-de and KinoDe movie plugins updated (thanks to Michael Jahn)
-	* Resizable columns in add movie window's languages tab (thanks to Michael Jahn)
+	* Resizable columns in add movie window's languages tab (thanks to Michael
+	  Jahn)
 	* Increase runtime maximum value (thanks to Michael Jahn)
 	* Add Microsoft SQL support (thanks to Michael Jahn)
 
@@ -675,9 +708,11 @@
 	* FilmDb and Zelluloid movie plugins added (thanks to Michael Jahn)
 
 2007-03-11  Piotr O?arowski
-	* Filmweb movie plugin updated (no more hangs if no movie info found - closes #10601)
+	* Filmweb movie plugin updated (no more hangs if no movie info found
+	  (closes #10601)
 	* Version changed to 0.9.2+svn
-	* New configuration file format (human readable) - please delete old one manually
+	* New configuration file format (human readable) - please delete old one
+	  manually
 
 ---- 0.9.2 ----
 
@@ -699,7 +734,8 @@
 	* KinoDe movie plugin updated (thanks to Michael Jahn)
 
 2007-02-12  Piotr O?arowski
-	* Fix broken databases automatically (return date will be set to 2007-01-01) - redo the upgrade process if you don't like it
+	* Fix broken databases automatically (return date will be set to
+	  2007-01-01) - redo the upgrade process if you don't like it
 
 2007-02-11  Piotr O?arowski
 	* Fix one more bad case in upgrade function
@@ -779,12 +815,14 @@
 	* Updated Czech translation and CSFD movie pluging (thanks to Blondak)
 	* Updated Portuguese Brazilian translation (thanks to F?bio Nogueira)
 	* Fixed win32 gtk locale issue
-	* Fixed win32 default system font directory detection (for use in preferences)
+	* Fixed win32 default system font directory detection (for use in
+	  preferences)
 	* Updated French translation (thanks to Pierre-Luc L?vi)
 	* Latex is no more the default entry for html export plugin :)
 
 2007-01-03  Vasco Nunes
-	* Using cPickle over pickle for serialization. Config files are now fully cross-platform.
+	* Using cPickle over pickle for serialization. Config files are now fully
+	  cross-platform.
 
 2007-01-03  Piotr O?arowski
 	* Install Polish manpage in ISO-8859-2 encoding
@@ -829,7 +867,8 @@
 	* Polish manpage updated
 
 2006-12-20  Piotr O?arowski
-	* Version changed to 0.9~rc1 (0.7 and 0.8 are skipped because of lots of changes in this release)
+	* Version changed to 0.9~rc1 (0.7 and 0.8 are skipped because of lots of
+	  changes in this release)
 	* Merge function and MySQL/PostgreSQL backup disabled for now
 	* English manpage updated
 	* Homepage updated
@@ -855,22 +894,29 @@
 	* WP, FDb and Onet movie plugins updated
 	* movie plugins:
 	  + allow "%s" in self.original_url_search and self.translated_url_search
-	  + opening new page inside movie plugin is now as easy as: "self.new_page =  self.open_page(url='http://something')"
+	  + opening new page inside movie plugin is now as easy as:
+	    "self.new_page = self.open_page(url='http://something')"
 	* chardet added to optional dependencies
 	* Import multiple files at once
 
 2006-12-16  Jessica K. Parth
-	* added a warning when there are no movies in the database to ( print cover, fetch poster, change poster, edit movie, delete movie, clone movie )
-	* Import CSV Plugin updated (use chardet "http://chardet.feedparser.org/" to detect file format)
+	* added a warning when there are no movies in the database to ( print
+	  cover, fetch poster, change poster, edit movie, delete movie, clone
+	  movie)
+	* Import CSV Plugin updated (use chardet "http://chardet.feedparser.org/"
+	  to detect file format)
 
 2006-12-15  Piotr O?arowski
-	* Added "N/A" to some fields in "technical information" tab (NULL in database)
+	* Added "N/A" to some fields in "technical information" tab (NULL in
+	  database)
 	* Added some relations between windows
-	* "Suggest unseen movie" now chooses movie from main list only (f.e. from specified collection)
+	* "Suggest unseen movie" now chooses movie from main list only (f.e. from
+	  specified collection)
 
 2006-12-15  Jessica K. Parth
 	* ODFb Plugin uses the quicksearch and returns much more and better results
-	* KinoDE Plugin return both results for Video/DVD and Kino now and some small fixes
+	* KinoDE Plugin return both results for Video/DVD and Kino now and some
+	  small fixes
 	* German Translation updated
 	* Moviefone Plugin updated
 
@@ -956,7 +1002,8 @@
 	* Fixed CSFD movie plugin (thanks to Ondra 'Kepi' Kudl?k for patch #1449)
 
 2006-09-02  Piotr O?arowski
-	* Fixed some UTF encoding problems in FDb, Filmweb, Onet and WP movie plugins
+	* Fixed some UTF encoding problems in FDb, Filmweb, Onet and WP movie
+	  plugins
 
 2006-08-28  Piotr O?arowski
 	* Some GUI changes mainly suggested by Alan Horkan:
@@ -973,11 +1020,13 @@
 	* Movie plugins are now fetching only selected data.
 
 2006-08-24  Piotr O?arowski
-	* Language treeview now supports codec/channel/subtitle format data (still needs work)
+	* Language treeview now supports codec/channel/subtitle format data (still
+	  needs work)
 
 2006-08-23  Piotr O?arowski
 	* Fixed problem with converting images on Windows (HTML export plugin)
-	* Fixed bug with "You have to fill language..." after updating language list
+	* Fixed bug with "You have to fill language..." after updating language
+	  list
 
 2006-08-18  Piotr O?arowski
 	* Added green style to "html tables" template (HTML export plugin)
@@ -1094,7 +1143,8 @@
 	* First tag can now be renamed
 
 2006-04-08  Vasco Nunes
-	* win32 distro is using now gtk2.8 with pygtk2.8. This fixes lots of old pygtk related bugs (mainly major pixbuf ones)
+	* win32 distro is using now GTK 2.8 with PyGTK 2.8. This fixes lots of old
+	  PyGTK related bugs (mainly major pixbuf ones)
 
 2006-04-07  Vasco Nunes
 	* some win32 related fixes
@@ -1120,10 +1170,14 @@
 
 2006-03-05  Vasco Nunes
 	* Fixed bug when using 'clone movie' function on filtered treeview.
-	* When using quick filter, 'all movies' filter on menu should be checked. Fixed.
-	* Posters are now saved to the system temp dir and only moved to posters dir when the movie is really commited to db.
-	* Added a new feature to find and delete orphaned files in poster's directory. For now, it's a console only tool.
-	  'griffith -c' or 'griffith --clean'. Griffith should not produce orphans anymore but this is useful for cleaning old ones.
+	* When using quick filter, 'all movies' filter on menu should be checked.
+	  Fixed.
+	* Posters are now saved to the system temp dir and only moved to posters
+	  dir when the movie is really commited to db.
+	* Added a new feature to find and delete orphaned files in poster's
+	  directory. For now, it's a console only tool (griffith -c' or
+	  'griffith --clean'). Griffith should not produce orphans anymore but
+	  this is useful for cleaning old ones.
 
 2006-03-05  Piotr O?arowski
 	* Fixed bug when searching movie titles containing polish characters
@@ -1173,7 +1227,8 @@
 	* Movie now can't be deleted while it is loaned
 
 2006-02-25  Vasco Nunes
-	* Fixed problem under macosx and safari not opening websites fired up by griffith
+	* Fixed problem under macosx and safari not opening websites fired up by
+	  Griffith
 	* Removed loan flag from the main treeview.
 
 2006-02-21  Piotr O?arowski
@@ -1208,12 +1263,16 @@
 	* Debug console argument changed to -D, --debug
 
 2006-02-01  Vasco Nunes
-	* Fixed a problem with IMDB movie plugin not fetching casts for some movies
-	* Fixed a bug on IMDB movie plugin. Some movies were giving weird results on director's field.
+	* Fixed a problem with IMDB movie plugin not fetching casts for some
+	  movies
+	* Fixed a bug on IMDB movie plugin. Some movies were giving weird results
+	  on director's field.
 	* '"' char is now stripped from titles in all movie plugins.
-	* Added initial support for console arguments. No multi argument support yet.
+	* Added initial support for console arguments. No multi argument support
+	  yet.
 	* Debug functions moved to own class
-	* Added basic searching by original title on the console (griffith -s movie_title)
+	* Added basic searching by original title on the console (griffith -s
+	  movie_title)
 
 2006-01-28  Piotr O?arowski
 	* Movie number is now editable
@@ -1224,7 +1283,8 @@
 	* Added tags feature (alpha version)
 
 2006-01-24  Vasco Nunes
-	* Fixed bug with spellchecker initialization when an aspell word list is not installed.
+	* Fixed bug with spellchecker initialization when an aspell word list is
+	  not installed.
 
 2006-01-14  Piotr O?arowski
 	* Filmweb movie plugin updated
@@ -1236,7 +1296,8 @@
 	* [Bug #5685] AnimeDB plugin really works again
 
 2006-01-06  Vasco Nunes
-	* German OFDB (Online-Filmdatenbank) movie plugin updated. (Christian Sagmueller)
+	* German OFDB (Online-Filmdatenbank) movie plugin updated. (Christian
+	  Sagmueller)
 	* German translation updated. (Christian Sagmueller)
 	* Portuguese translation updated.
 
@@ -1259,7 +1320,8 @@
 	* Fixed crash when volume or collection name wasn't string
 
 2005-12-28  Vasco Nunes
-	* Proprietary unicode font used on PDF reports replaced with a free one (DejaVu)
+	* Proprietary unicode font used on PDF reports replaced with a free one
+	  (DejaVu)
 	* Some changes to simple list PDF export plugin
 
 2005-12-27  Vasco Nunes
@@ -1277,14 +1339,16 @@
 	* Updated polish translation
 
 2005-11-22  Vasco Nunes
-	* Added a new czech movie plugin (CSFD - esko-Slovensk Filmov Databze) - Thanks to Blondak <blondak at neser.cz>
+	* Added a new czech movie plugin (CSFD - esko-Slovensk Filmov Databze) -
+	  Thanks to Blondak <blondak at neser.cz>
 
 2005-11-21  Vasco Nunes
 	* Added Czech translation (Thanks to Blondak <blondak at neser.cz>)
 	* [Bug #5684] About window doesn't work on windows
 	* [Bug #5683] Two filters not working at all on windows
 	* Added a win32 installer custom image.
-	* Added portuguese, polish, german and czech translations to win32 installer.
+	* Added portuguese, polish, german and czech translations to win32
+	  installer.
 
 2005-11-21  Piotr O?arowski
 	* Added simple style to table template (HTML export plugin)
@@ -1311,36 +1375,46 @@
 
 2005-11-11  Vasco Nunes
 	* Fixed lots of poster operations bugs
-	* Added cgi module include on windows py2exe script (used by amazon.py module)
+	* Added cgi module include on windows py2exe script (used by amazon.py
+	  module)
 	* Added PIL module include on windows py2exe script
 	* Portuguese language file updated
 
 2005-11-10  Vasco Nunes
-	* Added some cyclic garbage collector calls that really should improve memory management when using large db collections
+	* Added some cyclic garbage collector calls that really should improve
+	  memory management when using large db collections
 
 2005-11-09  Vasco Nunes
-	* Added a list to choose from when fetching big posters from Amazon.com and an exact match is not found.
+	* Added a list to choose from when fetching big posters from Amazon.com
+	  and an exact match is not found.
 
 2005-11-07  Vasco Nunes
-	* Big posters fetched from Amazon are now previewed on built-in poster viewer.
+	* Big posters fetched from Amazon are now previewed on built-in poster
+	  viewer.
 
 2005-11-05  Piotr O?arowski
 	* Media names are now stored in database
 	* Updated polish translation
 
 2005-11-04  Vasco Nunes
-	* On darwin and win32 platforms the poster viewer should not use enter/leave events anymore. Pygtk seems buggy when handling these.
-	* Added initial support to fetch bigger posters using Amazon Web Services. TODO: select poster to use when more than one found. Using the first one for now.
+	* On darwin and win32 platforms the poster viewer should not use
+	  enter/leave events anymore. Pygtk seems buggy when handling these.
+	* Added initial support to fetch bigger posters using Amazon Web Services.
+	  TODO: select poster to use when more than one found. Using the first one
+	  for now.
 	* Added original Mark Pilgrim's amazon python wrapper to core distribution
 
 2005-10-29  Vasco Nunes
 	* Added some HTML export plugin fixes for win32 compatibility
-	* Added a minor change to sql module for win32 poster paths compatibility. Needs to be tested under *nix to see if nothing is broken.
-	* win32 build should use now the libwimp widget engine for better windows visual integration
+	* Added a minor change to sql module for win32 poster paths compatibility.
+	  Needs to be tested under *nix to see if nothing is broken.
+	* win32 build should use now the libwimp widget engine for better windows
+	  visual integration
 
 2005-10-27  Vasco Nunes
 	* Added some minor changes for win32 compatibility
-	* Now Griffith's dir defaults to localized 'My Documents' dir on win32 environments
+	* Now Griffith's dir defaults to localized 'My Documents' dir on win32
+	  environments
 
 2005-10-27  Piotr O?arowski
 	* Volume/collection renaming is now possible
@@ -1387,7 +1461,8 @@
 	* Polish translation updated
 
 2005-10-05  Vasco Nunes
-	* Poster viewer events changed to only show full poster when entering/leaving zoom button
+	* Poster viewer events changed to only show full poster when
+	  entering/leaving zoom button
 	* Delete/Zoom poster buttons are now sensitive to poster existence
 	* Portuguese translation updated
 
@@ -1395,7 +1470,8 @@
 	* Griffith now asks if you want to loan whole collection
 
 2005-10-01  Vasco Nunes
-	* Moved all movie plugins logos to a new optional package (griffith_extra_artwork module on cvs)
+	* Moved all movie plugins logos to a new optional package
+	  (griffith_extra_artwork module on cvs)
 	* Added some tooltips to preferences widgets
 	* Added some new tools to operate with posters (initial support)
 
@@ -1418,10 +1494,12 @@
 	* Added a debug method to urlretrieve calls 
 	* Added new XML export plugin
 	* Renamed Export With Templates plugin to HTML export plugin
-	* Fixed bug with tabs not being striped on director data on ClubeMyDVD movie plugin
+	* Fixed bug with tabs not being striped on director data on ClubeMyDVD
+	  movie plugin
 
 2005-09-23  Vasco Nunes
-	* DVDZone2 plugin renamed to Mediadis according to new company service and website. Some enhancement to this plugin implemented.
+	* DVDZone2 plugin renamed to Mediadis according to new company service and
+	  website. Some enhancement to this plugin implemented.
 
 2005-09-21  Piotr O?arowski
 	* Added Tanuki-Anime movie plugin.
@@ -1429,7 +1507,8 @@
 	* Makefile update. Closes: #1324
 
 2005-09-21  Vasco Nunes
-	* Added experimental support for Microsoft Windows 2000, Millenium and Windows 98 systems
+	* Added experimental support for Microsoft Windows 2000, Millenium and
+	  Windows 98 systems
 	* [Bug #1313] Film fields with & or < break the PDF export plugin
 
 2005-09-20  Piotr O?arowski
@@ -1448,15 +1527,19 @@
 	* Small main window changes
 
 2005-09-13  Piotr O?arowski
-	* Movie plugins update ("with" entry updated to use multiline, minor bugs fixed)
+	* Movie plugins update ("with" entry updated to use multiline, minor bugs
+	  fixed)
 	* Gery movie plugin removed - webpage is not working
 	* movie.py: capwords() should be used only if needed
 
 2005-09-12  Vasco Nunes
-	* [Bug #1302] Searching movies with non-english characters gives null results
-	* Merged two patches contributed by Arjen Schwarz, addressing one problem with email notification
-	  that was using an incorrect date/time format and another fixing some english spell errors found in language file.
-	* Color, condition, layers info and region defaults now to 'n/a' when adding a new movie.
+	* [Bug #1302] Searching movies with non-english characters gives null
+	  results
+	* Merged two patches contributed by Arjen Schwarz, addressing one problem
+	  with email notification that was using an incorrect date/time format and
+	  another fixing some english spell errors found in language file.
+	* Color, condition, layers info and region defaults now to 'n/a' when
+	  adding a new movie.
 
 2005-09-12  Piotr O?arowski
 	* UseTemplates export plugin update
@@ -1491,7 +1574,8 @@
 2005-09-02  Vasco Nunes
 	* Added double click events to lists where needed
 	* Added a new button to add movie window: 'add movie and close'
-	* Added a popup menu to main treeview when left button is clicked over an entry to perform common tasks
+	* Added a popup menu to main treeview when left button is clicked over an
+	  entry to perform common tasks
 
 2005-08-31  Vasco Nunes
 	* Added portuguese manpages
@@ -1522,8 +1606,11 @@
 	* HTML export plugin now uses templates! (version 3.0-rc1)
 
 2005-08-20  Vasco Nunes
-	* Merged a couple of patches contributed by Arjen Schwarz, addressing the following issues:
-	  [Bug #1260] data for the color, region, condition and layers not being stored in database; Some spelling mistakes fixed on english language file.
+	* Merged a couple of patches contributed by Arjen Schwarz, addressing the
+	  following issues:
+	  [Bug #1260] data for the color, region, condition and layers not being
+	  stored in database; Some spelling mistakes fixed on english language
+	  file.
 
 ---- 0.4.1 ----
 
@@ -1531,10 +1618,12 @@
 	* After adding a new movie, the original title widget has now the focus
 
 2005-08-18  Vasco Nunes
-	* Fixed some minor encoding problems with 7arte.net and ClubeMyDVD movie Plugins
+	* Fixed some minor encoding problems with 7arte.net and ClubeMyDVD movie
+	  Plugins
 	* [Bug #1258] wrong movie fetching.
 	* Some UI changes on main window and add dialog
-	* When quick filter is changed movie details should be blank because no movie is selected. Fixed.
+	* When quick filter is changed movie details should be blank because no
+	  movie is selected. Fixed.
 	* Password characters in email reminder preferences are now hidden
 
 2005-08-18  Piotr O?arowski
@@ -1550,9 +1639,12 @@
 	* Fixed bug when updating a person data. Treeview was not refreshing.
 	* Fixed bug when deleting a person. Should not delete entries in use.
 	* Fixed bugs with some movie plugins.
-	* Added email reminder preferences (smtp server, auth, username, password, email address sender)
-	* Minor UI adjustment. Moved some fields from movie details tab to technical information.
-	* Fixed bug with sugest not seen movie not working when a filter is activated.
+	* Added email reminder preferences (smtp server, auth, username, password,
+	  email address sender)
+	* Minor UI adjustment. Moved some fields from movie details tab to
+	  technical information.
+	* Fixed bug with sugest not seen movie not working when a filter is
+	  activated.
 	* Fix bug with random crashes when saving preferences caused by gtkspell
 
 2005-08-15  Vasco Nunes
@@ -1575,32 +1667,40 @@
 
 2005-08-12  Piotr O?arowski
 	* Some fixes in HTML export plugin and polish movie plugins
-	* Fixed problems with AniDB movie plugin (changed gdecode method in gutils)
+	* Fixed problems with AniDB movie plugin (changed gdecode method in
+	  gutils)
 
 2005-08-11  Vasco Nunes
 	* [Bug #1244] Missing poster images. Fixed.
-	* Added four new fields: color, media condition, dvd region and dvd layers information
+	* Added four new fields: color, media condition, dvd region and dvd layers
+	  information
 	* Merged some duplicated language strings.
-	* Added favorite movie plugin to preferences to be used by default when fetching web data 
+	* Added favorite movie plugin to preferences to be used by default when
+	  fetching web data 
 
 2005-08-11  Piotr O?arowski
 	* HTML export plugin updated to 2.3beta1
 	* Some new arguments added to get_all_data() function in sql.py
 
 2005-08-10  Vasco Nunes
-	* Added an email reminder option to loaned movies. Still todo: preferences (smtp server,port,auth...)
+	* Added an email reminder option to loaned movies. Still todo: preferences
+	  (smtp server,port,auth...)
 	* Fixed a bug with progressbar when fetching movie posters
 	* Fixed bug with wrong filter behaviour when no data is entered on it
 	* Implemented some generic toolbar buttons
 
 2005-08-09  Vasco Nunes
-	* Fixed a couple of bugs when adding/cloning movies in empty movie positions. Now the main treeview is always sorted.
+	* Fixed a couple of bugs when adding/cloning movies in empty movie
+	  positions. Now the main treeview is always sorted.
 	* Updated polish translation
 	* Updated all polish movie plugins
 	* Added AniDB (english) movie plugin (contributed by Piotr O?arowski)
 	* Added ClubeMyDVD (portuguese) movie plugin
-	* New method for movie plugins available - movie notes (optional). This field could be used to fetch and store misc information/details about the entry.
-	* Fixed bug in movie entry clone feature. Some fields were not being escaped as expected.
+	* New method for movie plugins available - movie notes (optional). This
+	  field could be used to fetch and store misc information/details about the
+	  entry.
+	* Fixed bug in movie entry clone feature. Some fields were not being
+	  escaped as expected.
 
 2005-08-08  Vasco Nunes
 	* Added picture preview and filter to file choose dialog
@@ -1619,9 +1719,12 @@
 	* Portuguese translation updated
 
 2005-08-04  Vasco Nunes
-	* Images are now scaled down to a new file on disk when needed and are not scaled on the fly anymore. This should result in some better performance results with larger collections. 
+	* Images are now scaled down to a new file on disk when needed and are not
+	  scaled on the fly anymore. This should result in some better performance
+	  results with larger collections. 
 	* Some minor cosmethic changes on default images
-	* Added spellchecker options to preferences dialog to choose fields and default language to be used within (unix only)
+	* Added spellchecker options to preferences dialog to choose fields and
+	  default language to be used within (unix only)
 
 2005-08-01  Vasco Nunes
 	* Added a very basic debug module
@@ -1656,7 +1759,8 @@
 	* HTML export plugin updated to v2.0beta2
 	* Updated polish and portuguese language translations
 	* Added Cinematografo (Italian) plugin
-	* Fixed bug. Problem with some characters not escaped as should be when inserting in db.
+	* Fixed bug. Problem with some characters not escaped as should be when
+	  inserting in db.
 
 2005-07-15  Vasco Nunes
 	* Old export filters changed to plugins
@@ -1671,7 +1775,8 @@
 	* [Bug #1193] Add new. Cancel not working. Fixed.
 
 2005-07-07  Vasco Nunes
-	* Config module rewritten. Now config uses pickle for better cross platform handling.
+	* Config module rewritten. Now config uses pickle for better cross
+	  platform handling.
 	* Griffith now stores window size and position on exit.
 
 2005-07-06  Vasco Nunes
@@ -1702,19 +1807,22 @@
 	* Added some menu shortcuts
 	* Added view menu
 	* Another portuguese/polish translation update
-	* All polish plugins now include rating capability (thanks to Piotr O?arowski)
+	* All polish plugins now include rating capability (thanks to Piotr
+	  O?arowski)
 
 2005-06-30  Vasco Nunes
 	* Changed plugin detection function to use glob module instead
 	* all file operations changed to use shutil module instead
 	* General code cleaning
-	* [Bug] Before function in gutils returning incorrect string. Fixed. (thanks to Piotr O?arowski)
+	* [Bug] Before function in gutils returning incorrect string. Fixed.
+	  (thanks to Piotr O?arowski)
 	* added Onnet Film (polish) plugin (thanks to Piotr O?arowski).
 	* polish translation updated
 	* portuguese translation updated
 	* Added film ratings
 	* Added ratings to quick filter
-	* [Bug] Clearing filter with some criterias were not refreshing main treeview. Fixed.
+	* [Bug] Clearing filter with some criterias were not refreshing main
+	  treeview. Fixed.
 
 2005-06-29  Vasco Nunes
 	* Moved all glade widgets/event handlers definitions for a new module
@@ -1726,7 +1834,8 @@
 
 2005-06-26  Vasco Nunes
 	* [Bug] Problem with null searches fixed 
-	* [Bug] Fixed bug on imdb plugin. exact matches were not returning any results.
+	* [Bug] Fixed bug on imdb plugin. exact matches were not returning any
+	  results.
 	* When an exact match is founded griffith tries to use it automatically
 
 2005-06-23  Vasco Nunes
@@ -1734,9 +1843,10 @@
 	* added FilmWeb (polish) plugin (thanks to Piotr O?arowski).
 	* added WP (polish) plugin (thanks to Piotr O?arowski).
 	* added csv export filter
-	* added initial support for gtkspell under *nix systems. new dependency: python-gnome-extras (optional).
-	  will not be used if not available
-	* main poster changed to a button widget allowing now to select a custom poster image.
+	* added initial support for gtkspell under *nix systems. new dependency:
+	  python-gnome-extras (optional - will not be used if not available)
+	* main poster changed to a button widget allowing now to select a custom
+	  poster image.
 
 2005-06-22  Vasco Nunes
 	* added Gery Film (polish) plugin (thanks to Piotr O?arowski).
@@ -1749,12 +1859,14 @@
 	* added PTGate.pt (portuguese) plugin.
 	* hardcoded library locations fixed.
 	* added main treeview flag on loaned films.
-	* [Bug #] After droping old database and creating a new one, new movie don't get ID=1 but incremented old highest value. Fixed.    
+	* [Bug #] After droping old database and creating a new one, new movie
+	  don't get ID=1 but incremented old highest value. Fixed.    
 
 2005-06-20  Vasco Nunes
 	* true plugin system implemented.
 	* included stopklatka.pl (polish) plugin (thanks to Piotr O?arowski).
-	* [Bug #] bug with year and running time not filled when image is not available. Fixed.
+	* [Bug #] bug with year and running time not filled when image is not
+	  available. Fixed.
 	* updated polish translation.
 
 2005-06-19  Vasco Nunes

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2009-07-05 21:10:21 UTC (rev 1244)
+++ trunk/griffith	2009-07-05 21:40:53 UTC (rev 1245)
@@ -1023,8 +1023,8 @@
     # backup/restore ------------------------------------------------------
 
     def backup(self, *args):
-        from backup import backup
-        backup(self)
+        from backup import create
+        create(self)
 
     def restore(self, *args):
         response = gutils.question(_("""Are you sure you want to restore?

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2009-07-05 21:10:21 UTC (rev 1244)
+++ trunk/lib/backup.py	2009-07-05 21:40:53 UTC (rev 1245)
@@ -41,7 +41,7 @@
 
 log = logging.getLogger('Griffith')
 
-def backup(self):
+def create(self):
     """perform a compressed griffith database/posters/preferences backup"""
     #if self.db.session.bind.engine.name != 'sqlite':
     #    gutils.error(self, _("Backup function is available only for SQLite engine for now"), self.widgets['window'])
@@ -137,7 +137,7 @@
                         dst_engine.execute(query)
                     except Exception, e:
                         e = getattr(e, 'message', e)
-                        log.error('cannot update sequence: %s', e)
+                        log.error('... cannot update sequence: %s', e)
 
 def merge_db(src_db, dst_db): # FIXME
     merged = 0



From piotrek at mail.berlios.de  Sun Jul  5 23:54:09 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 5 Jul 2009 23:54:09 +0200
Subject: [Griffith-svn] r1246 - trunk/lib
Message-ID: <200907052154.n65Ls9hJ023726@sheep.berlios.de>

Author: piotrek
Date: 2009-07-05 23:54:09 +0200 (Sun, 05 Jul 2009)
New Revision: 1246

Modified:
   trunk/lib/advfilter.py
   trunk/lib/db.py
Log:
"from foo import *" is bad ;-)


Modified: trunk/lib/advfilter.py
===================================================================
--- trunk/lib/advfilter.py	2009-07-05 21:40:53 UTC (rev 1245)
+++ trunk/lib/advfilter.py	2009-07-05 21:54:09 UTC (rev 1246)
@@ -362,8 +362,7 @@
         info(_("Name is empty"), widgets['window'])
         return False
 
-    session = gsql.Session(bind=gsql.session.bind)
-    #session.bind = gsql.session.bind
+    session = gsql.Session()
     filter_ = session.query(db.Filter).filter_by(name=name).first()
     if filter_:
         filter_.data = cond

Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-05 21:40:53 UTC (rev 1245)
+++ trunk/lib/db.py	2009-07-05 21:54:09 UTC (rev 1246)
@@ -28,8 +28,9 @@
 import re
 import string
 
-from sqlalchemy import *
+from sqlalchemy import MetaData, Table, Column, ForeignKey, func, select, and_
 from sqlalchemy.orm import mapper, relation, deferred, validates, column_property
+from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
 
 log = logging.getLogger("Griffith")
 



From piotrek at mail.berlios.de  Mon Jul  6 00:50:59 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 00:50:59 +0200
Subject: [Griffith-svn] r1247 - in trunk: . lib
Message-ID: <200907052250.n65MoxJQ008124@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 00:50:57 +0200 (Mon, 06 Jul 2009)
New Revision: 1247

Modified:
   trunk/ChangeLog
   trunk/lib/db.py
   trunk/lib/main_treeview.py
   trunk/lib/sql.py
Log:
Loan details and history added to the movie db model


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-05 21:54:09 UTC (rev 1246)
+++ trunk/ChangeLog	2009-07-05 22:50:57 UTC (rev 1247)
@@ -11,6 +11,7 @@
 	* Remove ilike from search criteria
 	* Update current value of sequence after restoring data from backup in
 	  PostgreSQL
+	* Loan details and history added to the movie db model
 
 2009-07-04  Piotr O?arowski
 	* Version changed to 0.10-beta3+svn

Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-05 21:54:09 UTC (rev 1246)
+++ trunk/lib/db.py	2009-07-05 22:50:57 UTC (rev 1247)
@@ -28,7 +28,7 @@
 import re
 import string
 
-from sqlalchemy import MetaData, Table, Column, ForeignKey, func, select, and_
+from sqlalchemy import MetaData, Table, Column, ForeignKey, func, select, and_, or_
 from sqlalchemy.orm import mapper, relation, deferred, validates, column_property
 from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
 
@@ -86,13 +86,15 @@
         return unicode(str(value).translate(allchars, delchars))
 
 class Poster(object):
+    @validates('md5sum')
+    def _check_md5sum_length(self, key, value):
+        if len(value) != 32:
+            raise ValueError('md5sum has wrong size')
+
     def __init__(self, md5sum=None, data=None):
         if md5sum and data:
-            if len(md5sum) == 32:
-                self.md5sum = md5sum
-                self.data = data
-            else:
-                log.error('md5sum has wrong size')
+            self.md5sum = md5sum
+            self.data = data
 
     def __repr__(self):
         return "<Poster:%s>" % self.md5sum
@@ -372,7 +374,15 @@
     'tags'      : relation(Tag, secondary=movie_tag_table,
                            primaryjoin=movies_table.c.movie_id==movie_tag_table.c.movie_id,
                            secondaryjoin=movie_tag_table.c.tag_id==tags_table.c.tag_id),
-    'languages' : relation(MovieLang, cascade='all, delete-orphan')})
+    'languages' : relation(MovieLang, cascade='all, delete-orphan'),
+    'loan_details' : relation(Loan, uselist=False, primaryjoin=and_(loans_table.c.return_date==None,
+                                                              or_(loans_table.c.collection_id==movies_table.c.collection_id,
+                                                                  loans_table.c.volume_id==movies_table.c.volume_id,
+                                                                  loans_table.c.movie_id==movies_table.c.movie_id))),
+    'loan_history' : relation(Loan, primaryjoin=or_(loans_table.c.collection_id==movies_table.c.collection_id,
+                                                    loans_table.c.volume_id==movies_table.c.volume_id,
+                                                    loans_table.c.movie_id==movies_table.c.movie_id))
+    })
 mapper(Poster, posters_table, properties={
     'movies': relation(Movie),
     'data'  : deferred(posters_table.c.data)

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2009-07-05 21:54:09 UTC (rev 1246)
+++ trunk/lib/main_treeview.py	2009-07-05 22:50:57 UTC (rev 1247)
@@ -261,15 +261,13 @@
         w['email_reminder_button'].set_sensitive(True)
         w['return_button'].set_sensitive(True)
         
-        data_loan = sql.get_loan_info(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
-        if data_loan is None:
+        if getattr(item, 'loan_details', None) is None:
             log.warning("movie has no loan data, changing 'loaned' flag to False (movie_id: %s)", item['movie_id'])
             item.loaned = False
         else:
-            data_person = self.db.session.query(db.Person.name, db.Person.email).filter_by(person_id=data_loan.person.person_id).first()
-            self.person_name = data_person.name
-            self.person_email = data_person.email
-            self.loan_date = str(data_loan.date)
+            self.person_name = item.loan_details.person.name
+            self.person_email = item.loan_details.person.email
+            self.loan_date = str(item.loan_details.date)
             w['loan_info'].set_use_markup(False)
             w['loan_info'].set_label(_("This movie has been loaned to %s on %s") % (self.person_name, self.loan_date[:10]))
     if 'loaned' in item and not item['loaned']: # "loaned" status can be changed above, so don't use "else:" in this line
@@ -286,9 +284,8 @@
 
     # loan history    
     self.loans_treemodel.clear()
-    if 'collection_id' in item or 'volume_id' in item or 'movie_id' in item:
-        loans = sql.get_loan_history(self.db, collection_id=item['collection_id'], volume_id=item['volume_id'], movie_id=item['movie_id'])
-        for loan in loans:
+    if getattr(item, 'loan_history', None) is not None:
+        for loan in item.loan_history:
             myiter = self.loans_treemodel.append(None)
             self.loans_treemodel.set_value(myiter, 0,'%s' % str(loan.date)[:10])
             if loan.return_date and  loan.return_date != '':

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-05 21:54:09 UTC (rev 1246)
+++ trunk/lib/sql.py	2009-07-05 22:50:57 UTC (rev 1247)
@@ -341,56 +341,4 @@
         return False
     return True
 
-def get_loan_info(gsql, movie_id, volume_id=None, collection_id=None):
-    """Returns current collection/volume/movie loan data"""
-
-    movie = gsql.session.query(db.Movie).filter_by(movie_id=movie_id).first()
-    if movie is None:
-        return False
-
-    # fix or add volume/collection data:
-    if movie.collection_id is not None:
-        collection_id = movie.collection_id
-    if movie.volume_id is not None:
-        volume_id = movie.volume_id
-
-    if collection_id > 0 and volume_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date==None,
-                                                              or_(db.Loan.collection_id==collection_id,
-                                                                  db.Loan.volume_id==volume_id,
-                                                                  db.Loan.movie_id==movie_id))).first()
-    elif collection_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date==None,
-                                                              or_(db.Loan.collection_id==collection_id,
-                                                                  db.Loan.movie_id==movie_id))
-                                                        ).first()
-    elif volume_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date==None,
-                                                              or_(db.Loan.volume_id==volume_id,
-                                                                  db.Loan.movie_id==movie_id),
-                                                        )).first()
-    else:
-        return gsql.session.query(db.Loan).filter(db.Loan.movie_id==movie_id).filter(db.Loan.return_date==None).first()
-
-def get_loan_history(gsql, movie_id, volume_id=None, collection_id=None):
-    """Returns collection/volume/movie loan history"""
-
-    if collection_id > 0 and volume_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date!=None,
-                                                          or_(db.Loan.collection_id==collection_id,
-                                                              db.Loan.volume_id==volume_id,
-                                                              db.Loan.movie_id==movie_id)
-                                                    )).all()
-    elif collection_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date!=None,
-                                                              or_(db.Loan.collection_id==collection_id,
-                                                                  db.Loan.movie_id==movie_id))
-                                                        ).all()
-    elif volume_id > 0:
-        return gsql.session.query(db.Loan).filter(and_(db.Loan.return_date!=None,
-                                                              or_(db.Loan.volume_id==volume_id,
-                                                                  db.Loan.movie_id==movie_id),
-                                                        )).all()
-    else:
-        return gsql.session.query(db.Loan).filter(db.Loan.movie_id==movie_id).filter(db.Loan.return_date!=None).all()
 #}}}



From piotrek at mail.berlios.de  Mon Jul  6 00:59:14 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 00:59:14 +0200
Subject: [Griffith-svn] r1248 - trunk/lib
Message-ID: <200907052259.n65MxEQH016372@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 00:59:02 +0200 (Mon, 06 Jul 2009)
New Revision: 1248

Modified:
   trunk/lib/db.py
Log:
don't show current loan data in loan history


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-05 22:50:57 UTC (rev 1247)
+++ trunk/lib/db.py	2009-07-05 22:59:02 UTC (rev 1248)
@@ -379,9 +379,10 @@
                                                               or_(loans_table.c.collection_id==movies_table.c.collection_id,
                                                                   loans_table.c.volume_id==movies_table.c.volume_id,
                                                                   loans_table.c.movie_id==movies_table.c.movie_id))),
-    'loan_history' : relation(Loan, primaryjoin=or_(loans_table.c.collection_id==movies_table.c.collection_id,
-                                                    loans_table.c.volume_id==movies_table.c.volume_id,
-                                                    loans_table.c.movie_id==movies_table.c.movie_id))
+    'loan_history' : relation(Loan, primaryjoin=and_(loans_table.c.return_date!=None,
+                                                    or_(loans_table.c.collection_id==movies_table.c.collection_id,
+                                                        loans_table.c.volume_id==movies_table.c.volume_id,
+                                                        loans_table.c.movie_id==movies_table.c.movie_id)))
     })
 mapper(Poster, posters_table, properties={
     'movies': relation(Movie),



From piotrek at mail.berlios.de  Mon Jul  6 19:19:53 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 19:19:53 +0200
Subject: [Griffith-svn] r1249 - trunk/lib
Message-ID: <200907061719.n66HJrjP032147@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 19:19:52 +0200 (Mon, 06 Jul 2009)
New Revision: 1249

Modified:
   trunk/lib/db.py
   trunk/lib/main_treeview.py
Log:
small fixes


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-05 22:59:02 UTC (rev 1248)
+++ trunk/lib/db.py	2009-07-06 17:19:52 UTC (rev 1249)
@@ -90,6 +90,7 @@
     def _check_md5sum_length(self, key, value):
         if len(value) != 32:
             raise ValueError('md5sum has wrong size')
+        return value
 
     def __init__(self, md5sum=None, data=None):
         if md5sum and data:

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2009-07-05 22:59:02 UTC (rev 1248)
+++ trunk/lib/main_treeview.py	2009-07-06 17:19:52 UTC (rev 1249)
@@ -371,9 +371,11 @@
             # saved in advfilter
             name = self.widgets['filter']['advfilter'].get_active_text()[:-3].decode('utf-8') # :-3 due to additional '   ' in the name
             if name:
-                cond = self.db.session.query(db.Filter).filter_by(name=name).first().data
+                cond = self.db.session.query(db.Filter).filter_by(name=name).first()
                 if not cond:
                     cond = advfilter.get_def_conditions()
+                else:
+                    cond = cond.data
             else:
                 cond = advfilter.get_def_conditions()
             # add sorting from config



From piotrek at mail.berlios.de  Mon Jul  6 19:56:55 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 19:56:55 +0200
Subject: [Griffith-svn] r1250 - trunk/lib
Message-ID: <200907061756.n66HutPt004303@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 19:56:52 +0200 (Mon, 06 Jul 2009)
New Revision: 1250

Modified:
   trunk/lib/db.py
Log:
fix WHERE clause


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-06 17:19:52 UTC (rev 1249)
+++ trunk/lib/db.py	2009-07-06 17:56:52 UTC (rev 1250)
@@ -379,11 +379,13 @@
     'loan_details' : relation(Loan, uselist=False, primaryjoin=and_(loans_table.c.return_date==None,
                                                               or_(loans_table.c.collection_id==movies_table.c.collection_id,
                                                                   loans_table.c.volume_id==movies_table.c.volume_id,
-                                                                  loans_table.c.movie_id==movies_table.c.movie_id))),
-    'loan_history' : relation(Loan, primaryjoin=and_(loans_table.c.return_date!=None,
+                                                                  loans_table.c.movie_id==movies_table.c.movie_id)),
+                              foreign_keys=[movies_table.c.movie_id, movies_table.c.collection_id, movies_table.c.volume_id]),
+    'loan_history' : relation(Loan, uselist=True, primaryjoin=and_(loans_table.c.return_date!=None,
                                                     or_(loans_table.c.collection_id==movies_table.c.collection_id,
                                                         loans_table.c.volume_id==movies_table.c.volume_id,
-                                                        loans_table.c.movie_id==movies_table.c.movie_id)))
+                                                        loans_table.c.movie_id==movies_table.c.movie_id)),
+                              foreign_keys=[movies_table.c.movie_id, movies_table.c.collection_id, movies_table.c.volume_id])
     })
 mapper(Poster, posters_table, properties={
     'movies': relation(Movie),



From piotrek at mail.berlios.de  Mon Jul  6 20:29:12 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 20:29:12 +0200
Subject: [Griffith-svn] r1251 - trunk/lib
Message-ID: <200907061829.n66ITCuH008616@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 20:29:12 +0200 (Mon, 06 Jul 2009)
New Revision: 1251

Modified:
   trunk/lib/db.py
Log:
move {loan_details,loan_history} from mapper to class


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-06 17:56:52 UTC (rev 1250)
+++ trunk/lib/db.py	2009-07-06 18:29:12 UTC (rev 1251)
@@ -29,7 +29,7 @@
 import string
 
 from sqlalchemy import MetaData, Table, Column, ForeignKey, func, select, and_, or_
-from sqlalchemy.orm import mapper, relation, deferred, validates, column_property
+from sqlalchemy.orm import mapper, relation, deferred, validates, column_property, object_session
 from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
 
 log = logging.getLogger("Griffith")
@@ -106,7 +106,8 @@
 
 class Loan(object):
     def __repr__(self):
-        return "<Loan:%s (movie:%s person:%s)>" % (self.loan_id, self.movie_id, self.person_id)
+        return "<Loan:%s (person:%s, movie_id:%s, volume_id:%s, collection_id:%s )>" % \
+                (self.loan_id, self.person_id, self.movie_id, self.volume_id, self.collection_id)
 
 class Movie(object):
     _res_aliases = {(2560, 1600): ('QSXGA',),
@@ -181,6 +182,24 @@
         else:
             raise AttributeError, name
 
+    def _get_loan_history(self):
+        where = [loans_table.c.movie_id==self.movie_id]
+        if self.collection_id is not None:
+            where.append(loans_table.c.collection_id==self.collection_id)
+        if self.volume_id is not None:
+            where.append(loans_table.c.volume_id==self.volume_id)
+        return object_session(self).query(Loan).filter(and_(loans_table.c.return_date!=None, or_(*where))).all()
+    loan_history = property(_get_loan_history)
+
+    def _get_loan_details(self):
+        where = [loans_table.c.movie_id==self.movie_id]
+        if self.collection_id is not None:
+            where.append(loans_table.c.collection_id==self.collection_id)
+        if self.volume_id is not None:
+            where.append(loans_table.c.volume_id==self.volume_id)
+        return object_session(self).query(Loan).filter(and_(loans_table.c.return_date==None, or_(*where))).first()
+    loan_details = property(_get_loan_details)
+
 class MovieLang(object):
     def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
         self.lang_id = lang_id
@@ -375,18 +394,7 @@
     'tags'      : relation(Tag, secondary=movie_tag_table,
                            primaryjoin=movies_table.c.movie_id==movie_tag_table.c.movie_id,
                            secondaryjoin=movie_tag_table.c.tag_id==tags_table.c.tag_id),
-    'languages' : relation(MovieLang, cascade='all, delete-orphan'),
-    'loan_details' : relation(Loan, uselist=False, primaryjoin=and_(loans_table.c.return_date==None,
-                                                              or_(loans_table.c.collection_id==movies_table.c.collection_id,
-                                                                  loans_table.c.volume_id==movies_table.c.volume_id,
-                                                                  loans_table.c.movie_id==movies_table.c.movie_id)),
-                              foreign_keys=[movies_table.c.movie_id, movies_table.c.collection_id, movies_table.c.volume_id]),
-    'loan_history' : relation(Loan, uselist=True, primaryjoin=and_(loans_table.c.return_date!=None,
-                                                    or_(loans_table.c.collection_id==movies_table.c.collection_id,
-                                                        loans_table.c.volume_id==movies_table.c.volume_id,
-                                                        loans_table.c.movie_id==movies_table.c.movie_id)),
-                              foreign_keys=[movies_table.c.movie_id, movies_table.c.collection_id, movies_table.c.volume_id])
-    })
+    'languages' : relation(MovieLang, cascade='all, delete-orphan')})
 mapper(Poster, posters_table, properties={
     'movies': relation(Movie),
     'data'  : deferred(posters_table.c.data)



From piotrek at mail.berlios.de  Mon Jul  6 22:17:06 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 22:17:06 +0200
Subject: [Griffith-svn] r1252 - in trunk: . lib lib/db lib/plugins/imp
Message-ID: <200907062017.n66KH6pg023993@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 22:17:05 +0200 (Mon, 06 Jul 2009)
New Revision: 1252

Added:
   trunk/lib/db/
   trunk/lib/db/__init__.py
   trunk/lib/db/_movie.py
   trunk/lib/db/_objects.py
   trunk/lib/db/tables.py
Removed:
   trunk/lib/db.py
Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/dbupgrade.py
   trunk/lib/plugins/imp/__init__.py
   trunk/lib/quick_filter.py
   trunk/lib/sql.py
Log:
Reorganize ORM stuff file structure (db module moved to db package)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/ChangeLog	2009-07-06 20:17:05 UTC (rev 1252)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-06  Piotr O?arowski
+	* Reorganize ORM stuff file structure (db module moved to db package)
+
 2009-07-05  Piotr O?arowski
 	* Use SQLAlchemy's PickleType to store search conditions
 	  (old rules are removed without warning - beta version privilege ;)

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/add.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -828,7 +828,7 @@
             t_tags = details.pop('tags')
         if 'languages' in details:
             t_languages = details.pop('languages')
-        #for i in db.movies_table.columns.keys():
+        #for i in db.tables.movies.columns.keys():
         for i in details:
             if hasattr(movie, i):
                 setattr(movie, i, details[i])

Added: trunk/lib/db/__init__.py
===================================================================
--- trunk/lib/db/__init__.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/db/__init__.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -0,0 +1,102 @@
+# -*- coding: UTF-8 -*-
+# vim: fdm=marker
+__revision__ = '$Id: __init__.py 1251 2009-07-06 18:29:12Z piotrek $'
+
+# Copyright ? 2009 Piotr O?arowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+
+# XXX: keep stdlib and SQLAlchemy imports only in this module
+
+import logging
+import re
+
+from sqlalchemy import MetaData, func, select, and_
+from sqlalchemy.orm import mapper, relation, deferred, column_property
+
+metadata = MetaData()
+import tables # *after* metadata initialization
+from _objects import *
+
+log = logging.getLogger("Griffith")
+
+EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
+
+### clases #################################################### {{{
+
+#}}}
+
+### mappers ################################################### {{{
+mapper(Configuration, tables.configuration)
+mapper(Volume, tables.volumes, order_by=tables.volumes.c.name, properties={
+    'movies': relation(Movie, backref='volume')})
+mapper(Collection, tables.collections, order_by=tables.collections.c.name, properties={
+    'movies': relation(Movie, backref='collection')})
+mapper(Medium, tables.media, properties={
+    'movies': relation(Movie, backref='medium')})
+mapper(Ratio, tables.ratios, properties={
+    'movies': relation(Movie, backref='ratio')})
+mapper(VCodec, tables.vcodecs, properties={
+    'movies': relation(Movie, backref='vcodec')})
+mapper(Person, tables.people, properties = {
+    'loans': relation(Loan, backref='person', cascade='all, delete-orphan'),
+    'loaned_movies_count': column_property(select(
+        [func.count(tables.loans.c.loan_id)],
+        and_(tables.people.c.person_id == tables.loans.c.person_id,
+             tables.loans.c.return_date == None
+        )).label('loaned_movies_count'), deferred=True),
+    'returned_movies_count': column_property(select( # AKA loan history
+        [func.count(tables.loans.c.loan_id)],
+        and_(tables.people.c.person_id == tables.loans.c.person_id,
+             tables.loans.c.return_date != None
+        )).label('returned_movies_count'), deferred=True)
+    })
+mapper(MovieLang, tables.movie_lang, primary_key=[tables.movie_lang.c.ml_id], properties = {
+    'movie'    : relation(Movie),
+    'language' : relation(Lang),
+    'achannel' : relation(AChannel),
+    'acodec'   : relation(ACodec),
+    'subformat': relation(SubFormat)})
+mapper(ACodec, tables.acodecs, properties={
+    'movielangs': relation(MovieLang)})
+mapper(AChannel, tables.achannels, properties={
+    'movielangs': relation(MovieLang)})
+mapper(SubFormat, tables.subformats, properties={
+    'movielangs': relation(MovieLang)})
+mapper(Lang, tables.languages, properties={
+    'movielangs': relation(MovieLang)})
+mapper(MovieTag, tables.movie_tag)
+mapper(Tag, tables.tags, properties={'movietags': relation(MovieTag, backref='tag')})
+mapper(Loan, tables.loans, properties = {
+    'volume'    : relation(Volume),
+    'collection': relation(Collection)})
+mapper(Movie, tables.movies, order_by=tables.movies.c.number , properties = {
+    'loans'     : relation(Loan, backref='movie', cascade='all, delete-orphan'),
+    #'tags'       : relation(Tag, cascade='all, delete-orphan', secondary=movie_tag,
+    'tags'      : relation(Tag, secondary=tables.movie_tag,
+                           primaryjoin=tables.movies.c.movie_id==tables.movie_tag.c.movie_id,
+                           secondaryjoin=tables.movie_tag.c.tag_id==tables.tags.c.tag_id),
+    'languages' : relation(MovieLang, cascade='all, delete-orphan')})
+mapper(Poster, tables.posters, properties={
+    'movies': relation(Movie),
+    'data'  : deferred(tables.posters.c.data)
+    })
+mapper(Filter, tables.filters)
+#}}}
+

Added: trunk/lib/db/_movie.py
===================================================================
--- trunk/lib/db/_movie.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/db/_movie.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -0,0 +1,120 @@
+# -*- coding: UTF-8 -*-
+__revision__ = '$Id: _movie.py 1251 2009-07-06 18:29:12Z piotrek $'
+
+# Copyright ? 2009 Piotr O?arowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+from sqlalchemy import and_, or_
+from sqlalchemy.orm import object_session
+
+import tables
+from _objects import Loan
+
+res_aliases = {(2560, 1600): ('QSXGA',),
+                (2048, 1536): ('QXGA',),
+                (1920, 1200): ('WUXGA',),
+                (1920, 1080): ('HD 1080', '1080p', '1080'),
+                (1920, 540): ('1080i',),
+                (1680, 1050): ('WSXGA+',),
+                (1600, 1200): ('UXGA',),
+                (1400, 1050): ('SXGA+',),
+                #(1440, 960): ('',),
+                #(1280, 960): ('',),
+                #(1280, 854): ('',),
+                (1280, 720): ('HD 720', '720p', '720'),
+                (1280, 360): ('720i',),
+                (1280, 1024): ('SXGA',),
+                #(1152, 768): ('',),
+                (1024, 768): ('XGA',),
+                (854, 480): ('WVGA',),
+                (800, 600): ('SVGA',),
+                (768, 576): ('PAL',),
+                (720, 480): ('NTSC',),
+                (640, 480): ('VGA',),
+                (320, 240): ('QVGA',),
+                (320, 200): ('CGA',)}
+res_alias_res = {}
+for res, aliases in res_aliases.iteritems():
+    for alias in aliases:
+        res_alias_res[alias.upper()] = res
+del aliases, alias, res
+
+class Movie(object):
+
+    def _set_resolution(self, res_string):
+        if not res_string: # clear resulution field
+            self.width = None
+            self.height = None
+        elif res_string.upper() in res_alias_res:
+            self.width, self.height = res_alias_res[res_string.upper()]
+        else:
+            try:
+                if 'x' in res_string:
+                    self.width, self.height = map(int, res_string.lower().split('x'))
+                else:
+                    self.width, self.height = map(int, res_string.lower().split())
+            except Exception, e:
+                log.warning('wrong resolution name: %s', e)
+                raise ValueError('Use standard resolution name or \d+x\d+')
+
+    def _get_resolution(self):
+        if not self.width or not self.height:
+            return None
+        resolution = (self.width, self.height)
+        if resolution in res_aliases:
+            return res_aliases[resolution][0]
+        else:
+            res_string = "%dx%d" % resolution
+            return res_string
+    resolution = property(_get_resolution, _set_resolution)
+
+    def __repr__(self):
+        return "<Movie:%s (number=%s)>" % (self.movie_id, self.number)
+
+    def __contains__(self, name):
+        if name in ('volume','collection','medium','vcodec','loans','tags',\
+                    'languages','lectors','dubbings','subtitles','resolution'):
+            return True
+        else:
+            return name in tables.movies.columns
+
+    def __getitem__(self, name):
+        if hasattr(self, name):
+            return getattr(self, name)
+        else:
+            raise AttributeError, name
+
+    def _get_loan_history(self):
+        where = [tables.loans.c.movie_id==self.movie_id]
+        if self.collection_id is not None:
+            where.append(tables.loans.c.collection_id==self.collection_id)
+        if self.volume_id is not None:
+            where.append(tables.loans.c.volume_id==self.volume_id)
+        return object_session(self).query(Loan).filter(and_(tables.loans.c.return_date!=None, or_(*where))).all()
+    loan_history = property(_get_loan_history)
+
+    def _get_loan_details(self):
+        where = [tables.loans.c.movie_id==self.movie_id]
+        if self.collection_id is not None:
+            where.append(tables.loans.c.collection_id==self.collection_id)
+        if self.volume_id is not None:
+            where.append(tables.loans.c.volume_id==self.volume_id)
+        return object_session(self).query(Loan).filter(and_(tables.loans.c.return_date==None, or_(*where))).first()
+    loan_details = property(_get_loan_details)
+

Added: trunk/lib/db/_objects.py
===================================================================
--- trunk/lib/db/_objects.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/db/_objects.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -0,0 +1,121 @@
+# -*- coding: UTF-8 -*-
+# vim: fdm=marker
+__revision__ = '$Id: _objects.py 1251 2009-07-06 18:29:12Z piotrek $'
+
+# Copyright ? 2009 Piotr O?arowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import logging
+import string
+
+from sqlalchemy.orm import validates
+
+log = logging.getLogger("Griffith")
+
+class DBTable(object):
+    def __init__(self, **kwargs):
+        for i in kwargs:
+            if hasattr(self, i):
+                setattr(self, i, kwargs[i])
+            else:
+                log.warn("%s.%s not set", self.__class__.__name__, i)
+    def __repr__(self):
+        return "<%s:%s>" % (self.__class__.__name__, self.name.encode('utf-8'))
+
+    @validates('name')
+    def _validate_name(self, key, name):
+        if not name or not name.strip():
+            log.warning("%s: empty name (%s)", self.__class__.__name__, name)
+            raise ValueError(_("Name cannot be empty"))
+        return name.strip()
+
+class AChannel(DBTable): pass
+class ACodec(DBTable): pass
+class Collection(DBTable): pass
+class Lang(DBTable): pass
+class Medium(DBTable): pass
+class Ratio(DBTable): pass
+class SubFormat(DBTable): pass
+class Tag(DBTable): pass
+class VCodec(DBTable): pass
+class Volume(DBTable): pass
+class Filter(DBTable): pass
+
+class Person(DBTable):
+    @validates('email')
+    def _validate_email(self, key, address):
+        address = address.strip()
+        if not EMAIL_PATTERN.match(address):
+            log.warning("%s: email address is not valid (%s)", self.__class__.__name__, address)
+            raise ValueError(_("E-mail address is not valid"))
+        return address
+
+    @validates('phone')
+    def _digits_only(self, key, value):
+        """removes non-digits"""
+        allchars = string.maketrans('', '')
+        delchars = allchars.translate(allchars, string.digits)
+        return unicode(str(value).translate(allchars, delchars))
+
+class Poster(object):
+    @validates('md5sum')
+    def _check_md5sum_length(self, key, value):
+        if len(value) != 32:
+            raise ValueError('md5sum has wrong size')
+        return value
+
+    def __init__(self, md5sum=None, data=None):
+        if md5sum and data:
+            self.md5sum = md5sum
+            self.data = data
+
+    def __repr__(self):
+        return "<Poster:%s>" % self.md5sum
+
+class Configuration(object):
+    def __repr__(self):
+        return "<Config:%s=%s>" % (self.param, self.value)
+
+class Loan(object):
+    def __repr__(self):
+        return "<Loan:%s (person:%s, movie_id:%s, volume_id:%s, collection_id:%s )>" % \
+                (self.loan_id, self.person_id, self.movie_id, self.volume_id, self.collection_id)
+
+class MovieLang(object):
+    def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
+        self.lang_id = lang_id
+        self.type = type
+        self.acodec_id = acodec_id
+        self.achannel_id = achannel_id
+        self.subformat_id = subformat_id
+
+    def __repr__(self):
+        return "<MovieLang:%s-%s (Type:%s ACodec:%s AChannel:%s SubFormat:%s)>" % \
+            (self.movie_id, self.lang_id, self.type, self.acodec_id, self.achannel_id, self.subformat_id)
+
+class MovieTag(object):
+    def __init__(self, tag_id=None):
+        self.tag_id = tag_id
+
+    def __repr__(self):
+        return "<MovieTag:%s-%s>" % (self.movie_id, self.tag_id)
+
+
+# has to be at the end of file (objects from this module are imported there)
+from _movie import Movie # from _objects import * should import Movie as well

Added: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/db/tables.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -0,0 +1,153 @@
+# -*- coding: UTF-8 -*-
+# vim: fdm=marker
+__revision__ = '$Id: tables.py 1251 2009-07-06 18:29:12Z piotrek $'
+
+# Copyright ? 2009 Piotr O?arowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import logging
+
+from sqlalchemy import Table, Column, ForeignKey, func
+from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
+
+from db import metadata
+
+log = logging.getLogger("Griffith")
+
+movies = Table('movies', metadata,
+    Column('movie_id', Integer, primary_key=True),
+    Column('number', Integer, nullable=False, unique=True, index=True),
+    Column('collection_id', ForeignKey('collections.collection_id')),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('medium_id', ForeignKey('media.medium_id')),
+    Column('ratio_id', ForeignKey('ratios.ratio_id')),
+    Column('vcodec_id', ForeignKey('vcodecs.vcodec_id')),
+    Column('loaned', Boolean, nullable=False, default=False),
+    Column('seen', Boolean, nullable=False, default=False),
+    Column('rating', SmallInteger(2)),
+    Column('color', SmallInteger),
+    Column('cond', SmallInteger), # MySQL will not accept name "condition"
+    Column('layers', SmallInteger),
+    Column('region', SmallInteger),
+    Column('media_num', SmallInteger),
+    Column('runtime', SmallInteger),
+    Column('year', SmallInteger),
+    Column('width', SmallInteger),
+    Column('height', SmallInteger),
+    Column('barcode', Unicode(32)),
+    Column('o_title', Unicode(256), index=True),
+    Column('title', Unicode(256), index=True),
+    Column('director', Unicode(256)),
+    Column('screenplay', Unicode(256)),
+    Column('cameraman', Unicode(256)),
+    Column('o_site', Unicode(256)),
+    Column('site', Unicode(256)),
+    Column('trailer', Unicode(256)),
+    Column('country', Unicode(128)),
+    Column('genre', Unicode(128)),
+    Column('image', Unicode(128)), # XXX: deprecated
+    Column('poster_md5', ForeignKey('posters.md5sum')),
+    Column('studio', Unicode(128)),
+    Column('classification', Unicode(128)),
+    Column('cast', Text),
+    Column('plot', Text),
+    Column('notes', Text))
+
+people = Table('people', metadata,
+    Column('person_id', Integer, primary_key=True),
+    Column('name', Unicode(256), nullable=False, unique=True),
+    Column('email', Unicode(128)),
+    Column('phone', Unicode(64)))
+
+loans = Table('loans', metadata,
+    Column('loan_id', Integer, primary_key=True),
+    Column('person_id',  ForeignKey(people.c.person_id), nullable=False),
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('collection_id', ForeignKey('collections.collection_id')),
+    Column('date', Date, nullable=False, default=func.current_date()),
+    Column('return_date', Date, nullable=True))
+
+volumes = Table('volumes', metadata,
+    Column('volume_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True),
+    Column('loaned', Boolean, nullable=False, default=False))
+
+collections = Table('collections', metadata,
+    Column('collection_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True),
+    Column('loaned', Boolean, nullable=False, default=False))
+
+media = Table('media', metadata,
+    Column('medium_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+ratios = Table('ratios', metadata,
+    Column('ratio_id', Integer, primary_key=True),
+    Column('name', Unicode(5), nullable=False, unique=True))
+
+languages = Table('languages', metadata,
+    Column('lang_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+vcodecs = Table('vcodecs', metadata,
+    Column('vcodec_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+acodecs = Table('acodecs', metadata,
+    Column('acodec_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+achannels = Table('achannels', metadata,
+    Column('achannel_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+subformats = Table('subformats', metadata,
+    Column('subformat_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+tags = Table('tags', metadata,
+    Column('tag_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+movie_lang = Table('movie_lang', metadata,
+    Column('ml_id', Integer, primary_key=True),
+    Column('type', SmallInteger), # 0: Original, 1:lector, 2:dubbing, 3:subtitle
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('lang_id', ForeignKey('languages.lang_id'), nullable=False),
+    Column('acodec_id', ForeignKey('acodecs.acodec_id')),
+    Column('achannel_id', ForeignKey('achannels.achannel_id')),
+    Column('subformat_id', ForeignKey('subformats.subformat_id')))
+
+movie_tag = Table('movie_tag', metadata,
+    Column('mt_id', Integer, primary_key=True),
+    Column('movie_id', ForeignKey('movies.movie_id')),
+    Column('tag_id', ForeignKey('tags.tag_id')))
+
+configuration = Table('configuration', metadata,
+    Column('param', Unicode(16), primary_key=True),
+    Column('value', Unicode(128), nullable=False))
+
+posters = Table('posters', metadata,
+    Column('md5sum', Unicode(32), primary_key=True),
+    Column('data', Binary(1048576), nullable=False))
+
+filters = Table('filters', metadata,
+    Column('name', Unicode(64), primary_key=True),
+    Column('data', PickleType, nullable=False))

Deleted: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/db.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -1,404 +0,0 @@
-# -*- coding: UTF-8 -*-
-# vim: fdm=marker
-__revision__ = '$Id$'
-
-# Copyright (c) 2008 Vasco Nunes, Piotr O?arowski
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Library General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
-
-# You may use and distribute this software under the terms of the
-# GNU General Public License, version 2 or later
-
-
-# XXX: keep stdlib and SQLAlchemy imports only in this file
-
-import logging
-import re
-import string
-
-from sqlalchemy import MetaData, Table, Column, ForeignKey, func, select, and_, or_
-from sqlalchemy.orm import mapper, relation, deferred, validates, column_property, object_session
-from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
-
-log = logging.getLogger("Griffith")
-
-EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
-metadata = MetaData()
-
-class DBTable(object):#{{{
-    def __init__(self, **kwargs):
-        for i in kwargs:
-            if hasattr(self, i):
-                setattr(self, i, kwargs[i])
-            else:
-                log.warn("%s.%s not set", self.__class__.__name__, i)
-    def __repr__(self):
-        return "<%s:%s>" % (self.__class__.__name__, self.name.encode('utf-8'))
-
-    @validates('name')
-    def _validate_name(self, key, name):
-        if not name or not name.strip():
-            log.warning("%s: empty name (%s)", self.__class__.__name__, name)
-            raise ValueError(_("Name cannot be empty"))
-        return name.strip()
-     #}}}
-
-### clases #################################################### {{{
-
-class AChannel(DBTable): pass
-class ACodec(DBTable): pass
-class Collection(DBTable): pass
-class Lang(DBTable): pass
-class Medium(DBTable): pass
-class Ratio(DBTable): pass
-class SubFormat(DBTable): pass
-class Tag(DBTable): pass
-class VCodec(DBTable): pass
-class Volume(DBTable): pass
-class Filter(DBTable): pass
-
-class Person(DBTable):
-    @validates('email')
-    def _validate_email(self, key, address):
-        address = address.strip()
-        if not EMAIL_PATTERN.match(address):
-            log.warning("%s: email address is not valid (%s)", self.__class__.__name__, address)
-            raise ValueError(_("E-mail address is not valid"))
-        return address
-
-    @validates('phone')
-    def _digits_only(self, key, value):
-        """removes non-digits"""
-        allchars = string.maketrans('', '')
-        delchars = allchars.translate(allchars, string.digits)
-        return unicode(str(value).translate(allchars, delchars))
-
-class Poster(object):
-    @validates('md5sum')
-    def _check_md5sum_length(self, key, value):
-        if len(value) != 32:
-            raise ValueError('md5sum has wrong size')
-        return value
-
-    def __init__(self, md5sum=None, data=None):
-        if md5sum and data:
-            self.md5sum = md5sum
-            self.data = data
-
-    def __repr__(self):
-        return "<Poster:%s>" % self.md5sum
-
-class Configuration(object):
-    def __repr__(self):
-        return "<Config:%s=%s>" % (self.param, self.value)
-
-class Loan(object):
-    def __repr__(self):
-        return "<Loan:%s (person:%s, movie_id:%s, volume_id:%s, collection_id:%s )>" % \
-                (self.loan_id, self.person_id, self.movie_id, self.volume_id, self.collection_id)
-
-class Movie(object):
-    _res_aliases = {(2560, 1600): ('QSXGA',),
-                    (2048, 1536): ('QXGA',),
-                    (1920, 1200): ('WUXGA',),
-                    (1920, 1080): ('HD 1080', '1080p', '1080'),
-                    (1920, 540): ('1080i',),
-                    (1680, 1050): ('WSXGA+',),
-                    (1600, 1200): ('UXGA',),
-                    (1400, 1050): ('SXGA+',),
-                    #(1440, 960): ('',),
-                    #(1280, 960): ('',),
-                    #(1280, 854): ('',),
-                    (1280, 720): ('HD 720', '720p', '720'),
-                    (1280, 360): ('720i',),
-                    (1280, 1024): ('SXGA',),
-                    #(1152, 768): ('',),
-                    (1024, 768): ('XGA',),
-                    (854, 480): ('WVGA',),
-                    (800, 600): ('SVGA',),
-                    (768, 576): ('PAL',),
-                    (720, 480): ('NTSC',),
-                    (640, 480): ('VGA',),
-                    (320, 240): ('QVGA',),
-                    (320, 200): ('CGA',)}
-    _res_alias_res = {}
-    for res, aliases in _res_aliases.iteritems():
-        for alias in aliases:
-            _res_alias_res[alias.upper()] = res
-    del aliases, alias, res
-
-    def _set_resolution(self, res_string):
-        if not res_string: # clear resulution field
-            self.width = None
-            self.height = None
-        elif res_string.upper() in Movie._res_alias_res:
-            self.width, self.height = Movie._res_alias_res[res_string.upper()]
-        else:
-            try:
-                if 'x' in res_string:
-                    self.width, self.height = map(int, res_string.lower().split('x'))
-                else:
-                    self.width, self.height = map(int, res_string.lower().split())
-            except Exception, e:
-                log.warning('wrong resolution name: %s', e)
-                raise ValueError('Use standard resolution name or \d+x\d+')
-
-    def _get_resolution(self):
-        if not self.width or not self.height:
-            return None
-        resolution = (self.width, self.height)
-        if resolution in Movie._res_aliases:
-            return Movie._res_aliases[resolution][0]
-        else:
-            res_string = "%dx%d" % resolution
-            return res_string
-
-    resolution = property(_get_resolution, _set_resolution)
-
-    def __repr__(self):
-        return "<Movie:%s (number=%s)>" % (self.movie_id, self.number)
-
-    def __contains__(self, name):
-        if name in ('volume','collection','medium','vcodec','loans','tags',\
-                    'languages','lectors','dubbings','subtitles','resolution'):
-            return True
-        else: return name in movies_table.columns
-
-    def __getitem__(self, name):
-        if hasattr(self, name):
-            return getattr(self, name)
-        else:
-            raise AttributeError, name
-
-    def _get_loan_history(self):
-        where = [loans_table.c.movie_id==self.movie_id]
-        if self.collection_id is not None:
-            where.append(loans_table.c.collection_id==self.collection_id)
-        if self.volume_id is not None:
-            where.append(loans_table.c.volume_id==self.volume_id)
-        return object_session(self).query(Loan).filter(and_(loans_table.c.return_date!=None, or_(*where))).all()
-    loan_history = property(_get_loan_history)
-
-    def _get_loan_details(self):
-        where = [loans_table.c.movie_id==self.movie_id]
-        if self.collection_id is not None:
-            where.append(loans_table.c.collection_id==self.collection_id)
-        if self.volume_id is not None:
-            where.append(loans_table.c.volume_id==self.volume_id)
-        return object_session(self).query(Loan).filter(and_(loans_table.c.return_date==None, or_(*where))).first()
-    loan_details = property(_get_loan_details)
-
-class MovieLang(object):
-    def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
-        self.lang_id = lang_id
-        self.type = type
-        self.acodec_id = acodec_id
-        self.achannel_id = achannel_id
-        self.subformat_id = subformat_id
-
-    def __repr__(self):
-        return "<MovieLang:%s-%s (Type:%s ACodec:%s AChannel:%s SubFormat:%s)>" % \
-            (self.movie_id, self.lang_id, self.type, self.acodec_id, self.achannel_id, self.subformat_id)
-
-class MovieTag(object):
-    def __init__(self, tag_id=None):
-        self.tag_id = tag_id
-
-    def __repr__(self):
-        return "<MovieTag:%s-%s>" % (self.movie_id, self.tag_id)
-#}}}
-
-### table definitions ######################################### {{{
-movies_table = Table('movies', metadata,
-    Column('movie_id', Integer, primary_key=True),
-    Column('number', Integer, nullable=False, unique=True, index=True),
-    Column('collection_id', ForeignKey('collections.collection_id')),
-    Column('volume_id', ForeignKey('volumes.volume_id')),
-    Column('medium_id', ForeignKey('media.medium_id')),
-    Column('ratio_id', ForeignKey('ratios.ratio_id')),
-    Column('vcodec_id', ForeignKey('vcodecs.vcodec_id')),
-    Column('loaned', Boolean, nullable=False, default=False),
-    Column('seen', Boolean, nullable=False, default=False),
-    Column('rating', SmallInteger(2)),
-    Column('color', SmallInteger),
-    Column('cond', SmallInteger), # MySQL will not accept name "condition"
-    Column('layers', SmallInteger),
-    Column('region', SmallInteger),
-    Column('media_num', SmallInteger),
-    Column('runtime', SmallInteger),
-    Column('year', SmallInteger),
-    Column('width', SmallInteger),
-    Column('height', SmallInteger),
-    Column('barcode', Unicode(32)),
-    Column('o_title', Unicode(256), index=True),
-    Column('title', Unicode(256), index=True),
-    Column('director', Unicode(256)),
-    Column('screenplay', Unicode(256)),
-    Column('cameraman', Unicode(256)),
-    Column('o_site', Unicode(256)),
-    Column('site', Unicode(256)),
-    Column('trailer', Unicode(256)),
-    Column('country', Unicode(128)),
-    Column('genre', Unicode(128)),
-    Column('image', Unicode(128)), # XXX: deprecated
-    Column('poster_md5', ForeignKey('posters.md5sum')),
-    Column('studio', Unicode(128)),
-    Column('classification', Unicode(128)),
-    Column('cast', Text),
-    Column('plot', Text),
-    Column('notes', Text))
-
-loans_table = Table('loans', metadata,
-    Column('loan_id', Integer, primary_key=True),
-    Column('person_id',  ForeignKey('people.person_id'), nullable=False),
-    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
-    Column('volume_id', ForeignKey('volumes.volume_id')),
-    Column('collection_id', ForeignKey('collections.collection_id')),
-    Column('date', Date, nullable=False, default=func.current_date()),
-    Column('return_date', Date, nullable=True))
-
-people_table = Table('people', metadata,
-    Column('person_id', Integer, primary_key=True),
-    Column('name', Unicode(256), nullable=False, unique=True),
-    Column('email', Unicode(128)),
-    Column('phone', Unicode(64)))
-
-volumes_table = Table('volumes', metadata,
-    Column('volume_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
-
-collections_table = Table('collections', metadata,
-    Column('collection_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
-
-media_table = Table('media', metadata,
-    Column('medium_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-ratios_table = Table('ratios', metadata,
-    Column('ratio_id', Integer, primary_key=True),
-    Column('name', Unicode(5), nullable=False, unique=True))
-
-languages_table = Table('languages', metadata,
-    Column('lang_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-vcodecs_table = Table('vcodecs', metadata,
-    Column('vcodec_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-acodecs_table = Table('acodecs', metadata,
-    Column('acodec_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-achannels_table = Table('achannels', metadata,
-    Column('achannel_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-subformats_table = Table('subformats', metadata,
-    Column('subformat_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-tags_table = Table('tags', metadata,
-    Column('tag_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-movie_lang_table = Table('movie_lang', metadata,
-    Column('ml_id', Integer, primary_key=True),
-    Column('type', SmallInteger), # 0: Original, 1:lector, 2:dubbing, 3:subtitle
-    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
-    Column('lang_id', ForeignKey('languages.lang_id'), nullable=False),
-    Column('acodec_id', ForeignKey('acodecs.acodec_id')),
-    Column('achannel_id', ForeignKey('achannels.achannel_id')),
-    Column('subformat_id', ForeignKey('subformats.subformat_id')))
-
-movie_tag_table = Table('movie_tag', metadata,
-    Column('mt_id', Integer, primary_key=True),
-    Column('movie_id', ForeignKey('movies.movie_id')),
-    Column('tag_id', ForeignKey('tags.tag_id')))
-
-configuration_table = Table('configuration', metadata,
-    Column('param', Unicode(16), primary_key=True),
-    Column('value', Unicode(128), nullable=False))
-
-posters_table = Table('posters', metadata,
-    Column('md5sum', Unicode(32), primary_key=True),
-    Column('data', Binary(1048576), nullable=False))
-
-filters_table = Table('filters', metadata,
-    Column('name', Unicode(64), primary_key=True),
-    Column('data', PickleType, nullable=False))
-#}}}
-
-### mappers ################################################### {{{
-mapper(Configuration, configuration_table)
-mapper(Volume, volumes_table, order_by=volumes_table.c.name, properties={
-    'movies': relation(Movie, backref='volume')})
-mapper(Collection, collections_table, order_by=collections_table.c.name, properties={
-    'movies': relation(Movie, backref='collection')})
-mapper(Medium, media_table, properties={
-    'movies': relation(Movie, backref='medium')})
-mapper(Ratio, ratios_table, properties={
-    'movies': relation(Movie, backref='ratio')})
-mapper(VCodec, vcodecs_table, properties={
-    'movies': relation(Movie, backref='vcodec')})
-mapper(Person, people_table, properties = {
-    'loans': relation(Loan, backref='person', cascade='all, delete-orphan'),
-    'loaned_movies_count': column_property(select(
-        [func.count(loans_table.c.loan_id)],
-        and_(people_table.c.person_id == loans_table.c.person_id,
-             loans_table.c.return_date == None
-        )).label('loaned_movies_count'), deferred=True),
-    'returned_movies_count': column_property(select( # AKA loan history
-        [func.count(loans_table.c.loan_id)],
-        and_(people_table.c.person_id == loans_table.c.person_id,
-             loans_table.c.return_date != None
-        )).label('returned_movies_count'), deferred=True)
-    })
-mapper(MovieLang, movie_lang_table, primary_key=[movie_lang_table.c.ml_id], properties = {
-    'movie'    : relation(Movie),
-    'language' : relation(Lang),
-    'achannel' : relation(AChannel),
-    'acodec'   : relation(ACodec),
-    'subformat': relation(SubFormat)})
-mapper(ACodec, acodecs_table, properties={
-    'movielangs': relation(MovieLang)})
-mapper(AChannel, achannels_table, properties={
-    'movielangs': relation(MovieLang)})
-mapper(SubFormat, subformats_table, properties={
-    'movielangs': relation(MovieLang)})
-mapper(Lang, languages_table, properties={
-    'movielangs': relation(MovieLang)})
-mapper(MovieTag, movie_tag_table)
-mapper(Tag, tags_table, properties={'movietags': relation(MovieTag, backref='tag')})
-mapper(Loan, loans_table, properties = {
-    'volume'    : relation(Volume),
-    'collection': relation(Collection)})
-mapper(Movie, movies_table, order_by=movies_table.c.number , properties = {
-    'loans'     : relation(Loan, backref='movie', cascade='all, delete-orphan'),
-    #'tags'       : relation(Tag, cascade='all, delete-orphan', secondary=movie_tag,
-    'tags'      : relation(Tag, secondary=movie_tag_table,
-                           primaryjoin=movies_table.c.movie_id==movie_tag_table.c.movie_id,
-                           secondaryjoin=movie_tag_table.c.tag_id==tags_table.c.tag_id),
-    'languages' : relation(MovieLang, cascade='all, delete-orphan')})
-mapper(Poster, posters_table, properties={
-    'movies': relation(Movie),
-    'data'  : deferred(posters_table.c.data)
-    })
-mapper(Filter, filters_table)
-#}}}
-

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/dbupgrade.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -39,79 +39,79 @@
         log.info('Creating new database...')
         # version is 0 or none only for new databases
         db.metadata.create_all(b)
-        db.configuration_table.insert(bind=b).execute(param=u'version', value=unicode(self.version))
-        db.media_table.insert(bind=b).execute(name=u'DVD')
-        db.media_table.insert(bind=b).execute(name=u'DVD-R')
-        db.media_table.insert(bind=b).execute(name=u'DVD-RW')
-        db.media_table.insert(bind=b).execute(name=u'DVD+R')
-        db.media_table.insert(bind=b).execute(name=u'DVD+RW')
-        db.media_table.insert(bind=b).execute(name=u'DVD-RAM')
-        db.media_table.insert(bind=b).execute(name=u'CD')
-        db.media_table.insert(bind=b).execute(name=u'CD-RW')
-        db.media_table.insert(bind=b).execute(name=u'VCD')
-        db.media_table.insert(bind=b).execute(name=u'SVCD')
-        db.media_table.insert(bind=b).execute(name=u'VHS')
-        db.media_table.insert(bind=b).execute(name=u'BETACAM')
-        db.media_table.insert(bind=b).execute(name=u'LaserDisc')
-        db.media_table.insert(bind=b).execute(name=u'HD DVD')
-        db.media_table.insert(bind=b).execute(name=u'Blu-ray')
-        db.ratios_table.insert(bind=b).execute(name=u'16:9')
-        db.ratios_table.insert(bind=b).execute(name=u'4:3')
-        db.acodecs_table.insert(bind=b).execute(name=u'AC-3 Dolby audio')
-        db.acodecs_table.insert(bind=b).execute(name=u'OGG')
-        db.acodecs_table.insert(bind=b).execute(name=u'MP3')
-        db.acodecs_table.insert(bind=b).execute(name=u'MPEG-1')
-        db.acodecs_table.insert(bind=b).execute(name=u'MPEG-2')
-        db.acodecs_table.insert(bind=b).execute(name=u'AAC')
-        db.acodecs_table.insert(bind=b).execute(name=u'Windows Media Audio')
-        db.vcodecs_table.insert(bind=b).execute(name=u'MPEG-1')
-        db.vcodecs_table.insert(bind=b).execute(name=u'MPEG-2')
-        db.vcodecs_table.insert(bind=b).execute(name=u'XviD')
-        db.vcodecs_table.insert(bind=b).execute(name=u'DivX')
-        db.vcodecs_table.insert(bind=b).execute(name=u'H.264')
-        db.vcodecs_table.insert(bind=b).execute(name=u'RealVideo')
-        db.vcodecs_table.insert(bind=b).execute(name=u'QuickTime')
-        db.vcodecs_table.insert(bind=b).execute(name=u'Windows Media Video')
-        db.achannels_table.insert(bind=b).execute(name=u'mono')
-        db.achannels_table.insert(bind=b).execute(name=u'stereo')
-        db.achannels_table.insert(bind=b).execute(name=u'5.1')
-        db.achannels_table.insert(bind=b).execute(name=u'7.1')
-        db.subformats_table.insert(bind=b).execute(name=u'DVD VOB')
-        db.subformats_table.insert(bind=b).execute(name=u'MPL2 (.txt)')
-        db.subformats_table.insert(bind=b).execute(name=u'MicroDVD (.sub)')
-        db.subformats_table.insert(bind=b).execute(name=u'SubRip (.srt)')
-        db.subformats_table.insert(bind=b).execute(name=u'SubViewer2 (.sub)')
-        db.subformats_table.insert(bind=b).execute(name=u'Sub Station Alpha (.ssa)')
-        db.subformats_table.insert(bind=b).execute(name=u'Advanced Sub Station Alpha (.ssa)')
-        db.languages_table.insert(bind=b).execute(name=_('Brazilian Portuguese'))
-        db.languages_table.insert(bind=b).execute(name=_('Bulgarian'))
-        db.languages_table.insert(bind=b).execute(name=_('Catalan'))
-        db.languages_table.insert(bind=b).execute(name=_('Czech'))
-        db.languages_table.insert(bind=b).execute(name=_('Danish'))
-        db.languages_table.insert(bind=b).execute(name=_('Dutch'))
-        db.languages_table.insert(bind=b).execute(name=_('English'))
-        db.languages_table.insert(bind=b).execute(name=_('Estonian'))
-        db.languages_table.insert(bind=b).execute(name=_('French'))
-        db.languages_table.insert(bind=b).execute(name=_('German'))
-        db.languages_table.insert(bind=b).execute(name=_('Greek'))
-        db.languages_table.insert(bind=b).execute(name=_('Hungarian'))
-        db.languages_table.insert(bind=b).execute(name=_('Indonesian'))
-        db.languages_table.insert(bind=b).execute(name=_('Italian'))
-        db.languages_table.insert(bind=b).execute(name=_('Japanese'))
-        db.languages_table.insert(bind=b).execute(name=_('Korean'))
-        db.languages_table.insert(bind=b).execute(name=_('Norwegian Bokmal'))
-        db.languages_table.insert(bind=b).execute(name=_('Occitan'))
-        db.languages_table.insert(bind=b).execute(name=_('Pashto'))
-        db.languages_table.insert(bind=b).execute(name=_('Polish'))
-        db.languages_table.insert(bind=b).execute(name=_('Portuguese'))
-        db.languages_table.insert(bind=b).execute(name=_('Russian'))
-        db.languages_table.insert(bind=b).execute(name=_('Simplified Chinese'))
-        db.languages_table.insert(bind=b).execute(name=_('Slovak'))
-        db.languages_table.insert(bind=b).execute(name=_('Spanish'))
-        db.languages_table.insert(bind=b).execute(name=_('Swedish'))
-        db.languages_table.insert(bind=b).execute(name=_('Turkish'))
-        db.tags_table.insert(bind=b).execute(name=_('Favourite'))
-        db.tags_table.insert(bind=b).execute(name=_('Buy me'))
+        db.tables.configuration.insert(bind=b).execute(param=u'version', value=unicode(self.version))
+        db.tables.media.insert(bind=b).execute(name=u'DVD')
+        db.tables.media.insert(bind=b).execute(name=u'DVD-R')
+        db.tables.media.insert(bind=b).execute(name=u'DVD-RW')
+        db.tables.media.insert(bind=b).execute(name=u'DVD+R')
+        db.tables.media.insert(bind=b).execute(name=u'DVD+RW')
+        db.tables.media.insert(bind=b).execute(name=u'DVD-RAM')
+        db.tables.media.insert(bind=b).execute(name=u'CD')
+        db.tables.media.insert(bind=b).execute(name=u'CD-RW')
+        db.tables.media.insert(bind=b).execute(name=u'VCD')
+        db.tables.media.insert(bind=b).execute(name=u'SVCD')
+        db.tables.media.insert(bind=b).execute(name=u'VHS')
+        db.tables.media.insert(bind=b).execute(name=u'BETACAM')
+        db.tables.media.insert(bind=b).execute(name=u'LaserDisc')
+        db.tables.media.insert(bind=b).execute(name=u'HD DVD')
+        db.tables.media.insert(bind=b).execute(name=u'Blu-ray')
+        db.tables.ratios.insert(bind=b).execute(name=u'16:9')
+        db.tables.ratios.insert(bind=b).execute(name=u'4:3')
+        db.tables.acodecs.insert(bind=b).execute(name=u'AC-3 Dolby audio')
+        db.tables.acodecs.insert(bind=b).execute(name=u'OGG')
+        db.tables.acodecs.insert(bind=b).execute(name=u'MP3')
+        db.tables.acodecs.insert(bind=b).execute(name=u'MPEG-1')
+        db.tables.acodecs.insert(bind=b).execute(name=u'MPEG-2')
+        db.tables.acodecs.insert(bind=b).execute(name=u'AAC')
+        db.tables.acodecs.insert(bind=b).execute(name=u'Windows Media Audio')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'MPEG-1')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'MPEG-2')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'XviD')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'DivX')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'H.264')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'RealVideo')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'QuickTime')
+        db.tables.vcodecs.insert(bind=b).execute(name=u'Windows Media Video')
+        db.tables.achannels.insert(bind=b).execute(name=u'mono')
+        db.tables.achannels.insert(bind=b).execute(name=u'stereo')
+        db.tables.achannels.insert(bind=b).execute(name=u'5.1')
+        db.tables.achannels.insert(bind=b).execute(name=u'7.1')
+        db.tables.subformats.insert(bind=b).execute(name=u'DVD VOB')
+        db.tables.subformats.insert(bind=b).execute(name=u'MPL2 (.txt)')
+        db.tables.subformats.insert(bind=b).execute(name=u'MicroDVD (.sub)')
+        db.tables.subformats.insert(bind=b).execute(name=u'SubRip (.srt)')
+        db.tables.subformats.insert(bind=b).execute(name=u'SubViewer2 (.sub)')
+        db.tables.subformats.insert(bind=b).execute(name=u'Sub Station Alpha (.ssa)')
+        db.tables.subformats.insert(bind=b).execute(name=u'Advanced Sub Station Alpha (.ssa)')
+        db.tables.languages.insert(bind=b).execute(name=_('Brazilian Portuguese'))
+        db.tables.languages.insert(bind=b).execute(name=_('Bulgarian'))
+        db.tables.languages.insert(bind=b).execute(name=_('Catalan'))
+        db.tables.languages.insert(bind=b).execute(name=_('Czech'))
+        db.tables.languages.insert(bind=b).execute(name=_('Danish'))
+        db.tables.languages.insert(bind=b).execute(name=_('Dutch'))
+        db.tables.languages.insert(bind=b).execute(name=_('English'))
+        db.tables.languages.insert(bind=b).execute(name=_('Estonian'))
+        db.tables.languages.insert(bind=b).execute(name=_('French'))
+        db.tables.languages.insert(bind=b).execute(name=_('German'))
+        db.tables.languages.insert(bind=b).execute(name=_('Greek'))
+        db.tables.languages.insert(bind=b).execute(name=_('Hungarian'))
+        db.tables.languages.insert(bind=b).execute(name=_('Indonesian'))
+        db.tables.languages.insert(bind=b).execute(name=_('Italian'))
+        db.tables.languages.insert(bind=b).execute(name=_('Japanese'))
+        db.tables.languages.insert(bind=b).execute(name=_('Korean'))
+        db.tables.languages.insert(bind=b).execute(name=_('Norwegian Bokmal'))
+        db.tables.languages.insert(bind=b).execute(name=_('Occitan'))
+        db.tables.languages.insert(bind=b).execute(name=_('Pashto'))
+        db.tables.languages.insert(bind=b).execute(name=_('Polish'))
+        db.tables.languages.insert(bind=b).execute(name=_('Portuguese'))
+        db.tables.languages.insert(bind=b).execute(name=_('Russian'))
+        db.tables.languages.insert(bind=b).execute(name=_('Simplified Chinese'))
+        db.tables.languages.insert(bind=b).execute(name=_('Slovak'))
+        db.tables.languages.insert(bind=b).execute(name=_('Spanish'))
+        db.tables.languages.insert(bind=b).execute(name=_('Swedish'))
+        db.tables.languages.insert(bind=b).execute(name=_('Turkish'))
+        db.tables.tags.insert(bind=b).execute(name=_('Favourite'))
+        db.tables.tags.insert(bind=b).execute(name=_('Buy me'))
         return True # upgrade process finished
     #
     # next steps are only for existing databases with an outdated structure
@@ -132,11 +132,11 @@
         log.info("Upgrading database to version %d...", version)
 
         # create new table
-        db.posters_table.create(checkfirst=True, bind=b)
-        db.filters_table.create(checkfirst=True, bind=b)
-        db.ratios_table.create(checkfirst=True, bind=b)
-        db.ratios_table.insert(bind=b).execute(name=u'16:9')
-        db.ratios_table.insert(bind=b).execute(name=u'4:3')
+        db.tables.posters.create(checkfirst=True, bind=b)
+        db.tables.filters.create(checkfirst=True, bind=b)
+        db.tables.ratios.create(checkfirst=True, bind=b)
+        db.tables.ratios.insert(bind=b).execute(name=u'16:9')
+        db.tables.ratios.insert(bind=b).execute(name=u'4:3')
 
         log.info('... adding new columns')
         # common SQL statements

Modified: trunk/lib/plugins/imp/__init__.py
===================================================================
--- trunk/lib/plugins/imp/__init__.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/plugins/imp/__init__.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -161,7 +161,7 @@
                     #movie = db.Movie()
                     #movie.add_to_db(details)
                     try:
-                        db.movies_table.insert(bind=self.db.session.bind).execute(details)
+                        db.tables.movies.insert(bind=self.db.session.bind).execute(details)
                         self.imported += 1
                     except Exception, e:
                         log.info("movie details are not unique, skipping: %s", e)

Modified: trunk/lib/quick_filter.py
===================================================================
--- trunk/lib/quick_filter.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/quick_filter.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -30,14 +30,14 @@
     
     from sqlalchemy import select
     from sqlalchemy.orm.util import class_mapper, object_mapper
-    statement = select(db.movies_table.columns, bind=self.db.session.bind)
+    statement = select(db.tables.movies.columns, bind=self.db.session.bind)
     
     if text:
         criteria = self.search_criteria[self.widgets['filter']['criteria'].get_active()]
         if criteria in ('year', 'runtime', 'media_num', 'rating'):
-            statement.append_whereclause(db.movies_table.c[criteria]==text)
+            statement.append_whereclause(db.tables.movies.c[criteria]==text)
         else:
-            statement.append_whereclause(db.movies_table.c[criteria].like('%'+text+'%'))
+            statement.append_whereclause(db.tables.movies.c[criteria].like('%'+text+'%'))
     if self.widgets['filter']['text'].is_focus():
         if len(text)<4: # filter mode
             limit = int(self.config.get('limit', 0, section='mainlist'))

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-06 18:29:12 UTC (rev 1251)
+++ trunk/lib/sql.py	2009-07-06 20:17:05 UTC (rev 1252)
@@ -152,15 +152,15 @@
 
     loaned_to = []
     for per_id in cond["loaned_to"]:
-        loaned_to.append(exists([db.loans_table.c.movie_id],\
-                and_(db.Movie.movie_id==db.loans_table.c.movie_id, db.loans_table.c.person_id==per_id, db.loans_table.c.return_date==None)))
+        loaned_to.append(exists([db.tables.loans.c.movie_id],\
+                and_(db.Movie.movie_id==db.tables.loans.c.movie_id, db.tables.loans.c.person_id==per_id, db.tables.loans.c.return_date==None)))
     if loaned_to:
         query.append_whereclause(or_(*loaned_to))
 
     loan_history = []
     for per_id in cond["loan_history"]:
-        loan_history.append(exists([db.loans_table.c.movie_id],\
-                and_(db.Movie.movie_id==db.loans_table.c.movie_id, db.loans_table.c.person_id==per_id)))
+        loan_history.append(exists([db.tables.loans.c.movie_id],\
+                and_(db.Movie.movie_id==db.tables.loans.c.movie_id, db.tables.loans.c.person_id==per_id)))
     if loan_history:
         query.append_whereclause(or_(*loan_history))
 
@@ -186,35 +186,35 @@
         query.append_whereclause(and_(*no_tags))
 
     for field in cond["equals_n"]:
-        values = [ db.movies_table.columns[field]!=value for value in cond["equals_n"][field] ]
+        values = [ db.tables.movies.columns[field]!=value for value in cond["equals_n"][field] ]
         query.append_whereclause(and_(*values))
 
     for field in cond["startswith_n"]:
-        values = [ not_(db.movies_table.columns[field].startswith(value)) for value in cond["startswith_n"][field] ]
+        values = [ not_(db.tables.movies.columns[field].startswith(value)) for value in cond["startswith_n"][field] ]
         query.append_whereclause(and_(*values))
 
     for field in cond["like_n"]:
-        values = [ not_(db.movies_table.columns[field].like(value)) for value in cond["like_n"][field] ]
+        values = [ not_(db.tables.movies.columns[field].like(value)) for value in cond["like_n"][field] ]
         query.append_whereclause(and_(*values))
 
     for field in cond["contains_n"]: # XXX: it's not the SQLAlchemy's .contains() i.e. not for one-to-many or many-to-many collections
-        values = [ not_(db.movies_table.columns[field].like('%'+value+'%')) for value in cond["contains_n"][field] ]
+        values = [ not_(db.tables.movies.columns[field].like('%'+value+'%')) for value in cond["contains_n"][field] ]
         query.append_whereclause(and_(*values))
 
     for field in cond["equals"]:
-        values = [ db.movies_table.columns[field]==value for value in cond["equals"][field] ]
+        values = [ db.tables.movies.columns[field]==value for value in cond["equals"][field] ]
         query.append_whereclause(or_(*values))
 
     for field in cond["startswith"]:
-        values = [ db.movies_table.columns[field].startswith(value) for value in cond["startswith"][field] ]
+        values = [ db.tables.movies.columns[field].startswith(value) for value in cond["startswith"][field] ]
         query.append_whereclause(or_(*values))
 
     for field in cond["like"]:
-        values = [ db.movies_table.columns[field].like(value) for value in cond["like"][field] ]
+        values = [ db.tables.movies.columns[field].like(value) for value in cond["like"][field] ]
         query.append_whereclause(or_(*values))
 
     for field in cond["contains"]: # XXX: it's not the SQLAlchemy's .contains() i.e. not for one-to-many or many-to-many collections
-        values = [ db.movies_table.columns[field].like('%'+value+'%') for value in cond["contains"][field] ]
+        values = [ db.tables.movies.columns[field].like('%'+value+'%') for value in cond["contains"][field] ]
         query.append_whereclause(or_(*values))
 
     # sorting



From piotrek at mail.berlios.de  Mon Jul  6 22:27:17 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 22:27:17 +0200
Subject: [Griffith-svn] r1253 - in trunk/lib: . db
Message-ID: <200907062027.n66KRHU3025359@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 22:27:17 +0200 (Mon, 06 Jul 2009)
New Revision: 1253

Modified:
   trunk/lib/db/__init__.py
   trunk/lib/db/_movie.py
   trunk/lib/db/_objects.py
   trunk/lib/db/tables.py
   trunk/lib/sql.py
Log:
move DB API version to db.__version__


Modified: trunk/lib/db/__init__.py
===================================================================
--- trunk/lib/db/__init__.py	2009-07-06 20:17:05 UTC (rev 1252)
+++ trunk/lib/db/__init__.py	2009-07-06 20:27:17 UTC (rev 1253)
@@ -1,6 +1,7 @@
 # -*- coding: UTF-8 -*-
 # vim: fdm=marker
-__revision__ = '$Id: __init__.py 1251 2009-07-06 18:29:12Z piotrek $'
+__revision__ = '$Id$'
+__version__ = 5 # XXX: database format version, remember to increase after changing data structures
 
 # Copyright ? 2009 Piotr O?arowski
 #
@@ -34,7 +35,7 @@
 import tables # *after* metadata initialization
 from _objects import *
 
-log = logging.getLogger("Griffith")
+log = logging.getLogger('Griffith')
 
 EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
 


Property changes on: trunk/lib/db/__init__.py
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/lib/db/_movie.py
===================================================================
--- trunk/lib/db/_movie.py	2009-07-06 20:17:05 UTC (rev 1252)
+++ trunk/lib/db/_movie.py	2009-07-06 20:27:17 UTC (rev 1253)
@@ -1,5 +1,5 @@
 # -*- coding: UTF-8 -*-
-__revision__ = '$Id: _movie.py 1251 2009-07-06 18:29:12Z piotrek $'
+__revision__ = '$Id$'
 
 # Copyright ? 2009 Piotr O?arowski
 #
@@ -20,12 +20,16 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
+
 from sqlalchemy import and_, or_
 from sqlalchemy.orm import object_session
 
 import tables
 from _objects import Loan
 
+log = logging.getLogger('Griffith')
+
 res_aliases = {(2560, 1600): ('QSXGA',),
                 (2048, 1536): ('QXGA',),
                 (1920, 1200): ('WUXGA',),


Property changes on: trunk/lib/db/_movie.py
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/lib/db/_objects.py
===================================================================
--- trunk/lib/db/_objects.py	2009-07-06 20:17:05 UTC (rev 1252)
+++ trunk/lib/db/_objects.py	2009-07-06 20:27:17 UTC (rev 1253)
@@ -1,6 +1,6 @@
 # -*- coding: UTF-8 -*-
 # vim: fdm=marker
-__revision__ = '$Id: _objects.py 1251 2009-07-06 18:29:12Z piotrek $'
+__revision__ = '$Id$'
 
 # Copyright ? 2009 Piotr O?arowski
 #
@@ -26,7 +26,7 @@
 
 from sqlalchemy.orm import validates
 
-log = logging.getLogger("Griffith")
+log = logging.getLogger('Griffith')
 
 class DBTable(object):
     def __init__(self, **kwargs):


Property changes on: trunk/lib/db/_objects.py
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2009-07-06 20:17:05 UTC (rev 1252)
+++ trunk/lib/db/tables.py	2009-07-06 20:27:17 UTC (rev 1253)
@@ -1,6 +1,6 @@
 # -*- coding: UTF-8 -*-
 # vim: fdm=marker
-__revision__ = '$Id: tables.py 1251 2009-07-06 18:29:12Z piotrek $'
+__revision__ = '$Id$'
 
 # Copyright ? 2009 Piotr O?arowski
 #
@@ -28,7 +28,7 @@
 
 from db import metadata
 
-log = logging.getLogger("Griffith")
+log = logging.getLogger('Griffith')
 
 movies = Table('movies', metadata,
     Column('movie_id', Integer, primary_key=True),


Property changes on: trunk/lib/db/tables.py
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-06 20:17:05 UTC (rev 1252)
+++ trunk/lib/sql.py	2009-07-06 20:27:17 UTC (rev 1253)
@@ -39,7 +39,7 @@
 
 
 class GriffithSQL(object):
-    version = 5 # database format version, increase after changing data structures
+    version = db.__version__
     DEFAULT_PORTS = dict(postgres=5432, mysql=3306, mssql=1433)
 
     def __init__(self, config, griffith_dir, fallback=True):



From piotrek at mail.berlios.de  Mon Jul  6 22:47:28 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 6 Jul 2009 22:47:28 +0200
Subject: [Griffith-svn] r1254 - trunk/lib/db
Message-ID: <200907062047.n66KlSh5027259@sheep.berlios.de>

Author: piotrek
Date: 2009-07-06 22:47:27 +0200 (Mon, 06 Jul 2009)
New Revision: 1254

Modified:
   trunk/lib/db/__init__.py
   trunk/lib/db/_objects.py
   trunk/lib/db/tables.py
Log:
no need for table reflection


Modified: trunk/lib/db/__init__.py
===================================================================
--- trunk/lib/db/__init__.py	2009-07-06 20:27:17 UTC (rev 1253)
+++ trunk/lib/db/__init__.py	2009-07-06 20:47:27 UTC (rev 1254)
@@ -22,11 +22,7 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-
-# XXX: keep stdlib and SQLAlchemy imports only in this module
-
 import logging
-import re
 
 from sqlalchemy import MetaData, func, select, and_
 from sqlalchemy.orm import mapper, relation, deferred, column_property
@@ -37,13 +33,7 @@
 
 log = logging.getLogger('Griffith')
 
-EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
 
-### clases #################################################### {{{
-
-#}}}
-
-### mappers ################################################### {{{
 mapper(Configuration, tables.configuration)
 mapper(Volume, tables.volumes, order_by=tables.volumes.c.name, properties={
     'movies': relation(Movie, backref='volume')})
@@ -99,5 +89,4 @@
     'data'  : deferred(tables.posters.c.data)
     })
 mapper(Filter, tables.filters)
-#}}}
 

Modified: trunk/lib/db/_objects.py
===================================================================
--- trunk/lib/db/_objects.py	2009-07-06 20:27:17 UTC (rev 1253)
+++ trunk/lib/db/_objects.py	2009-07-06 20:47:27 UTC (rev 1254)
@@ -23,11 +23,14 @@
 
 import logging
 import string
+import re
 
 from sqlalchemy.orm import validates
 
 log = logging.getLogger('Griffith')
 
+EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
+
 class DBTable(object):
     def __init__(self, **kwargs):
         for i in kwargs:

Modified: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2009-07-06 20:27:17 UTC (rev 1253)
+++ trunk/lib/db/tables.py	2009-07-06 20:47:27 UTC (rev 1254)
@@ -30,14 +30,40 @@
 
 log = logging.getLogger('Griffith')
 
+posters = Table('posters', metadata,
+    Column('md5sum', Unicode(32), primary_key=True),
+    Column('data', Binary(1048576), nullable=False))
+
+volumes = Table('volumes', metadata,
+    Column('volume_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True),
+    Column('loaned', Boolean, nullable=False, default=False))
+
+collections = Table('collections', metadata,
+    Column('collection_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True),
+    Column('loaned', Boolean, nullable=False, default=False))
+
+media = Table('media', metadata,
+    Column('medium_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
+ratios = Table('ratios', metadata,
+    Column('ratio_id', Integer, primary_key=True),
+    Column('name', Unicode(5), nullable=False, unique=True))
+
+vcodecs = Table('vcodecs', metadata,
+    Column('vcodec_id', Integer, primary_key=True),
+    Column('name', Unicode(64), nullable=False, unique=True))
+
 movies = Table('movies', metadata,
     Column('movie_id', Integer, primary_key=True),
     Column('number', Integer, nullable=False, unique=True, index=True),
-    Column('collection_id', ForeignKey('collections.collection_id')),
-    Column('volume_id', ForeignKey('volumes.volume_id')),
-    Column('medium_id', ForeignKey('media.medium_id')),
-    Column('ratio_id', ForeignKey('ratios.ratio_id')),
-    Column('vcodec_id', ForeignKey('vcodecs.vcodec_id')),
+    Column('collection_id', ForeignKey(collections.c.collection_id)),
+    Column('volume_id', ForeignKey(volumes.c.volume_id)),
+    Column('medium_id', ForeignKey(media.c.medium_id)),
+    Column('ratio_id', ForeignKey(ratios.c.ratio_id)),
+    Column('vcodec_id', ForeignKey(vcodecs.c.vcodec_id)),
     Column('loaned', Boolean, nullable=False, default=False),
     Column('seen', Boolean, nullable=False, default=False),
     Column('rating', SmallInteger(2)),
@@ -62,7 +88,7 @@
     Column('country', Unicode(128)),
     Column('genre', Unicode(128)),
     Column('image', Unicode(128)), # XXX: deprecated
-    Column('poster_md5', ForeignKey('posters.md5sum')),
+    Column('poster_md5', ForeignKey(posters.c.md5sum)),
     Column('studio', Unicode(128)),
     Column('classification', Unicode(128)),
     Column('cast', Text),
@@ -78,38 +104,16 @@
 loans = Table('loans', metadata,
     Column('loan_id', Integer, primary_key=True),
     Column('person_id',  ForeignKey(people.c.person_id), nullable=False),
-    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
-    Column('volume_id', ForeignKey('volumes.volume_id')),
-    Column('collection_id', ForeignKey('collections.collection_id')),
+    Column('movie_id', ForeignKey(movies.c.movie_id), nullable=False),
+    Column('volume_id', ForeignKey(volumes.c.volume_id)),
+    Column('collection_id', ForeignKey(collections.c.collection_id)),
     Column('date', Date, nullable=False, default=func.current_date()),
     Column('return_date', Date, nullable=True))
 
-volumes = Table('volumes', metadata,
-    Column('volume_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
-
-collections = Table('collections', metadata,
-    Column('collection_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
-
-media = Table('media', metadata,
-    Column('medium_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
-ratios = Table('ratios', metadata,
-    Column('ratio_id', Integer, primary_key=True),
-    Column('name', Unicode(5), nullable=False, unique=True))
-
 languages = Table('languages', metadata,
     Column('lang_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True))
 
-vcodecs = Table('vcodecs', metadata,
-    Column('vcodec_id', Integer, primary_key=True),
-    Column('name', Unicode(64), nullable=False, unique=True))
-
 acodecs = Table('acodecs', metadata,
     Column('acodec_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True))
@@ -129,25 +133,21 @@
 movie_lang = Table('movie_lang', metadata,
     Column('ml_id', Integer, primary_key=True),
     Column('type', SmallInteger), # 0: Original, 1:lector, 2:dubbing, 3:subtitle
-    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
-    Column('lang_id', ForeignKey('languages.lang_id'), nullable=False),
-    Column('acodec_id', ForeignKey('acodecs.acodec_id')),
-    Column('achannel_id', ForeignKey('achannels.achannel_id')),
-    Column('subformat_id', ForeignKey('subformats.subformat_id')))
+    Column('movie_id', ForeignKey(movies.c.movie_id), nullable=False),
+    Column('lang_id', ForeignKey(languages.c.lang_id), nullable=False),
+    Column('acodec_id', ForeignKey(acodecs.c.acodec_id)),
+    Column('achannel_id', ForeignKey(achannels.c.achannel_id)),
+    Column('subformat_id', ForeignKey(subformats.c.subformat_id)))
 
 movie_tag = Table('movie_tag', metadata,
     Column('mt_id', Integer, primary_key=True),
-    Column('movie_id', ForeignKey('movies.movie_id')),
-    Column('tag_id', ForeignKey('tags.tag_id')))
+    Column('movie_id', ForeignKey(movies.c.movie_id)),
+    Column('tag_id', ForeignKey(tags.c.tag_id)))
 
 configuration = Table('configuration', metadata,
     Column('param', Unicode(16), primary_key=True),
     Column('value', Unicode(128), nullable=False))
 
-posters = Table('posters', metadata,
-    Column('md5sum', Unicode(32), primary_key=True),
-    Column('data', Binary(1048576), nullable=False))
-
 filters = Table('filters', metadata,
     Column('name', Unicode(64), primary_key=True),
     Column('data', PickleType, nullable=False))



From mikej06 at mail.berlios.de  Tue Jul  7 01:39:36 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 7 Jul 2009 01:39:36 +0200
Subject: [Griffith-svn] r1255 - branches/0.9.x branches/0.9.x/lib
	branches/0.9.x/lib/plugins/movie trunk trunk/lib
	trunk/lib/plugins/movie
Message-ID: <200907062339.n66Nda6g017218@sheep.berlios.de>

Author: mikej06
Date: 2009-07-07 01:39:05 +0200 (Tue, 07 Jul 2009)
New Revision: 1255

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieAllocine.py
   branches/0.9.x/lib/plugins/movie/PluginMovieAmazon.py
   branches/0.9.x/lib/plugins/movie/PluginMovieCineMovies.py
   branches/0.9.x/lib/plugins/movie/PluginMovieFilmDb.py
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py
   branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py
   branches/0.9.x/lib/plugins/movie/PluginMovieZelluloid.py
   branches/0.9.x/lib/test_movieplugins.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieAllocine.py
   trunk/lib/plugins/movie/PluginMovieAmazon.py
   trunk/lib/plugins/movie/PluginMovieCineMovies.py
   trunk/lib/plugins/movie/PluginMovieFilmDb.py
   trunk/lib/plugins/movie/PluginMovieIMDB-de.py
   trunk/lib/plugins/movie/PluginMovieMovieMeter.py
   trunk/lib/plugins/movie/PluginMovieOFDb.py
   trunk/lib/plugins/movie/PluginMovieZelluloid.py
   trunk/lib/test_movieplugins.py
Log:
* updated Allocine, CineMovies, IMDb-de, Zelluloid plugin
* some testdata fixed
* new api key for MovieMeter plugin

Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/ChangeLog	2009-07-06 23:39:05 UTC (rev 1255)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-07  Michael Jahn
+	* updated Allocine, CineMovies, IMDb-de, Zelluloid plugin
+
 2009-07-03  Michael Jahn
 	* updated IMDb plugin
 

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieAllocine.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieAllocine.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieAllocine.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -44,9 +44,9 @@
 		self.page_cast = self.open_page(self.parent_window, url = "http://www.allocine.fr/film/casting_gen_cfilm=%s.html" % str(self.movie_id))
 
 	def get_image(self):
-		urls = re.split('<img[ \t]+src=[\'"]', self.page)
-		for index in range(1, len(urls), 1):
-			url = gutils.before(urls[index], '"')
+		urls = re.split('<img[ \t]+src=[\'"]', gutils.trim(self.page, '</h1>', '</h2>'))
+		for url in urls[1:]:
+			url = gutils.before(url, '"')
 			if string.find(url, '.jpg') >= 0:
 				self.image_url = url
 				break
@@ -55,11 +55,11 @@
 		self.o_title = ""
 		self.o_title = gutils.trim(self.page,"Titre original : <i>","</i>")
 		if (self.o_title==''):
-			self.o_title = string.replace(gutils.trim(self.page, '<title>', '</title>'), ' - Allocine.fr', '')
+			self.o_title = string.replace(gutils.trim(self.page, '<title>', '</title>'), u' - AlloCin?', '')
 		self.o_title = self.o_title.encode(self.encode)
 
 	def get_title(self):
-		self.title = string.replace(gutils.trim(self.page, '<title>', '</title>'), ' - Allocine.fr', '')
+		self.title = string.replace(gutils.trim(self.page, '<title>', '</title>'), u' - AlloCin?', '')
 		self.title = self.title.encode(self.encode)
 
 	def get_director(self):
@@ -89,9 +89,9 @@
 		self.cast = ""
 		casts = gutils.trim(self.page_cast, 'Acteurs', '</table>')
 		parts = string.split(casts, '<td ')
-		for index in range(1, len(parts) - 1, 2):
-			character = gutils.after(parts[index], '>')
-			actor = gutils.after(parts[index + 1], '>')
+		for index in range(1, len(parts) - 1, 3):
+			character = gutils.after(parts[index + 1], '>')
+			actor = gutils.after(parts[index + 2], '>')
 			self.cast = self.cast + gutils.clean(actor) + _(' as ').encode(self.encode) + gutils.clean(character) + '\n'
 
 	def get_classification(self):
@@ -140,4 +140,58 @@
 			for index in range(1, len(elements), 1):
 				element = elements[index]
 				self.ids.append(gutils.before(element, '.'))
-				self.titles.append(gutils.strip_tags(gutils.convert_entities(gutils.trim(element, '>', '</a>'))))
+				title = gutils.strip_tags(gutils.convert_entities(gutils.trim(element, '>', '</a>')))
+				year = gutils.clean(gutils.trim(element, '</h4>', '</h4>'))
+				if year:
+					self.titles.append(title + ' (' + year + ')')
+				else:
+					self.titles.append(title)
+
+#
+# Plugin Test
+#
+class SearchPluginTest(SearchPlugin):
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
+    #
+    test_configuration = {
+        'Le Prix ? payer' : [ 4, 4 ],
+    }
+
+class PluginTest:
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> dict { arribute -> value } }
+    #
+    # value: * True/False if attribute only should be tested for any value
+    #        * or the expected value
+    #
+    test_configuration = {
+        '110585' : { 
+            'title'               : u'Le Prix ? payer',
+            'o_title'             : u'Le Prix ? payer',
+            'director'            : u'Alexandra Lecl?re',
+            'plot'                : True,
+            'cast'                : u'Christian Clavier' + _(' as ') + 'Jean-Pierre M?nard\n\
+Nathalie Baye' + _(' as ') + 'Odile M?nard\n\
+G?rard Lanvin' + _(' as ') + 'Richard\n\
+G?raldine Pailhas' + _(' as ') + 'Caroline\n\
+Patrick Chesnais' + _(' as ') + 'Gr?goire l\'amant\n\
+Ana?s Demoustier' + _(' as ') + 'Justine\n\
+Maud Buquet' + _(' as ') + 'la prostitu?e\n\
+Francis Leplay' + _(' as ') + 'l\'agent immobilier',
+            'country'             : u'fran?ais',
+            'genre'               : u'Com?die',
+            'classification'      : False,
+            'studio'              : False,
+            'o_site'              : False,
+            'site'                : 'http://www.allocine.fr/film/fichefilm_gen_cfilm=110585.html',
+            'trailer'             : 'http://www.allocine.fr/film/video_gen_cfilm=110585.html',
+            'year'                : 2007,
+            'notes'               : False,
+            'runtime'             : 95,
+            'image'               : True,
+            'rating'              : 5
+        },
+    }

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieAmazon.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieAmazon.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -393,7 +393,7 @@
 			'cast'				: 'Sylvester Stallone\n\
 Antonio Traver\n\
 Burt Young',
-			'country'			: False,
+			'country'			: 'USA',
 			'genre'				: 'Drama, Drama',
 			'classification'	: 'Freigegeben ab 12 Jahren',
 			'studio'			: 'MGM Home Entertainment GmbH (dt.)',
@@ -414,7 +414,7 @@
 			'cast'				: 'Lino Ventura\n\
 Fran?oise Fabian\n\
 Charles G?rard',
-			'country'			: 'Frankreich',
+			'country'			: 'Frankreich, Italien',
 			'genre'				: 'Krimikom?die, Drama, General AAS, Drama, Kom?die, Krimi',
 			'classification'	: 'Freigegeben ab 12 Jahren',
 			'studio'			: 'Warner Home Video - DVD',

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieCineMovies.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieCineMovies.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieCineMovies.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -78,7 +78,7 @@
 		self.genre = self.genre.encode(self.encode)
 
 	def get_cast(self):
-		self.cast = gutils.trim(self.page_cast, 'diens</b> :', '</table>')
+		self.cast = gutils.trim(self.page_cast, 'diens</h2> :', '</table>')
 		self.cast = self.cast.replace('\n', '')
 		self.cast = self.cast.replace('</tr>', '\n')
 		self.cast = gutils.clean(self.cast)

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieFilmDb.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieFilmDb.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieFilmDb.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -202,64 +202,64 @@
 			'plot'                : True,
 			'cast'                : 'Dolph Lundgren\n\
 Sylvester Stallone\n\
+Mike Tyson\n\
 Carl Weathers\n\
-Mike Tyson\n\
 Burt Young\n\
 Talia Shire\n\
 Burgess Meredith\n\
-Tony Burton\n\
 Milo Ventimiglia\n\
 Mr. T\n\
+Tony Burton\n\
+Geraldine Hughes\n\
 Frank Stallone\n\
-Geraldine Hughes\n\
 Michael Buffer\n\
 Lahmard J. Tate\n\
 Don Sherman\n\
+Gunnar Peterson\n\
 LeRoy Neiman\n\
-Robert Michael Kelly\n\
-Gunnar Peterson\n\
+Tobias Segal\n\
 Stu Nahan\n\
-Tobias Segal\n\
 Skip Bayless\n\
+Robert Michael Kelly\n\
 Ricky Cavazos\n\
-Marc Ratner\n\
 Rick Buchborn\n\
-Jim Lampley\n\
+Jody Giambelluca\n\
+Yahya\n\
+Charles Johnson\n\
+Barney Fitzpatrick\n\
 Henry G. Sanders\n\
-Charles Johnson\n\
 Fran Pultro\n\
-Angela Boyd\n\
-Yahya\n\
+Dana Jacobson\n\
 Tim Carr\n\
 Joe Cortez\n\
+Jim Lampley\n\
+Max Kellerman\n\
+Ana Gerena\n\
+Marc Ratner\n\
+Jack Lazzarado\n\
 Carter Mitchell\n\
+Angela Boyd\n\
 Maureen Schilling\n\
-Jody Giambelluca\n\
-Barney Fitzpatrick\n\
+James Binns\n\
 Antonio Tarver\n\
-Ana Gerena\n\
 A.J. Benza\n\
-James Binns\n\
 Nick Baker\n\
-Jack Lazzarado\n\
+Louis Giansante\n\
 Matt Frack\n\
-Louis Giansante\n\
-Kevin King Templeton\n\
-Dana Jacobson\n\
 Larry Merchant\n\
-Woody Paige\n\
-Brian Kenny\n\
 Paul Dion Monte\n\
+Bernard Fern?ndez\n\
 Anthony Lato Jr.\n\
+Kevin King Templeton\n\
+Brian Kenny\n\
+Woody Paige\n\
+Lou DiBella\n\
 Pedro Lovell\n\
-Max Kellerman\n\
 Bert Randolph Sugar\n\
 Vinod Kumar\n\
-Lou DiBella\n\
-Bernard Fern?ndez\n\
+Jay Crawford\n\
+Gary Compton\n\
 Johnnie Hobbs Jr.\n\
-Gary Compton\n\
-Jay Crawford\n\
 James Francis Kelly III',
 			'country'             : 'USA',
 			'genre'               : 'Drama',

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -137,8 +137,8 @@
 		self.cast = string.replace(self.cast, ' ... ', _(' as ').encode('utf8'))
 		self.cast = string.replace(self.cast, '...', _(' as ').encode('utf8'))
 		self.cast = string.replace(self.cast, '</tr><tr>', "\n")
-		self.cast = string.replace(self.cast, '</tr><tr class="even">', "\n")
-		self.cast = string.replace(self.cast, '</tr><tr class="odd">', "\n")
+		self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+		self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
 		self.cast = self.__before_more(self.cast)
 		self.cast = re.sub('[ ]+', ' ', self.cast)
 
@@ -281,7 +281,7 @@
 	# dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
 	#
 	test_configuration = {
-		'Rocky Balboa'         : [ 17, 17 ],
+		'Rocky Balboa'         : [ 16, 16 ],
 		'Ein gl?ckliches Jahr' : [  6,  6 ]
 	}
 
@@ -370,6 +370,7 @@
 Jacqueline Olivia' + _(' as ') + 'M?dchen (nicht im Abspann)\n\
 Brian H. Scott' + _(' as ') + 'Ringside Cop #1 (nicht im Abspann)\n\
 Jackie Sereni' + _(' as ') + 'Girl on Steps (nicht im Abspann)\n\
+Keyon Smith' + _(' as ') + 'Boxing Spectator (nicht im Abspann)\n\
 Frank Traynor' + _(' as ') + 'Rechtsanwalt (nicht im Abspann)',
 			'country'			: 'USA',
 			'genre'				: 'Action | Sport',
@@ -384,7 +385,7 @@
 + _('Color') + ': Farbe',
 			'runtime'			: 102,
 			'image'				: True,
-			'rating'			: 8
+			'rating'			: 7
 		},
 		'0069815' : { 
 			'title'				: 'Ein gl?ckliches Jahr',

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -316,7 +316,7 @@
 Bong Tae-gyu' + _(' as ') + 'Cameo\n\
 Im Ha-ryong' + _(' as ') + 'Cameo\n\
 Yoon Do-hyeon\n\
-Lee Choon-yeon\n\
+Lee Choon-yeon' + _(' as ') + 'Cameo\n\
 Kim Yeong-in\n\
 Park Yoon-bae\n\
 Lee Won\n\

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieZelluloid.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieZelluloid.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieZelluloid.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -59,7 +59,7 @@
 		self.title = gutils.trim(self.page, '<title>', '|')
 
 	def get_director(self):
-		self.director = gutils.trim(self.detail_page, 'Regie', '</A>')
+		self.director = gutils.trim(self.detail_page, 'Regie', '</a>')
 
 	def get_plot(self):
 		self.plot = gutils.trim(self.page, '<DIV CLASS=bigtext>', '</DIV>')
@@ -88,8 +88,9 @@
 				delimiter = ', '
 
 	def get_cast(self):
-		self.cast = gutils.trim(self.detail_page, 'alt="Besetzung"', '<TD COLSPAN=')
-		self.cast = self.cast.replace('<A HREF=', '--flip--' + '<A HREF=')
+		self.cast = gutils.trim(self.detail_page, 'alt="Besetzung"', '<img')
+		self.cast = self.cast.replace('<a href=', '--flip--' + '<a href=')
+		self.cast = self.cast.replace('</td></tr>', '\n')
 		self.cast = gutils.strip_tags(self.cast)
 		self.cast = gutils.after(self.cast, '>')
 		elements = self.cast.split('\n')
@@ -107,11 +108,12 @@
 		self.classification = re.sub('[,<].*', '', self.classification)
 
 	def get_studio(self):
-		self.studio = gutils.strip_tags(gutils.trim(self.detail_page, 'alt="Produktion"', '&nbsp;'))
+		self.studio = gutils.trim(self.detail_page, 'alt="Produktion"', '<img')
 		if self.studio == '':
 			self.studio = gutils.trim(self.detail_page, 'alt="Produktion"', '</TABLE>')
 		self.studio = gutils.after(self.studio, '>')
-		self.studio = self.studio.replace('\n', ', ')
+		self.studio = self.studio.replace('<tr>', ', ')
+		self.studio = gutils.strip_tags(self.studio)
 		self.studio = re.sub('((^, )|(, $))', '', self.studio)
 		
 	def get_o_site(self):

Modified: branches/0.9.x/lib/test_movieplugins.py
===================================================================
--- branches/0.9.x/lib/test_movieplugins.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ branches/0.9.x/lib/test_movieplugins.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -63,6 +63,7 @@
 #
 class PluginTester:
 	test_plugins = [
+		'PluginMovieAllocine',
 		'PluginMovieAllMovie',
 		'PluginMovieAmazon',
 		'PluginMovieCinematografo',

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/ChangeLog	2009-07-06 23:39:05 UTC (rev 1255)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-07  Michael Jahn
+	* updated Allocine, CineMovies, IMDb-de, MovieMeter, Zelluloid plugin
+
 2009-07-06  Piotr O?arowski
 	* Reorganize ORM stuff file structure (db module moved to db package)
 

Modified: trunk/lib/plugins/movie/PluginMovieAllocine.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAllocine.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieAllocine.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -43,9 +43,9 @@
         self.page_cast = self.open_page(self.parent_window, url = "http://www.allocine.fr/film/casting_gen_cfilm=%s.html" % str(self.movie_id))
 
     def get_image(self):
-        urls = re.split('<img[ \t]+src=[\'"]', self.page)
-        for index in range(1, len(urls), 1):
-            url = gutils.before(urls[index], '"')
+        urls = re.split('<img[ \t]+src=[\'"]', gutils.trim(self.page, '</h1>', '</h2>'))
+        for url in urls[1:]:
+            url = gutils.before(url, '"')
             if string.find(url, '.jpg') >= 0:
                 self.image_url = url
                 break
@@ -54,10 +54,10 @@
         self.o_title = ""
         self.o_title = gutils.trim(self.page,"Titre original : <i>","</i>")
         if (self.o_title==''):
-            self.o_title = string.replace(gutils.trim(self.page, '<title>', '</title>'), ' - Allocine.fr', '')
+            self.o_title = string.replace(gutils.trim(self.page, '<title>', '</title>'), u' - AlloCin?', '')
 
     def get_title(self):
-        self.title = string.replace(gutils.trim(self.page, '<title>', '</title>'), ' - Allocine.fr', '')
+        self.title = string.replace(gutils.trim(self.page, '<title>', '</title>'), u' - AlloCin?', '')
 
     def get_director(self):
         self.director = gutils.trim(self.page, u'R?alis? par ', '</a></h3>')
@@ -82,9 +82,9 @@
         self.cast = ""
         casts = gutils.trim(self.page_cast, 'Acteurs', '</table>')
         parts = string.split(casts, '<td ')
-        for index in range(1, len(parts) - 1, 2):
-            character = gutils.after(parts[index], '>')
-            actor = gutils.after(parts[index + 1], '>')
+        for index in range(1, len(parts) - 1, 3):
+            character = gutils.after(parts[index + 1], '>')
+            actor = gutils.after(parts[index + 2], '>')
             self.cast = self.cast + gutils.clean(actor) + _(' as ') + gutils.clean(character) + '\n'
 
     def get_classification(self):
@@ -139,4 +139,61 @@
             for index in range(1, len(elements), 1):
                 element = elements[index]
                 self.ids.append(gutils.before(element, '.'))
-                self.titles.append(gutils.strip_tags(gutils.convert_entities(gutils.trim(element, '>', '</a>'))))
+                title = gutils.strip_tags(gutils.convert_entities(gutils.trim(element, '>', '</a>')))
+                year = gutils.clean(gutils.trim(element, '</h4>', '</h4>'))
+                if year:
+                    self.titles.append(title + ' (' + year + ')')
+                else:
+                    self.titles.append(title)
+
+#
+# Plugin Test
+#
+class SearchPluginTest(SearchPlugin):
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
+    #
+    test_configuration = {
+        'Le Prix ? payer' : [ 4, 4 ],
+    }
+
+class PluginTest:
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> dict { arribute -> value } }
+    #
+    # value: * True/False if attribute only should be tested for any value
+    #        * or the expected value
+    #
+    test_configuration = {
+        '110585' : { 
+            'title'               : u'Le Prix ? payer',
+            'o_title'             : u'Le Prix ? payer',
+            'director'            : u'Alexandra Lecl?re',
+            'plot'                : True,
+            'cast'                : u'Christian Clavier' + _(' as ') + 'Jean-Pierre M?nard\n\
+Nathalie Baye' + _(' as ') + 'Odile M?nard\n\
+G?rard Lanvin' + _(' as ') + 'Richard\n\
+G?raldine Pailhas' + _(' as ') + 'Caroline\n\
+Patrick Chesnais' + _(' as ') + 'Gr?goire l\'amant\n\
+Ana?s Demoustier' + _(' as ') + 'Justine\n\
+Maud Buquet' + _(' as ') + 'la prostitu?e\n\
+Francis Leplay' + _(' as ') + 'l\'agent immobilier',
+            'country'             : u'fran?ais',
+            'genre'               : u'Com?die',
+            'classification'      : False,
+            'studio'              : False,
+            'o_site'              : False,
+            'site'                : 'http://www.allocine.fr/film/fichefilm_gen_cfilm=110585.html',
+            'trailer'             : 'http://www.allocine.fr/film/video_gen_cfilm=110585.html',
+            'year'                : 2007,
+            'notes'               : False,
+            'runtime'             : 95,
+            'image'               : True,
+            'rating'              : 5,
+            'cameraman'           : u'Jean-Fran?ois Robin',
+            'screenplay'          : u'Alexandra Lecl?re',
+            'barcode'             : False
+        },
+    }

Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -396,7 +396,7 @@
             'cast'                : 'Sylvester Stallone\n\
 Antonio Traver\n\
 Burt Young',
-            'country'             : False,
+            'country'             : 'USA',
             'genre'               : 'Drama, Drama',
             'classification'      : 'Freigegeben ab 12 Jahren',
             'studio'              : 'MGM Home Entertainment GmbH (dt.)',
@@ -418,7 +418,7 @@
             'cast'                : 'Lino Ventura\n\
 Fran?oise Fabian\n\
 Charles G?rard',
-            'country'             : 'Frankreich',
+            'country'             : 'Frankreich, Italien',
             'genre'               : 'Krimikom?die, Drama, General AAS, Drama, Kom?die, Krimi',
             'classification'      : 'Freigegeben ab 12 Jahren',
             'studio'              : 'Warner Home Video - DVD',

Modified: trunk/lib/plugins/movie/PluginMovieCineMovies.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCineMovies.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieCineMovies.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -71,7 +71,7 @@
         self.genre = gutils.trim(self.page, 'Genre :', '</tr>')
 
     def get_cast(self):
-        self.cast = gutils.trim(self.page_cast, 'diens</b> :', '</table>')
+        self.cast = gutils.trim(self.page_cast, 'diens</h2> :', '</table>')
         self.cast = self.cast.replace('\n', '')
         self.cast = self.cast.replace('</tr>', '\n')
         self.cast = gutils.clean(self.cast)
@@ -101,7 +101,7 @@
         self.rating = gutils.clean(gutils.trim(self.page, '<div id=scoree>', '</div>'))
 
     def get_screenplay(self):
-        self.screenplay = gutils.clean(gutils.trim(self.page_cast, 'nario de</b> :', '</a>'))
+        self.screenplay = gutils.clean(gutils.trim(self.page_cast, 'nario de</h2> :', '</a>'))
 
 
 class SearchPlugin(movie.SearchMovie):

Modified: trunk/lib/plugins/movie/PluginMovieFilmDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmDb.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieFilmDb.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -201,64 +201,64 @@
             'plot'                : True,
             'cast'                : 'Dolph Lundgren\n\
 Sylvester Stallone\n\
+Mike Tyson\n\
 Carl Weathers\n\
-Mike Tyson\n\
 Burt Young\n\
 Talia Shire\n\
 Burgess Meredith\n\
-Tony Burton\n\
 Milo Ventimiglia\n\
 Mr. T\n\
+Tony Burton\n\
+Geraldine Hughes\n\
 Frank Stallone\n\
-Geraldine Hughes\n\
 Michael Buffer\n\
 Lahmard J. Tate\n\
 Don Sherman\n\
+Gunnar Peterson\n\
 LeRoy Neiman\n\
-Robert Michael Kelly\n\
-Gunnar Peterson\n\
+Tobias Segal\n\
 Stu Nahan\n\
-Tobias Segal\n\
 Skip Bayless\n\
+Robert Michael Kelly\n\
 Ricky Cavazos\n\
-Marc Ratner\n\
 Rick Buchborn\n\
-Jim Lampley\n\
+Jody Giambelluca\n\
+Yahya\n\
+Charles Johnson\n\
+Barney Fitzpatrick\n\
 Henry G. Sanders\n\
-Charles Johnson\n\
 Fran Pultro\n\
-Angela Boyd\n\
-Yahya\n\
+Dana Jacobson\n\
 Tim Carr\n\
 Joe Cortez\n\
+Jim Lampley\n\
+Max Kellerman\n\
+Ana Gerena\n\
+Marc Ratner\n\
+Jack Lazzarado\n\
 Carter Mitchell\n\
+Angela Boyd\n\
 Maureen Schilling\n\
-Jody Giambelluca\n\
-Barney Fitzpatrick\n\
+James Binns\n\
 Antonio Tarver\n\
-Ana Gerena\n\
 A.J. Benza\n\
-James Binns\n\
 Nick Baker\n\
-Jack Lazzarado\n\
+Louis Giansante\n\
 Matt Frack\n\
-Louis Giansante\n\
-Kevin King Templeton\n\
-Dana Jacobson\n\
 Larry Merchant\n\
-Woody Paige\n\
-Brian Kenny\n\
 Paul Dion Monte\n\
+Bernard Fern?ndez\n\
 Anthony Lato Jr.\n\
+Kevin King Templeton\n\
+Brian Kenny\n\
+Woody Paige\n\
+Lou DiBella\n\
 Pedro Lovell\n\
-Max Kellerman\n\
 Bert Randolph Sugar\n\
 Vinod Kumar\n\
-Lou DiBella\n\
-Bernard Fern?ndez\n\
+Jay Crawford\n\
+Gary Compton\n\
 Johnnie Hobbs Jr.\n\
-Gary Compton\n\
-Jay Crawford\n\
 James Francis Kelly III',
             'country'             : 'USA',
             'genre'               : 'Drama',

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -133,8 +133,8 @@
         self.cast = string.replace(self.cast, ' ... ', _(' as ').encode('utf8'))
         self.cast = string.replace(self.cast, '...', _(' as ').encode('utf8'))
         self.cast = string.replace(self.cast, '</tr><tr>', "\n")
-        self.cast = string.replace(self.cast, '</tr><tr class="even">', "\n")
-        self.cast = string.replace(self.cast, '</tr><tr class="odd">', "\n")
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
         self.cast = self.__before_more(self.cast)
         self.cast = re.sub('[ ]+', ' ', self.cast)
 
@@ -265,7 +265,7 @@
     # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
     #
     test_configuration = {
-        'Rocky Balboa'         : [ 17, 17 ],
+        'Rocky Balboa'         : [ 16, 16 ],
         'Ein gl?ckliches Jahr' : [  6,  6 ]
     }
 
@@ -354,6 +354,7 @@
 Jacqueline Olivia' + _(' as ') + 'M?dchen (nicht im Abspann)\n\
 Brian H. Scott' + _(' as ') + 'Ringside Cop #1 (nicht im Abspann)\n\
 Jackie Sereni' + _(' as ') + 'Girl on Steps (nicht im Abspann)\n\
+Keyon Smith' + _(' as ') + 'Boxing Spectator (nicht im Abspann)\n\
 Frank Traynor' + _(' as ') + 'Rechtsanwalt (nicht im Abspann)',
             'country'           : 'USA',
             'genre'             : 'Action | Sport',
@@ -368,7 +369,7 @@
 + _('Color') + ': Farbe',
             'runtime'           : 102,
             'image'             : True,
-            'rating'            : 8
+            'rating'            : 7
         },
         '0069815' : { 
             'title'             : 'Ein gl?ckliches Jahr',

Modified: trunk/lib/plugins/movie/PluginMovieMovieMeter.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieMovieMeter.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieMovieMeter.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -34,7 +34,7 @@
 plugin_author_email = 'griffith-private at lists.berlios.de'
 plugin_version      = '1.0'
 # API key created for Griffith
-moviemeter_api_key  = 'qs1bqrpqf89e9uht5b0q01y0xstcp3w0'
+moviemeter_api_key  = '6h70thfmkwhq55hst69gnr65ckbaqu6h'
 
 #
 # XMLRPC through proxy if necessary

Modified: trunk/lib/plugins/movie/PluginMovieOFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOFDb.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieOFDb.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -304,7 +304,7 @@
 Bong Tae-gyu' + _(' as ') + 'Cameo\n\
 Im Ha-ryong' + _(' as ') + 'Cameo\n\
 Yoon Do-hyeon\n\
-Lee Choon-yeon\n\
+Lee Choon-yeon' + _(' as ') + 'Cameo\n\
 Kim Yeong-in\n\
 Park Yoon-bae\n\
 Lee Won\n\

Modified: trunk/lib/plugins/movie/PluginMovieZelluloid.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieZelluloid.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/plugins/movie/PluginMovieZelluloid.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -59,7 +59,7 @@
         self.title = gutils.trim(self.page, '<title>', '|')
 
     def get_director(self):
-        self.director = gutils.trim(self.detail_page, 'Regie', '</A>')
+        self.director = gutils.trim(self.detail_page, 'Regie', '</a>')
 
     def get_plot(self):
         self.plot = gutils.trim(self.page, '<DIV CLASS=bigtext>', '</DIV>')
@@ -88,8 +88,9 @@
                 delimiter = ', '
 
     def get_cast(self):
-        self.cast = gutils.trim(self.detail_page, 'alt="Besetzung"', '<TD COLSPAN=')
-        self.cast = self.cast.replace('<A HREF=', '--flip--' + '<A HREF=')
+        self.cast = gutils.trim(self.detail_page, 'alt="Besetzung"', '<img')
+        self.cast = self.cast.replace('<a href=', '--flip--' + '<a href=')
+        self.cast = self.cast.replace('</td></tr>', '\n')
         self.cast = gutils.strip_tags(self.cast)
         self.cast = gutils.after(self.cast, '>')
         elements = self.cast.split('\n')
@@ -107,11 +108,12 @@
         self.classification = re.sub('[,<].*', '', self.classification)
 
     def get_studio(self):
-        self.studio = gutils.strip_tags(gutils.trim(self.detail_page, 'alt="Produktion"', '&nbsp;'))
+        self.studio = gutils.trim(self.detail_page, 'alt="Produktion"', '<img')
         if self.studio == '':
             self.studio = gutils.trim(self.detail_page, 'alt="Produktion"', '</TABLE>')
         self.studio = gutils.after(self.studio, '>')
-        self.studio = self.studio.replace('\n', ', ')
+        self.studio = self.studio.replace('<tr>', ', ')
+        self.studio = gutils.strip_tags(self.studio)
         self.studio = re.sub('((^, )|(, $))', '', self.studio)
         
     def get_o_site(self):
@@ -147,6 +149,9 @@
     def get_notes(self):
         self.notes = ""
 
+    def get_screenplay(self):
+        self.screenplay = gutils.after(gutils.trim(self.detail_page, '>Drehbuch<', '</a>'), '>')
+
 class SearchPlugin(movie.SearchMovie):
 
     def __init__(self):
@@ -221,7 +226,8 @@
             'notes'             : False,
             'runtime'           : 102,
             'image'             : True,
-            'rating'            : 8.0
+            'rating'            : 8.0,
+            'screenplay'        : 'Sylvester Stallone'
         },
         '6342' : { 
             'title'             : 'Die wilden H?hner',
@@ -264,6 +270,7 @@
             'notes'             : False,
             'runtime'           : 109,
             'image'             : True,
-            'rating'            : 8.0
+            'rating'            : 8.0,
+            'screenplay'        : 'G?zin Kar, Uschi Reich'
         }
     }

Modified: trunk/lib/test_movieplugins.py
===================================================================
--- trunk/lib/test_movieplugins.py	2009-07-06 20:47:27 UTC (rev 1254)
+++ trunk/lib/test_movieplugins.py	2009-07-06 23:39:05 UTC (rev 1255)
@@ -67,6 +67,7 @@
 #
 class PluginTester:
     test_plugins = [
+        'PluginMovieAllocine',
         'PluginMovieAllMovie',
         'PluginMovieAmazon',
         'PluginMovieCinematografo',



From mikej06 at mail.berlios.de  Wed Jul  8 18:24:11 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Wed, 8 Jul 2009 18:24:11 +0200
Subject: [Griffith-svn] r1256 - trunk
Message-ID: <200907081624.n68GOBj0031333@sheep.berlios.de>

Author: mikej06
Date: 2009-07-08 18:24:03 +0200 (Wed, 08 Jul 2009)
New Revision: 1256

Modified:
   trunk/winsetup.py
Log:
new dependency to xmlrpclib

Modified: trunk/winsetup.py
===================================================================
--- trunk/winsetup.py	2009-07-06 23:39:05 UTC (rev 1255)
+++ trunk/winsetup.py	2009-07-08 16:24:03 UTC (rev 1256)
@@ -45,7 +45,7 @@
 
 opts = {
     "py2exe": {
-        "includes": "pygtk,cairo,pangocairo,gobject,cgi,PIL,pysqlite2,pysqlite2.*,pango,atk,gobject,tempfile,csv,xml.dom,xml.dom.ext,xml.dom.minidom,xml.sax,threading,htmlentitydefs,sqlalchemy,sqlalchemy.*,sqlalchemy.databases.*,sqlalchemy.engine.*,sqlalchemy.ext.*,sqlalchemy.orm.*,sqlalchemy.sql.*,zipfile,webbrowser,shutil,reportlab,reportlab.pdfgen,reportlab.pdfgen.canvas,reportlab.platypus,reportlab.pdfbase.ttfonts,smtplib,win32com,platform,winshell,psycopg2,MySQLdb,chardet,gzip,commands,encodings,encodings.*,ConfigParser,gtk.glade",
+        "includes": "pygtk,cairo,pangocairo,gobject,cgi,PIL,pysqlite2,pysqlite2.*,pango,atk,gobject,tempfile,csv,xml.dom,xml.dom.ext,xml.dom.minidom,xml.sax,threading,htmlentitydefs,sqlalchemy,sqlalchemy.*,sqlalchemy.databases.*,sqlalchemy.engine.*,sqlalchemy.ext.*,sqlalchemy.orm.*,sqlalchemy.sql.*,zipfile,webbrowser,shutil,reportlab,reportlab.pdfgen,reportlab.pdfgen.canvas,reportlab.platypus,reportlab.pdfbase.ttfonts,smtplib,win32com,platform,winshell,psycopg2,MySQLdb,chardet,gzip,commands,encodings,encodings.*,ConfigParser,gtk.glade,xmlrpclib",
         "optimize": 2,
         "dist_dir": "dist",
     }



From mikej06 at mail.berlios.de  Fri Jul 10 23:14:43 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 10 Jul 2009 23:14:43 +0200
Subject: [Griffith-svn] r1257 - in trunk: . lib/plugins/export
Message-ID: <200907102114.n6ALEhfT022523@sheep.berlios.de>

Author: mikej06
Date: 2009-07-10 23:14:08 +0200 (Fri, 10 Jul 2009)
New Revision: 1257

Added:
   trunk/lib/plugins/export/PluginExportAMC.py
   trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py
   trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py
   trunk/lib/plugins/export/PluginExportGCstar.py
Modified:
   trunk/ChangeLog
   trunk/lib/plugins/export/__init__.py
Log:
new export plugins: Ant Movie Catalog, GCstar, DVD Profiler XML Export V2 and V3

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/ChangeLog	2009-07-10 21:14:08 UTC (rev 1257)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-10  Michael Jahn
+	* new export plugins: Ant Movie Catalog, GCstar, DVD Profiler XML Export V2 and V3
+
 2009-07-07  Michael Jahn
 	* updated Allocine, CineMovies, IMDb-de, MovieMeter, Zelluloid plugin
 

Added: trunk/lib/plugins/export/PluginExportAMC.py
===================================================================
--- trunk/lib/plugins/export/PluginExportAMC.py	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/lib/plugins/export/PluginExportAMC.py	2009-07-10 21:14:08 UTC (rev 1257)
@@ -0,0 +1,167 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2009 Michael Jahn
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import xml.dom.minidom
+import xml.dom.ext
+import datetime
+from plugins.export import XmlExportBase
+
+class ExportPlugin(XmlExportBase):
+    plugin_name         = "Ant Movie Catalog Database XML Export"
+    plugin_description  = _("Full Ant Movie Catalog database xml export plugin")
+    plugin_author       = "Michael Jahn"
+    plugin_author_email = "griffith-private at lists.berlios.de"
+    plugin_version      = "1.0"
+
+    def __init__(self, database, locations, parent_window, search_conditions, config):
+        XmlExportBase.__init__(self, database, locations, parent_window, search_conditions, config)
+        self.config_section = 'export-antmovie'
+        self.export_name    = 'Ant Movie Catalog database export'
+        self.filename       = 'ant-movie-catalog.xml'
+        self.encoding       = 'iso-8859-1'
+
+    def export_to_document(self, document, mainelement):
+        collelement = document.createElement('AntMovieCatalog')
+        collelement.setAttribute('Format', '35')
+        collelement.setAttribute('Version', '3.5.1 (2007-09-22)')
+        collelement.setAttribute('Date', datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S'))
+        document.appendChild(collelement)
+        comment = document.createComment('Griffith Export in Ant Movie Catalog database format')
+        document.insertBefore(comment, collelement)
+        catalogelement = document.createElement('Catalog')
+        collelement.appendChild(catalogelement)
+        propertieselement = document.createElement('Properties')
+        catalogelement.appendChild(propertieselement)
+        contentselement = document.createElement('Contents')
+        catalogelement.appendChild(contentselement)
+        XmlExportBase.export_to_document(self, document, contentselement)
+
+    def process_movie(self, document, mainelement, movie, keys):
+        # create node
+        itemelement = document.createElement('Movie')
+        itemelement.setAttribute('Checked', 'False')
+        mainelement.appendChild(itemelement)
+        XmlExportBase.process_movie(self, document, itemelement, movie, keys)
+
+    def process_movie_value(self, document, dvdelement, key, value):
+        if key == 'movies_number':
+            dvdelement.setAttribute('Number', value)
+        elif key == 'movies_loaned':
+            pass
+        elif key == 'movies_seen':
+            dvdelement.setAttribute('Checked', value)
+        elif key == 'movies_rating':
+            dvdelement.setAttribute('Rating', value)
+        elif key == 'movies_color':             # SmallInteger
+            pass
+        elif key == 'movies_cond':              # SmallInteger
+            pass
+        elif key == 'movies_layers':            # SmallInteger
+            pass
+        elif key == 'movies_media_num':         # SmallInteger
+            dvdelement.setAttribute('Disks', value)
+        elif key == 'movies_runtime':           # Integer
+            dvdelement.setAttribute('Length', value)
+        elif key == 'movies_year':              # year
+            dvdelement.setAttribute('Year', value)
+        elif key == 'movies_o_title':           # VARCHAR
+            dvdelement.setAttribute('OriginalTitle', value)
+            dvdelement.setAttribute('FormattedTitle', value)
+        elif key == 'movies_title':             # VARCHAR
+            dvdelement.setAttribute('TranslatedTitle', value)
+        elif key == 'movies_director':          # VARCHAR
+            dvdelement.setAttribute('Director', value)
+        elif key == 'movies_o_site':            # VARCHAR
+            pass
+        elif key == 'movies_site':              # VARCHAR
+            dvdelement.setAttribute('URL', value)
+        elif key == 'movies_trailer':           # VARCHAR
+            pass
+        elif key == 'movies_country':           # VARCHAR
+            dvdelement.setAttribute('Country', value)
+        elif key == 'movies_genre':             # VARCHAR
+            dvdelement.setAttribute('Category', value.replace('\n', ''))
+        elif key == 'movies_region':            # SmallInteger
+            pass
+        elif key == 'movies_studio':            # VARCHAR
+            pass
+        elif key == 'movies_classification':    # VARCHAR
+            pass
+        elif key == 'movies_cast':              # VARCHAR
+            if len(value.strip()) > 0:
+                actors = value.split('\n')
+                actorsstring = ''
+                delim = ''
+                for actor in actors:
+                    actorsplit = actor.split(_(' as '))
+                    actornames = actorsplit[0]
+                    if len(actorsplit) > 1:
+                        actorsstring += delim + actornames.strip() + ' (' + actorsplit[1].strip() + ')'
+                    else:
+                        actorsstring += delim + actornames.strip()
+                    delim = ', '
+                dvdelement.setAttribute('Actors', actorsstring)
+        elif key == 'movies_plot':              # VARCHAR
+            dvdelement.setAttribute('Description', value.replace('\n', '|'))
+        elif key == 'movies_notes':             # VARCHAR
+            dvdelement.setAttribute('Comments', value.replace('\n', '|'))
+        elif key == 'vcodecs_name':             # VARCHAR
+            dvdelement.setAttribute('VideoFormat', value)
+
+    def process_movie_image(self, document, dvdelement, imagedata, imagemd5sum):
+        if imagemd5sum and imagedata:
+            dvdelement.setAttribute('Picture', self.filename + '_pictures/' + imagemd5sum + '.jpg')
+            self.save_image_to_file(imagedata, imagemd5sum, self.filename + '_pictures/')
+
+    def process_movie_tags(self, document, movieelement, movie):
+        pass
+
+    def process_acodecs(self, document, movieelement, acodecsquery):
+        acodecsstring = ''
+        delim = ''
+        codecsused = []
+        for acodec in acodecsquery.execute().fetchall():
+            if acodec['name'] not in codecsused:
+                acodecsstring += delim + self.convert_value(acodec['name'])
+                delim = ', '
+                codecsused.append(acodec['name'])
+        movieelement.setAttribute('AudioFormat', acodecsstring)
+        
+    def process_languages(self, document, movieelement, languagesquery):
+        languagesstring = ''
+        delim = ''
+        languagesused = []
+        for language in languagesquery.execute().fetchall():
+            if language['languages_name'] not in languagesused:
+                languagesstring += delim + self.convert_value(language['languages_name'])
+                delim = ', '
+                languagesused.append(language['languages_name'])
+        movieelement.setAttribute('Languages', languagesstring)
+
+    def process_subtitles(self, document, movieelement, subtitlesquery):
+        subtitlesstring = ''
+        delim = ''
+        for subtitle in subtitlesquery.execute().fetchall():
+            subtitlesstring += delim + self.convert_value(subtitle['name'])
+            delim = ', '
+        movieelement.setAttribute('Subtitles', subtitlesstring)

Added: trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py
===================================================================
--- trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py	2009-07-10 21:14:08 UTC (rev 1257)
@@ -0,0 +1,252 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2009 Michael Jahn
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import xml.dom.minidom
+import xml.dom.ext
+from plugins.export import XmlExportBase
+
+class ExportPlugin(XmlExportBase):
+    plugin_name         = "DVD Profiler XML Export"
+    plugin_description  = _("Full DVD Profiler XML Export V2 plugin")
+    plugin_author       = "Michael Jahn"
+    plugin_author_email = "griffith-private at lists.berlios.de"
+    plugin_version      = "1.0"
+
+    def __init__(self, database, locations, parent_window, search_conditions, config):
+        XmlExportBase.__init__(self, database, locations, parent_window, search_conditions, config)
+        self.config_section = 'export-dvdprofilerxml'
+        self.export_name    = 'DVD Profiler XML Export V2'
+        self.filename       = 'CollectionV2.xml'
+
+    def export_to_document(self, document, mainelement):
+        collelement = document.createElement('Collection')
+        document.appendChild(collelement)
+        comment = document.createComment('Griffith Export in DVD Profiler Collection Export Format V2')
+        document.insertBefore(comment, collelement)
+        XmlExportBase.export_to_document(self, document, collelement)
+
+    def process_movie(self, document, mainelement, movie, keys):
+        # create node
+        dvdelement = document.createElement('DVD')
+        mainelement.appendChild(dvdelement)
+        tmpelem = document.createElement('ProfileTimestamp')
+        dvdelement.appendChild(tmpelem)
+        tmpelem = document.createElement('ID')
+        dvdelement.appendChild(tmpelem)
+        tmpelem = document.createElement('UPC')
+        dvdelement.appendChild(tmpelem)
+        XmlExportBase.process_movie(self, document, dvdelement, movie, keys)
+
+    def process_movie_value(self, document, dvdelement, key, value):
+        if key == 'movies_number':
+            elem = document.createElement('CollectionNumber')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+            tmpelem = document.createElement('CollectionType')
+            dvdelement.appendChild(tmpelem)
+            t = document.createTextNode('Owned')
+            tmpelem.appendChild(t)
+        elif key == 'movies_loaned':
+            loaninfoelem = document.createElement('LoanInfo')
+            dvdelement.appendChild(loaninfoelem)
+        elif key == 'movies_seen':
+            pass
+        elif key == 'movies_rating':
+            reviewelem = document.createElement('Review')
+            dvdelement.appendChild(reviewelem)
+            reviewfilmelem = document.createElement('ReviewFilm')
+            reviewelem.appendChild(reviewfilmelem)
+            t = document.createTextNode(value)
+            reviewfilmelem.appendChild(t)
+            reviewvideoelem = document.createElement('ReviewVideo')
+            reviewelem.appendChild(reviewvideoelem)
+            t = document.createTextNode('0')
+            reviewvideoelem.appendChild(t)
+            reviewaudioelem = document.createElement('ReviewAudio')
+            reviewelem.appendChild(reviewaudioelem)
+            t = document.createTextNode('0')
+            reviewaudioelem.appendChild(t)
+            reviewextraselem = document.createElement('ReviewExtras')
+            reviewelem.appendChild(reviewextraselem)
+            t = document.createTextNode('0')
+            reviewextraselem.appendChild(t)
+        elif key == 'movies_color':             # SmallInteger
+            pass
+        elif key == 'movies_cond':              # SmallInteger
+            pass
+        elif key == 'movies_layers':            # SmallInteger
+            pass
+        elif key == 'movies_media_num':         # SmallInteger
+            pass
+        elif key == 'movies_runtime':           # Integer
+            elem = document.createElement('RunningTime')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_year':              # year
+            elem = document.createElement('ProductionYear')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_o_title':           # VARCHAR
+            elem = document.createElement('SortTitle')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_title':             # VARCHAR
+            elem = document.createElement('Title')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_director':          # VARCHAR
+            directors = value.split(',')
+            directorselem = document.createElement('Credits')
+            dvdelement.appendChild(directorselem)
+            for director in directors:
+                directorsplit = director.split(' ')
+                firstname = ''
+                lastname = ''
+                if len(directorsplit) > 1:
+                    firstname = directorsplit[0]
+                    directorsplit.pop(0)
+                    for directorname in directorsplit:
+                        lastname = lastname + directorname + ' '
+                directorelem = document.createElement('Credit')
+                directorselem.appendChild(directorelem)
+                fnameelem = document.createElement('FirstName')
+                directorelem.appendChild(fnameelem)
+                t = document.createTextNode(firstname)
+                fnameelem.appendChild(t)
+                lnameelem = document.createElement('LastName')
+                directorelem.appendChild(lnameelem)
+                t = document.createTextNode(lastname)
+                lnameelem.appendChild(t)
+                credittypeelem = document.createElement('CreditType')
+                directorelem.appendChild(credittypeelem)
+                t = document.createTextNode('Direction')
+                credittypeelem.appendChild(t)
+                credittypeelem = document.createElement('CreditSubtype')
+                directorelem.appendChild(credittypeelem)
+                t = document.createTextNode('Director')
+                credittypeelem.appendChild(t)
+        elif key == 'movies_o_site':            # VARCHAR
+            pass
+        elif key == 'movies_site':              # VARCHAR
+            pass
+        elif key == 'movies_trailer':           # VARCHAR
+            pass
+        elif key == 'movies_country':           # VARCHAR
+            elem = document.createElement('CountryOfOrigin')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_genre':             # VARCHAR
+            genres = value.split(',')
+            genreselem = document.createElement('Genres')
+            dvdelement.appendChild(genreselem)
+            for genre in genres:
+                genreelem = document.createElement('Genre')
+                genreselem.appendChild(genreelem)
+                t = document.createTextNode(genre.strip())
+                genreelem.appendChild(t)
+        elif key == 'movies_region':            # SmallInteger
+            regionselem = document.createElement('Regions')
+            dvdelement.appendChild(regionselem)
+            regionelem = document.createElement('Region')
+            regionselem.appendChild(regionelem)
+            t = document.createTextNode(value)
+            regionelem.appendChild(t)
+        elif key == 'movies_image':             # VARCHAR
+            pass
+        elif key == 'movies_studio':            # VARCHAR
+            studios = value.split(',')
+            studioselem = document.createElement('Studios')
+            dvdelement.appendChild(studioselem)
+            for studio in studios:
+                studioelem = document.createElement('Studio')
+                studioselem.appendChild(studioelem)
+                t = document.createTextNode(studio.strip())
+                studioelem.appendChild(t)
+        elif key == 'movies_classification':    # VARCHAR
+            elem = document.createElement('Rating')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_cast':              # VARCHAR
+            actors = value.split('\n')
+            actorselem = document.createElement('Actors')
+            dvdelement.appendChild(actorselem)
+            for actor in actors:
+                actorsplit = actor.split(_(' as '))
+                actornames = actorsplit[0].split(' ')
+                role = ''
+                firstname = ''
+                lastname = ''
+                if len(actorsplit) > 1:
+                    role = actorsplit[1]
+                if len(actornames) > 1:
+                    firstname = actornames[0]
+                    actornames.pop(0)
+                    for actorname in actornames:
+                        lastname = lastname + actorname + ' '
+                actorelem = document.createElement('Actor')
+                actorselem.appendChild(actorelem)
+                fnameelem = document.createElement('FirstName')
+                actorelem.appendChild(fnameelem)
+                t = document.createTextNode(firstname)
+                fnameelem.appendChild(t)
+                lnameelem = document.createElement('LastName')
+                actorelem.appendChild(lnameelem)
+                t = document.createTextNode(lastname)
+                lnameelem.appendChild(t)
+                roleelem = document.createElement('Role')
+                actorelem.appendChild(roleelem)
+                t = document.createTextNode(role)
+                roleelem.appendChild(t)
+        elif key == 'movies_plot':              # VARCHAR
+            elem = document.createElement('Overview')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_notes':             # VARCHAR
+            elem = document.createElement('Notes')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+
+    def process_tags(self, document, dvdelement, tagsquery):
+        tagselem = document.createElement('Tags')
+        dvdelement.appendChild(tagselem)
+        for tag in tagsquery.execute().fetchall():
+            value = self.convert_value(tag['name'])
+            tagelem = document.createElement('Tag')
+            tagselem.appendChild(tagelem)
+            nameelem = document.createElement('Name')
+            tagelem.appendChild(nameelem)
+            t = document.createTextNode(value)
+            nameelem.appendChild(t)
+            fnameelem = document.createElement('FullyQualifiedName')
+            tagelem.appendChild(fnameelem)
+            t = document.createTextNode(value)
+            fnameelem.appendChild(t)

Added: trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py
===================================================================
--- trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py	2009-07-10 21:14:08 UTC (rev 1257)
@@ -0,0 +1,224 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2009 Michael Jahn
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import xml.dom.minidom
+import xml.dom.ext
+from plugins.export import XmlExportBase
+
+class ExportPlugin(XmlExportBase):
+    plugin_name         = "DVD Profiler XML Export"
+    plugin_description  = _("Full DVD Profiler XML Export V3 plugin")
+    plugin_author       = "Michael Jahn"
+    plugin_author_email = "griffith-private at lists.berlios.de"
+    plugin_version      = "1.0"
+
+    def __init__(self, database, locations, parent_window, search_conditions, config):
+        XmlExportBase.__init__(self, database, locations, parent_window, search_conditions, config)
+        self.config_section = 'export-dvdprofilerxml'
+        self.export_name    = 'DVD Profiler XML Export V3'
+        self.filename       = 'CollectionV3.xml'
+
+    def export_to_document(self, document, mainelement):
+        collelement = document.createElement('Collection')
+        document.appendChild(collelement)
+        comment = document.createComment('Griffith Export in DVD Profiler Collection Export Format V3')
+        document.insertBefore(comment, collelement)
+        XmlExportBase.export_to_document(self, document, collelement)
+
+    def process_movie(self, document, mainelement, movie, keys):
+        # create node
+        dvdelement = document.createElement('DVD')
+        mainelement.appendChild(dvdelement)
+        tmpelem = document.createElement('ProfileTimestamp')
+        dvdelement.appendChild(tmpelem)
+        tmpelem = document.createElement('ID')
+        dvdelement.appendChild(tmpelem)
+        tmpelem = document.createElement('UPC')
+        dvdelement.appendChild(tmpelem)
+        XmlExportBase.process_movie(self, document, dvdelement, movie, keys)
+
+    def process_movie_value(self, document, dvdelement, key, value):
+        if key == 'movies_number':
+            elem = document.createElement('CollectionNumber')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+            tmpelem = document.createElement('CollectionType')
+            dvdelement.appendChild(tmpelem)
+            t = document.createTextNode('Owned')
+            tmpelem.appendChild(t)
+        elif key == 'movies_loaned':
+            loaninfoelem = document.createElement('LoanInfo')
+            dvdelement.appendChild(loaninfoelem)
+            loanedelem = document.createElement('Loaned')
+            loaninfoelem.appendChild(loanedelem)
+            t = document.createTextNode(value)
+            loanedelem.appendChild(t)
+        elif key == 'movies_seen':
+            pass
+        elif key == 'movies_rating':
+            reviewelem = document.createElement('Review')
+            dvdelement.appendChild(reviewelem)
+            reviewelem.setAttribute('Film', value)
+            reviewelem.setAttribute('Video', '0')
+            reviewelem.setAttribute('Audio', '0')
+            reviewelem.setAttribute('Extras', '0')
+        elif key == 'movies_color':             # SmallInteger
+            pass
+        elif key == 'movies_cond':              # SmallInteger
+            pass
+        elif key == 'movies_layers':            # SmallInteger
+            pass
+        elif key == 'movies_media_num':         # SmallInteger
+            pass
+        elif key == 'movies_runtime':           # Integer
+            elem = document.createElement('RunningTime')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_year':              # year
+            elem = document.createElement('ProductionYear')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_o_title':           # VARCHAR
+            elem = document.createElement('OriginalTitle')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_title':             # VARCHAR
+            elem = document.createElement('Title')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_director':          # VARCHAR
+            directors = value.split(',')
+            directorselem = document.createElement('Credits')
+            dvdelement.appendChild(directorselem)
+            for director in directors:
+                directorsplit = director.split(' ')
+                firstname = ''
+                lastname = ''
+                if len(directorsplit) > 1:
+                    firstname = directorsplit[0]
+                    directorsplit.pop(0)
+                    for directorname in directorsplit:
+                        lastname = lastname + directorname + ' '
+                directorelem = document.createElement('Credit')
+                directorselem.appendChild(directorelem)
+                directorelem.setAttribute('FirstName', firstname)
+                directorelem.setAttribute('LastName', lastname)
+                directorelem.setAttribute('BirthYear', '0')
+                directorelem.setAttribute('CreditType', 'Direction')
+                directorelem.setAttribute('CreditSubtype', 'Director')
+                directorelem.setAttribute('CreditedAs', '')
+        elif key == 'movies_o_site':            # VARCHAR
+            pass
+        elif key == 'movies_site':              # VARCHAR
+            pass
+        elif key == 'movies_trailer':           # VARCHAR
+            pass
+        elif key == 'movies_country':           # VARCHAR
+            elem = document.createElement('CountryOfOrigin')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_genre':             # VARCHAR
+            genres = value.split(',')
+            genreselem = document.createElement('Genres')
+            dvdelement.appendChild(genreselem)
+            for genre in genres:
+                genreelem = document.createElement('Genre')
+                genreselem.appendChild(genreelem)
+                t = document.createTextNode(genre.strip())
+                genreelem.appendChild(t)
+        elif key == 'movies_region':            # SmallInteger
+            regionselem = document.createElement('Regions')
+            dvdelement.appendChild(regionselem)
+            regionelem = document.createElement('Region')
+            regionselem.appendChild(regionelem)
+            t = document.createTextNode(value)
+            regionelem.appendChild(t)
+        elif key == 'movies_image':             # VARCHAR
+            pass
+        elif key == 'movies_studio':            # VARCHAR
+            studios = value.split(',')
+            studioselem = document.createElement('Studios')
+            dvdelement.appendChild(studioselem)
+            for studio in studios:
+                studioelem = document.createElement('Studio')
+                studioselem.appendChild(studioelem)
+                t = document.createTextNode(studio.strip())
+                studioelem.appendChild(t)
+        elif key == 'movies_classification':    # VARCHAR
+            elem = document.createElement('Rating')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_cast':              # VARCHAR
+            actors = value.split('\n')
+            actorselem = document.createElement('Actors')
+            dvdelement.appendChild(actorselem)
+            for actor in actors:
+                actorsplit = actor.split(_(' as '))
+                actornames = actorsplit[0].split(' ')
+                role = ''
+                firstname = ''
+                lastname = ''
+                if len(actorsplit) > 1:
+                    role = actorsplit[1]
+                if len(actornames) > 1:
+                    firstname = actornames[0]
+                    actornames.pop(0)
+                    for actorname in actornames:
+                        lastname = lastname + actorname + ' '
+                actorelem = document.createElement('Actor')
+                actorselem.appendChild(actorelem)
+                actorelem.setAttribute('FirstName', firstname)
+                actorelem.setAttribute('LastName', lastname)
+                actorelem.setAttribute('Role', role)
+                actorelem.setAttribute('BirthYear', '0')
+                actorelem.setAttribute('CreditedAs', '')
+                actorelem.setAttribute('Voice', 'False')
+                actorelem.setAttribute('Uncredited', 'False')
+                actorelem.setAttribute('MiddleName', '')
+        elif key == 'movies_plot':              # VARCHAR
+            elem = document.createElement('Overview')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_notes':             # VARCHAR
+            elem = document.createElement('Notes')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+
+    def process_tags(self, document, dvdelement, tagsquery):
+        tagselem = document.createElement('Tags')
+        dvdelement.appendChild(tagselem)
+        for tag in tagsquery.execute().fetchall():
+            value = self.convert_value(tag['name'])
+            tagelem = document.createElement('Tag')
+            tagselem.appendChild(tagelem)
+            tagelem.setAttribute('Name', value)
+            tagelem.setAttribute('FullName', value)

Added: trunk/lib/plugins/export/PluginExportGCstar.py
===================================================================
--- trunk/lib/plugins/export/PluginExportGCstar.py	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/lib/plugins/export/PluginExportGCstar.py	2009-07-10 21:14:08 UTC (rev 1257)
@@ -0,0 +1,218 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2009 Michael Jahn
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import xml.dom.minidom
+import xml.dom.ext
+import gutils
+from plugins.export import XmlExportBase
+
+class ExportPlugin(XmlExportBase):
+    plugin_name         = "GCstar Database Export"
+    plugin_description  = _("Full GCstar database export plugin")
+    plugin_author       = "Michael Jahn"
+    plugin_author_email = "griffith-private at lists.berlios.de"
+    plugin_version      = "1.0"
+
+    def __init__(self, database, locations, parent_window, search_conditions, config):
+        XmlExportBase.__init__(self, database, locations, parent_window, search_conditions, config)
+        self.config_section = 'export-gcstar'
+        self.export_name    = 'GCstar database export'
+        self.filename       = 'gcstar.xml'
+        self.encoding       = 'utf-8'
+        self.true_value     = '1'
+        self.false_value    = '0'
+
+    def export_to_document(self, document, mainelement):
+        collelement = document.createElement('collection')
+        collelement.setAttribute('type', 'GCfilms')
+        document.appendChild(collelement)
+        comment = document.createComment('Griffith Export in GCstar database format')
+        document.insertBefore(comment, collelement)
+        XmlExportBase.export_to_document(self, document, collelement)
+        collelement.setAttribute('items', str(self.exported_movies))
+
+    def process_movie(self, document, mainelement, movie, keys):
+        # create node
+        itemelement = document.createElement('item')
+        itemelement.setAttribute('id', '')
+        itemelement.setAttribute('title', '')
+        itemelement.setAttribute('date', '')
+        itemelement.setAttribute('time', '')
+        itemelement.setAttribute('director', '')
+        itemelement.setAttribute('country', '')
+        itemelement.setAttribute('genre', '')
+        itemelement.setAttribute('image', '')
+        itemelement.setAttribute('actors', '')
+        itemelement.setAttribute('original', '')
+        itemelement.setAttribute('webPage', '')
+        itemelement.setAttribute('seen', '')
+        itemelement.setAttribute('added', '')
+        itemelement.setAttribute('format', '')
+        itemelement.setAttribute('number', '')
+        itemelement.setAttribute('identifier', '')
+        itemelement.setAttribute('place', '')
+        itemelement.setAttribute('rating', '')
+        itemelement.setAttribute('audio', '')
+        itemelement.setAttribute('subt', '')
+        itemelement.setAttribute('age', '')
+        itemelement.setAttribute('video', '')
+        itemelement.setAttribute('serie', '')
+        itemelement.setAttribute('rank', '')
+        itemelement.setAttribute('trailer', '')
+        itemelement.setAttribute('borrower', '')
+        itemelement.setAttribute('lendDate', '')
+        itemelement.setAttribute('borrowings', '')
+        itemelement.setAttribute('favourite', '')
+        itemelement.setAttribute('tags', '')
+        mainelement.appendChild(itemelement)
+        XmlExportBase.process_movie(self, document, itemelement, movie, keys)
+        if not itemelement.getAttribute('title'):
+            itemelement.setAttribute('title', itemelement.getAttribute('original'))
+
+    def process_movie_value(self, document, dvdelement, key, value):
+        if key == 'movies_number':
+            dvdelement.setAttribute('id', value)
+        elif key == 'movies_loaned':
+            pass
+        elif key == 'movies_seen':
+            dvdelement.setAttribute('seen', value)
+        elif key == 'movies_rating':
+            dvdelement.setAttribute('rating', value)
+        elif key == 'movies_color':             # SmallInteger
+            pass
+        elif key == 'movies_cond':              # SmallInteger
+            pass
+        elif key == 'movies_layers':            # SmallInteger
+            pass
+        elif key == 'movies_media_num':         # SmallInteger
+            dvdelement.setAttribute('number', value)
+        elif key == 'movies_runtime':           # Integer
+            dvdelement.setAttribute('time', value)
+        elif key == 'movies_year':              # year
+            dvdelement.setAttribute('date', value)
+        elif key == 'movies_o_title':           # VARCHAR
+            dvdelement.setAttribute('original', value)
+        elif key == 'movies_title':             # VARCHAR
+            dvdelement.setAttribute('title', value)
+        elif key == 'movies_director':          # VARCHAR
+            dvdelement.setAttribute('director', value)
+        elif key == 'movies_o_site':            # VARCHAR
+            pass
+        elif key == 'movies_site':              # VARCHAR
+            dvdelement.setAttribute('webPage', value)
+        elif key == 'movies_trailer':           # VARCHAR
+            if len(value.strip()) > 0:
+                trailersplit = value.split('file://')
+                if len(trailersplit) > 1:
+                    if gutils.is_windows_system():
+                        dvdelement.setAttribute('trailer', trailersplit[1].lstrip('/'))
+                    else:
+                        dvdelement.setAttribute('trailer', trailersplit[1])
+                else:
+                    dvdelement.setAttribute('trailer', trailersplit[0])
+        elif key == 'movies_country':           # VARCHAR
+            dvdelement.setAttribute('country', value)
+        elif key == 'movies_genre':             # VARCHAR
+            dvdelement.setAttribute('genre', value.replace('\n', ''))
+        elif key == 'movies_region':            # SmallInteger
+            pass
+        elif key == 'movies_studio':            # VARCHAR
+            pass
+        elif key == 'movies_classification':    # VARCHAR
+            dvdelement.setAttribute('age', str(gutils.digits_only(value)))
+        elif key == 'movies_cast':              # VARCHAR
+            if len(value.strip()) > 0:
+                actors = value.split('\n')
+                actorsstring = ''
+                delim = ''
+                for actor in actors:
+                    actorsplit = actor.split(_(' as '))
+                    actornames = actorsplit[0]
+                    role = ''
+                    if len(actorsplit) > 1:
+                        role = actorsplit[1]
+                    actorsstring += delim + actornames.strip() + ' (' + role.strip() + ')'
+                    delim = ', '
+                dvdelement.setAttribute('actors', actorsstring)
+        elif key == 'movies_plot':              # VARCHAR
+            elem = document.createElement('synopsis')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'movies_notes':             # VARCHAR
+            elem = document.createElement('comment')
+            dvdelement.appendChild(elem)
+            t = document.createTextNode(value)
+            elem.appendChild(t)
+        elif key == 'volumes_name':             # VARCHAR
+            dvdelement.setAttribute('place', value)
+        elif key == 'collections_name':         # VARCHAR
+            dvdelement.setAttribute('serie', value)
+        elif key == 'vcodecs_name':             # VARCHAR
+            dvdelement.setAttribute('video', value)
+        elif key == 'media_name':               # VARCHAR
+            dvdelement.setAttribute('format', value)
+
+    def process_movie_image(self, document, dvdelement, imagedata, imagemd5sum):
+        if imagemd5sum and imagedata:
+            dvdelement.setAttribute('image', self.filename + '_pictures/' + imagemd5sum + '.jpg')
+            self.save_image_to_file(imagedata, imagemd5sum, self.filename + '_pictures/')
+
+    def process_tags(self, document, dvdelement, tagsquery):
+        tagsstring = ''
+        delim = ''
+        for tag in tagsquery.execute().fetchall():
+            tagsstring += delim + self.convert_value(tag['name'])
+            delim = ','
+        dvdelement.setAttribute('tags', tagsstring)
+
+    def process_languages(self, document, movieelement, languagesquery):
+        audioelement = None
+        for language in languagesquery.execute().fetchall():
+            if audioelement is None:
+                audioelement = document.createElement('audio')
+                movieelement.appendChild(audioelement)
+            lineelement = document.createElement('line')
+            audioelement.appendChild(lineelement)
+            colelement = document.createElement('col')
+            lineelement.appendChild(colelement)
+            t = document.createTextNode(self.convert_value(language['languages_name']))
+            colelement.appendChild(t)
+            colelement = document.createElement('col')
+            lineelement.appendChild(colelement)
+            t = document.createTextNode(self.convert_value(language['acodecs_name']))
+            colelement.appendChild(t)
+
+    def process_subtitles(self, document, movieelement, subtitlesquery):
+        # process movie subtitles by query
+        subtelement = None
+        for subtitle in subtitlesquery.execute().fetchall():
+            if subtelement is None:
+                subtelement = document.createElement('subt')
+                movieelement.appendChild(subtelement)
+            lineelement = document.createElement('line')
+            subtelement.appendChild(lineelement)
+            colelement = document.createElement('col')
+            lineelement.appendChild(colelement)
+            t = document.createTextNode(self.convert_value(subtitle['name']))
+            colelement.appendChild(t)

Modified: trunk/lib/plugins/export/__init__.py
===================================================================
--- trunk/lib/plugins/export/__init__.py	2009-07-08 16:24:03 UTC (rev 1256)
+++ trunk/lib/plugins/export/__init__.py	2009-07-10 21:14:08 UTC (rev 1257)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2008 Piotr O?arowski
+# Copyright (c) 2008-2009 Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published byp
@@ -23,11 +23,16 @@
 
 import glob
 import os.path
+import gutils
+import gtk
+import xml.dom.minidom
+import xml.dom.ext
+import os
 
 import logging
 log = logging.getLogger("Griffith.%s" % __name__)
 
-from sqlalchemy import select, outerjoin
+from sqlalchemy import select, join, outerjoin, and_, or_
 import db
 from sql import update_whereclause
 
@@ -105,3 +110,288 @@
         self.exported_columns = query.columns
 
         return query
+
+class XmlExportBase(Base):
+
+    def __init__(self, database, locations, parent_window, search_conditions, config):
+        self.db              = database
+        self.locations       = locations
+        self.parent          = parent_window
+        self.config_section  = None
+        self.export_name     = ''
+        self.filepath        = ''
+        self.dirpath         = ''
+        self.filename        = 'export.xml'
+        self.encoding        = 'windows-1252'
+        self.exported_movies = 0
+        self.true_value      = 'True'
+        self.false_value     = 'False'
+        self.config          = config
+
+    def run(self):
+        if self.show_dialog() == True:
+            # create xml document
+            impl = xml.dom.minidom.getDOMImplementation()
+            doc  = impl.createDocument(None, None, None)
+            self.export_to_document(doc, doc.documentElement)
+            # write xml document to file
+            self.export_document_to_file(doc, self.filepath)
+            gutils.info(_('%s file has been created.') % self.export_name, self.parent)
+
+    def show_dialog(self):
+        # shows a file dialog and sets self.filepath
+        # derived classes which overwrite this method have also to set self.filepath
+        basedir = None
+        if not self.config is None and not self.config_section is None:
+            basedir = self.config.get('export_dir', None, section=self.config_section)
+        if basedir is None:
+            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename)
+        else:
+            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename, folder=basedir)
+        if filenames[0]:
+            self.filepath = filenames[0]
+            if len(filenames) > 1:
+                self.dirpath = filenames[1]
+            else:
+                self.dirpath = os.path.dirname(self.filepath)
+            self.filename = os.path.basename(self.filepath)
+            if not self.config is None and self.dirpath and not self.config_section is None:
+                self.config.set('export_dir', self.dirpath, section=self.config_section)
+                self.config.save()
+            overwrite = None
+            if os.path.isfile(self.filepath):
+                response = gutils.question(_('File exists. Do you want to overwrite it?'), 1, self.parent)
+                if response==-8:
+                    overwrite = True
+                else:
+                    overwrite = False
+                    
+            if overwrite == True or overwrite is None:
+                return True
+        return False
+
+    def export_document_to_file(self, document, filename):
+        # write XML to file
+        fp = open(filename, 'w')
+        xml.dom.ext.PrettyPrint(document, fp, encoding=self.encoding)
+        fp.close()
+
+    def export_to_document(self, document, mainelement):
+        table_movies = db.metadata.tables['movies']
+        # create object
+        columns = [table_movies.c.movie_id, table_movies.c.number,
+            table_movies.c.title, table_movies.c.o_title,
+            table_movies.c.country, table_movies.c.year,
+            table_movies.c.runtime, table_movies.c.classification,
+            table_movies.c.genre, table_movies.c.region, table_movies.c.studio,
+            table_movies.c.cast, table_movies.c.director,
+            table_movies.c.plot, table_movies.c.notes,
+            table_movies.c.loaned, table_movies.c.rating,
+            table_movies.c.trailer, table_movies.c.image,
+            table_movies.c.seen, table_movies.c.media_num,
+            table_movies.c.poster_md5, table_movies.c.screenplay,
+            table_movies.c.cameraman, table_movies.c.barcode]
+        # use outer join to media table to get the name of the media
+        columns.append(db.metadata.tables['media'].c.name)
+        media_join = outerjoin(db.metadata.tables['movies'], \
+            db.metadata.tables['media'], \
+            db.metadata.tables['movies'].c.medium_id==db.metadata.tables['media'].c.medium_id)
+        # use outer join to collections table to get the name of the collection
+        columns.append(db.metadata.tables['collections'].c.name)
+        collection_join = media_join.outerjoin( \
+            db.metadata.tables['collections'], \
+            db.metadata.tables['movies'].c.collection_id==db.metadata.tables['collections'].c.collection_id)
+        # use outer join to volumes table to get the name of the volume
+        columns.append(db.metadata.tables['volumes'].c.name)
+        volume_join = collection_join.outerjoin( \
+            db.metadata.tables['volumes'], \
+            db.metadata.tables['movies'].c.volume_id==db.metadata.tables['volumes'].c.volume_id)
+        # use outer join to volumes table to get the name of the video codec
+        columns.append(db.metadata.tables['vcodecs'].c.name)
+        vcodec_join = volume_join.outerjoin( \
+            db.metadata.tables['vcodecs'], \
+            db.metadata.tables['movies'].c.vcodec_id==db.metadata.tables['vcodecs'].c.vcodec_id)
+        # use outer join to posters table to get the poster image
+        columns.append(db.metadata.tables['posters'].c.data)
+        posters_join = vcodec_join.outerjoin( \
+            db.metadata.tables['posters'], \
+            db.metadata.tables['movies'].c.poster_md5==db.metadata.tables['posters'].c.md5sum)
+        # fetch movie data
+        moviesquery = select(columns=columns, from_obj=[media_join, collection_join, volume_join, vcodec_join, posters_join], bind=self.db.session.bind, use_labels = True)
+        self.process_movies(document, mainelement, moviesquery)
+
+    def process_movies(self, document, mainelement, moviesquery):
+        # process all movies by query
+        self.exported_movies = 0
+        keys = moviesquery.c.keys
+        for movie in moviesquery.execute().fetchall():
+            self.process_movie(document, mainelement, movie, keys)
+            self.exported_movies += 1
+
+    def process_movie(self, document, movieelement, movie, keys):
+        # process the movie itself
+        self.process_movie_values(document, movieelement, movie, keys)
+        # process tags
+        self.process_movie_tags(document, movieelement, movie)
+        # process audio codecs
+        self.process_movie_acodecs(document, movieelement, movie)
+        # process languages
+        self.process_movie_languages(document, movieelement, movie)
+        # process subtitles
+        self.process_movie_subtitles(document, movieelement, movie)
+
+    def process_movie_values(self, document, movieelement, movie, keys):
+        # process movie properties by key
+        for key in keys():
+            if not key == 'posters_data':
+                value = self.convert_value(movie[key])
+                self.process_movie_value(document, movieelement, key, value)
+        self.process_movie_image(document, movieelement, movie['posters_data'], movie['movies_poster_md5'])
+
+    def process_movie_value(self, document, movieelement, key, value):
+        pass
+
+    def process_movie_image(self, document, movieelement, imagedata, imagemd5sum):
+        pass
+
+    #
+    # export movie tags
+    #
+    def process_movie_tags(self, document, movieelement, movie):
+        # build query for movie tags processing
+        tagsquerycolumns = [db.metadata.tables['movie_tag'].c.movie_id,
+            db.metadata.tables['movie_tag'].c.tag_id,
+            db.metadata.tables['tags'].c.name]
+        tag_join = join(db.metadata.tables['movie_tag'], \
+            db.metadata.tables['tags'], \
+            db.metadata.tables['movie_tag'].c.tag_id==db.metadata.tables['tags'].c.tag_id)
+        tagsquery = select(\
+            bind=self.db.session.bind, \
+            columns = tagsquerycolumns, \
+            from_obj = [tag_join], \
+            whereclause = db.metadata.tables['movie_tag'].c.movie_id==movie['movies_movie_id'])
+        self.process_tags(document, movieelement, tagsquery)
+        
+    def process_tags(self, document, movieelement, tagsquery):
+        # process movie tags by query
+        pass
+
+    #
+    # export movie audio codecs
+    #
+    def process_movie_acodecs(self, document, movieelement, movie):
+        # build query for audio codec processing
+        acodecscolumns = [db.metadata.tables['movie_lang'].c.movie_id,
+            db.metadata.tables['movie_lang'].c.type,
+            db.metadata.tables['movie_lang'].c.acodec_id,
+            db.metadata.tables['acodecs'].c.name]
+        acodec_join = join(db.metadata.tables['movie_lang'], \
+            db.metadata.tables['acodecs'], \
+            db.metadata.tables['movie_lang'].c.acodec_id==db.metadata.tables['acodecs'].c.acodec_id)
+        acodecsquery = select(\
+            bind=self.db.session.bind, \
+            columns = acodecscolumns, \
+            from_obj = [acodec_join], \
+            whereclause = db.metadata.tables['movie_lang'].c.movie_id==movie['movies_movie_id'])
+        self.process_acodecs(document, movieelement, acodecsquery)
+        
+    def process_acodecs(self, document, movieelement, acodecs):
+        # process audio codecs by query
+        pass
+
+    #
+    # export movie languages
+    #
+    def process_movie_languages(self, document, movieelement, movie):
+        # build query for movie languages processing
+        languagecolumns = [db.metadata.tables['movie_lang'].c.movie_id,
+            db.metadata.tables['movie_lang'].c.type,
+            db.metadata.tables['movie_lang'].c.lang_id,
+            db.metadata.tables['movie_lang'].c.acodec_id,
+            db.metadata.tables['languages'].c.name,
+            db.metadata.tables['acodecs'].c.name]
+        language_join = join(db.metadata.tables['movie_lang'], \
+            db.metadata.tables['languages'], \
+            db.metadata.tables['movie_lang'].c.lang_id==db.metadata.tables['languages'].c.lang_id)
+        acodec_join = language_join.join( \
+            db.metadata.tables['acodecs'], \
+            db.metadata.tables['movie_lang'].c.acodec_id==db.metadata.tables['acodecs'].c.acodec_id)
+        languagesquery = select(\
+            bind=self.db.session.bind, \
+            columns = languagecolumns, \
+            from_obj = [language_join, acodec_join], \
+            whereclause = and_(db.metadata.tables['movie_lang'].c.movie_id==movie['movies_movie_id'], \
+                or_(db.metadata.tables['movie_lang'].c.type==0, or_(db.metadata.tables['movie_lang'].c.type==2, db.metadata.tables['movie_lang'].c.type==None))), \
+            use_labels = True)
+        self.process_languages(document, movieelement, languagesquery)
+        
+    def process_languages(self, document, movieelement, languages):
+        # process movie languages by query
+        pass
+
+    #
+    # export movie subtitles
+    #
+    def process_movie_subtitles(self, document, movieelement, movie):
+        # build query for movie subtitles processing
+        languagescolumns = [db.metadata.tables['movie_lang'].c.movie_id,
+            db.metadata.tables['movie_lang'].c.type,
+            db.metadata.tables['movie_lang'].c.lang_id,
+            db.metadata.tables['languages'].c.name]
+        language_join = join(db.metadata.tables['movie_lang'], \
+            db.metadata.tables['languages'], \
+            db.metadata.tables['movie_lang'].c.lang_id==db.metadata.tables['languages'].c.lang_id)
+        languagesquery = select(\
+            bind=self.db.session.bind, \
+            columns = languagescolumns, \
+            from_obj = [language_join], \
+            whereclause = and_(db.metadata.tables['movie_lang'].c.movie_id==movie['movies_movie_id'], db.metadata.tables['movie_lang'].c.type==3))
+        self.process_subtitles(document, movieelement, languagesquery)
+        
+    def process_subtitles(self, document, movieelement, subtitlesquery):
+        # process movie subtitles by query
+        pass
+
+    #
+    # helper methods
+    #
+
+    def save_image_to_file(self, imagedata, imagebasename, destinationdir):
+        # save image image to destination directory
+        # build absolute path from current export directory if necessary
+        # create picture directory if necessary
+        if not os.path.isabs(destinationdir):
+            dst_directory = os.path.abspath(os.path.join(self.dirpath, destinationdir))
+        else:
+            dst_directory = os.path.abspath(destinationdir)
+        if not os.path.exists(dst_directory):
+            try:
+                os.mkdir(dst_directory)
+            except:
+                log.error("Can't create %s" % dst_directory)
+        dst_filename = os.path.join(dst_directory, imagebasename + '.jpg')
+        try:
+            f = file(dst_filename, 'wb')
+            try:
+                f.write(imagedata)
+            finally:
+                f.close()
+        except:
+            log.error("Can't save image data to %s" % dst_filename)
+
+    def convert_value(self, value):
+        if value is None:
+            result = ''
+        elif value is True:
+            result = self.true_value
+        elif value is False:
+            result = self.false_value
+        else:
+            try:
+                result = str(value).encode(self.encoding).decode(self.encoding)
+            except:
+                log.error('Can''t convert value ' + value + ' to codepage ' + self.encoding + '.')
+                result = ''
+        return result



From mikej06 at mail.berlios.de  Fri Jul 10 23:43:59 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 10 Jul 2009 23:43:59 +0200
Subject: [Griffith-svn] r1258 - trunk/lib/plugins/export
Message-ID: <200907102143.n6ALhxpe026004@sheep.berlios.de>

Author: mikej06
Date: 2009-07-10 23:43:46 +0200 (Fri, 10 Jul 2009)
New Revision: 1258

Modified:
   trunk/lib/plugins/export/__init__.py
Log:
* call to base class missing for new export plugins
* added search restriction to export queries

Modified: trunk/lib/plugins/export/__init__.py
===================================================================
--- trunk/lib/plugins/export/__init__.py	2009-07-10 21:14:08 UTC (rev 1257)
+++ trunk/lib/plugins/export/__init__.py	2009-07-10 21:43:46 UTC (rev 1258)
@@ -114,9 +114,8 @@
 class XmlExportBase(Base):
 
     def __init__(self, database, locations, parent_window, search_conditions, config):
+        Base.__init__(self, database, locations, parent_window, search_conditions, config)
         self.db              = database
-        self.locations       = locations
-        self.parent          = parent_window
         self.config_section  = None
         self.export_name     = ''
         self.filepath        = ''
@@ -126,7 +125,6 @@
         self.exported_movies = 0
         self.true_value      = 'True'
         self.false_value     = 'False'
-        self.config          = config
 
     def run(self):
         if self.show_dialog() == True:
@@ -136,7 +134,7 @@
             self.export_to_document(doc, doc.documentElement)
             # write xml document to file
             self.export_document_to_file(doc, self.filepath)
-            gutils.info(_('%s file has been created.') % self.export_name, self.parent)
+            gutils.info(_('%s file has been created.') % self.export_name, self.parent_window)
 
     def show_dialog(self):
         # shows a file dialog and sets self.filepath
@@ -162,7 +160,7 @@
                 self.config.save()
             overwrite = None
             if os.path.isfile(self.filepath):
-                response = gutils.question(_('File exists. Do you want to overwrite it?'), 1, self.parent)
+                response = gutils.question(_('File exists. Do you want to overwrite it?'), 1, self.parent_window)
                 if response==-8:
                     overwrite = True
                 else:
@@ -220,6 +218,7 @@
             db.metadata.tables['movies'].c.poster_md5==db.metadata.tables['posters'].c.md5sum)
         # fetch movie data
         moviesquery = select(columns=columns, from_obj=[media_join, collection_join, volume_join, vcodec_join, posters_join], bind=self.db.session.bind, use_labels = True)
+        moviesquery = update_whereclause(moviesquery, self.search_conditions)
         self.process_movies(document, mainelement, moviesquery)
 
     def process_movies(self, document, mainelement, moviesquery):



From piotrek at mail.berlios.de  Sun Jul 12 20:43:13 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 20:43:13 +0200
Subject: [Griffith-svn] r1259 - in trunk: . lib lib/db lib/plugins/export
Message-ID: <200907121843.n6CIhDW4009102@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 20:43:12 +0200 (Sun, 12 Jul 2009)
New Revision: 1259

Modified:
   trunk/ChangeLog
   trunk/lib/db/__init__.py
   trunk/lib/db/_movie.py
   trunk/lib/db/_objects.py
   trunk/lib/db/tables.py
   trunk/lib/loan.py
   trunk/lib/plugins/export/PluginExportHTML.py
   trunk/lib/sql.py
Log:
move loan_movie() and return_movie() to db module


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/ChangeLog	2009-07-12 18:43:12 UTC (rev 1259)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-12  Piotr O?arowski
+	* Loaning collections with lots of movies inside will work faster now
+
 2009-07-10  Michael Jahn
 	* new export plugins: Ant Movie Catalog, GCstar, DVD Profiler XML Export V2 and V3
 

Modified: trunk/lib/db/__init__.py
===================================================================
--- trunk/lib/db/__init__.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/db/__init__.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -22,8 +22,6 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import logging
-
 from sqlalchemy import MetaData, func, select, and_
 from sqlalchemy.orm import mapper, relation, deferred, column_property
 
@@ -31,9 +29,7 @@
 import tables # *after* metadata initialization
 from _objects import *
 
-log = logging.getLogger('Griffith')
 
-
 mapper(Configuration, tables.configuration)
 mapper(Volume, tables.volumes, order_by=tables.volumes.c.name, properties={
     'movies': relation(Movie, backref='volume')})

Modified: trunk/lib/db/_movie.py
===================================================================
--- trunk/lib/db/_movie.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/db/_movie.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -24,6 +24,7 @@
 
 from sqlalchemy import and_, or_
 from sqlalchemy.orm import object_session
+from sqlalchemy.sql import select, update
 
 import tables
 from _objects import Loan
@@ -111,7 +112,7 @@
         if self.volume_id is not None:
             where.append(tables.loans.c.volume_id==self.volume_id)
         return object_session(self).query(Loan).filter(and_(tables.loans.c.return_date!=None, or_(*where))).all()
-    loan_history = property(_get_loan_history)
+    loan_history = property(_get_loan_history, doc='list of already returned loans')
 
     def _get_loan_details(self):
         where = [tables.loans.c.movie_id==self.movie_id]
@@ -120,5 +121,49 @@
         if self.volume_id is not None:
             where.append(tables.loans.c.volume_id==self.volume_id)
         return object_session(self).query(Loan).filter(and_(tables.loans.c.return_date==None, or_(*where))).first()
-    loan_details = property(_get_loan_details)
+    loan_details = property(_get_loan_details, doc='current loan details or None')
 
+    def loan_to(self, person, whole_collection=False):
+        """
+        Loans movie, all other movies from the same volume and optionally
+        movie's collection.
+        
+        :param person: Person instance or person_id.
+        :param whole_collection=False: if True, will loan all movies from the same
+            collection.
+        """
+
+        if self.loaned:
+            log.warn('movie already loaned: %s', self.loan_details)
+            return False
+
+        session = object_session(self)
+
+        if hasattr(person, 'person_id'):
+            person = person.person_id
+        elif not isinstance(person, int):
+            raise ValueError("expecting int or Person instance, got %s instead" % type(person))
+
+        loan = Loan()
+        loan.person_id = person
+        loan.movie = self
+
+        if whole_collection:
+            if self.collection:
+                # next line will update the status of all other movies in collection
+                # or raise and OtherMovieAlreadyLoanedError
+                self.collection.loaned = True
+                loan.collection_id = self.collection_id
+            else:
+                log.debug('this movie doesn\'t have collection assigned, whole_collection param ignored')
+
+        if self.volume:
+            # next line will update the status of all other movies in volume
+            self.volume.loaned = True
+            loan.volume_id = self.volume_id
+
+        self.loaned = True
+        session.add(loan)
+
+        return True
+

Modified: trunk/lib/db/_objects.py
===================================================================
--- trunk/lib/db/_objects.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/db/_objects.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -22,11 +22,15 @@
 # GNU General Public License, version 2 or later
 
 import logging
+import re
 import string
-import re
 
-from sqlalchemy.orm import validates
+from sqlalchemy import and_, func
+from sqlalchemy.orm import validates, object_session
+from sqlalchemy.sql import select, update
 
+import tables
+
 log = logging.getLogger('Griffith')
 
 EMAIL_PATTERN = re.compile('^[a-z0-9]+[.a-z0-9_+-]*@[a-z0-9_-]+(\.[a-z0-9_-]+)+$', re.IGNORECASE)
@@ -50,16 +54,93 @@
 
 class AChannel(DBTable): pass
 class ACodec(DBTable): pass
-class Collection(DBTable): pass
 class Lang(DBTable): pass
 class Medium(DBTable): pass
 class Ratio(DBTable): pass
 class SubFormat(DBTable): pass
 class Tag(DBTable): pass
 class VCodec(DBTable): pass
-class Volume(DBTable): pass
 class Filter(DBTable): pass
 
+class Collection(DBTable):
+    def _set_loaned_flag(self, flag):
+        """Sets loaned flag in current collection and all associated movies.
+       
+        :param flag: if True and there are loaned movies in the collection
+            already, exception will be raised (whole collection cannot be
+            loaned if one of the movies is not available).
+            Please also remember to create new entry in loans table later (no
+            need to do that if flag is False).
+        """
+
+        session = object_session(self)
+
+        if flag: # loaning whole collection
+            loaned_movies = session.execute(select([tables.movies.columns.movie_id])\
+                    .where(and_(tables.movies.columns.collection_id==self.collection_id,\
+                        tables.movies.columns.loaned==True))).fetchall()
+            if loaned_movies:
+                log.error('cannot loan it, collection contains loaned movie(s): %s', loaned_movies)
+                raise Exception('loaned movies in the collection already')
+
+        self._loaned = flag
+        update_query = update(tables.movies, tables.movies.columns.collection_id==self.collection_id)
+        session.execute(update_query, params={'loaned': flag})
+
+    def _is_loaned(self):
+        return self._loaned
+
+    loaned = property(_is_loaned, _set_loaned_flag)
+
+class Volume(DBTable):
+    def _set_loaned_flag(self, flag):
+        """Sets loaned flag in current volume and all associated movies.
+
+        :param flag: if True, remember to create new entry in loans table
+            later!
+        """
+
+        session = object_session(self)
+
+        self._loaned = flag
+        update_query = update(tables.movies, tables.movies.columns.volume_id==self.volume_id)
+        session.execute(update_query, params={'loaned': flag})
+
+    def _is_loaned(self):
+        return self._loaned
+
+    loaned = property(_is_loaned, _set_loaned_flag)
+
+class Loan(object):
+    def __repr__(self):
+        return "<Loan:%s (person:%s, movie_id:%s, volume_id:%s, collection_id:%s )>" % \
+                (self.loan_id, self.person_id, self.movie_id, self.volume_id, self.collection_id)
+    
+    def returned_on(self, date=None):
+        """
+        Marks the loan as returned and clears loaned flag in related movies.
+        
+        :param date=None: return date; accepted types: datetime, YYYYMMDD string or None
+        """
+
+        if date is None:
+            date = func.current_date()
+        # note that SQLAlchemy will convert YYYYMMDD strings to datetime, no need to touch it
+
+        if self.return_date: # already returned, just update the date
+            self.return_date = date
+            return True
+
+        session = object_session(self)
+       
+        if self.collection_id:
+            self.collection.loaned = False # will update the loaned flag in all associated movies as well
+        elif self.volume_id:
+            self.volume.loaned = False # will update the loaned flag in all associated movies as well
+        else:
+            self.movie.loaned = False
+        self.return_date = date
+
 class Person(DBTable):
     @validates('email')
     def _validate_email(self, key, address):
@@ -95,11 +176,6 @@
     def __repr__(self):
         return "<Config:%s=%s>" % (self.param, self.value)
 
-class Loan(object):
-    def __repr__(self):
-        return "<Loan:%s (person:%s, movie_id:%s, volume_id:%s, collection_id:%s )>" % \
-                (self.loan_id, self.person_id, self.movie_id, self.volume_id, self.collection_id)
-
 class MovieLang(object):
     def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
         self.lang_id = lang_id

Modified: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/db/tables.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -21,15 +21,11 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import logging
-
 from sqlalchemy import Table, Column, ForeignKey, func
 from sqlalchemy.types import Boolean, Unicode, Text, Integer, SmallInteger, Date, Binary, PickleType
 
 from db import metadata
 
-log = logging.getLogger('Griffith')
-
 posters = Table('posters', metadata,
     Column('md5sum', Unicode(32), primary_key=True),
     Column('data', Binary(1048576), nullable=False))
@@ -37,12 +33,12 @@
 volumes = Table('volumes', metadata,
     Column('volume_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
+    Column('loaned', Boolean, nullable=False, default=False, key='_loaned'))
 
 collections = Table('collections', metadata,
     Column('collection_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False))
+    Column('loaned', Boolean, nullable=False, default=False, key='_loaned'))
 
 media = Table('media', metadata,
     Column('medium_id', Integer, primary_key=True),
@@ -64,6 +60,7 @@
     Column('medium_id', ForeignKey(media.c.medium_id)),
     Column('ratio_id', ForeignKey(ratios.c.ratio_id)),
     Column('vcodec_id', ForeignKey(vcodecs.c.vcodec_id)),
+    Column('poster_md5', ForeignKey(posters.c.md5sum)),
     Column('loaned', Boolean, nullable=False, default=False),
     Column('seen', Boolean, nullable=False, default=False),
     Column('rating', SmallInteger(2)),
@@ -87,13 +84,13 @@
     Column('trailer', Unicode(256)),
     Column('country', Unicode(128)),
     Column('genre', Unicode(128)),
-    Column('image', Unicode(128)), # XXX: deprecated
-    Column('poster_md5', ForeignKey(posters.c.md5sum)),
     Column('studio', Unicode(128)),
     Column('classification', Unicode(128)),
     Column('cast', Text),
     Column('plot', Text),
-    Column('notes', Text))
+    Column('notes', Text),
+    Column('image', Unicode(128)), # XXX: deprecated
+    )
 
 people = Table('people', metadata,
     Column('person_id', Integer, primary_key=True),

Modified: trunk/lib/loan.py
===================================================================
--- trunk/lib/loan.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/loan.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -21,12 +21,13 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import gutils
+import logging
+
 import gtk
-import datetime
+
 import db
-import sql
-import logging
+import gutils
+
 log = logging.getLogger("Griffith")
 
 def loan_movie(self):
@@ -51,17 +52,19 @@
         return False
     self.widgets['w_loan_to'].hide()
 
-    person = self.db.session.query(db.Person.person_id).filter_by(name=person_name).first()
+    session = self.db.Session()
+
+    person = session.query(db.Person.person_id).filter_by(name=person_name).first()
     if not person:
-        log.info("loan_commit: person doesn't exist")
+        log.warn("loan_commit: person doesn't exist")
         return False
     if self._movie_id:
-        movie = self.db.session.query(db.Movie.movie_id, db.Movie.collection_id).filter_by(movie_id=self._movie_id).first()
+        movie = session.query(db.Movie).filter_by(movie_id=self._movie_id).first()
         if not movie:
-            log.info("loan_commit: wrong movie_id")
+            log.warn("loan_commit: movie doesn't exist")
             return False
     else:
-        log.info("loan_commit: movie not selected")
+        log.warn("loan_commit: movie not selected")
         return False
 
     # ask if user wants to loan whole collection
@@ -73,15 +76,32 @@
         elif response == gtk.RESPONSE_CANCEL:
             return False
     
-    resp = sql.loan_movie(self.db, movie.movie_id, person.person_id, loan_whole_collection)
-    if resp == -1:
-        gutils.warning(_("Collection contains loaned movie.\nLoan aborted!"))
-        return False
-    elif resp:
-        self.update_statusbar(_("Movie loaned"))
-        self.treeview_clicked()
+    try:
+        if movie.loan_to(person, whole_collection=loan_whole_collection):
+            session.commit()
+    except Exception, e:
+        session.rollback()
+        if e.message == 'loaned movies in the collection already':
+            gutils.warning(_("Collection contains loaned movie.\nLoan aborted!"))
+            return False
+        else:
+            raise e
 
+    self.update_statusbar(_("Movie loaned"))
+    self.treeview_clicked()
+
 def return_loan(self):
-    if self._movie_id and sql.loan_return(self.db, self._movie_id):
-        self.treeview_clicked()
+    if not self._movie_id:
+        log.warn('return_loan: movie not selected')
+        return False
 
+    session = self.db.Session()
+
+    movie = session.query(db.Movie).filter_by(movie_id=self._movie_id).first()
+    if not movie or not movie.loan_details:
+        log.warn("return_loan: movie or loan doesn't exist (id=%s)", self._movie_id)
+        return False
+    movie.loan_details.returned_on() # current date will be used be default
+    session.commit()
+    self.treeview_clicked()
+

Modified: trunk/lib/plugins/export/PluginExportHTML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportHTML.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/plugins/export/PluginExportHTML.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -23,10 +23,11 @@
 # GNU General Public License, version 2 or later
 
 import os
-import sys
-import gtk, gtk.glade
+import gtk
+import gtk.glade
 import gutils
-import glob, shutil
+import glob
+import shutil
 import version
 import math
 from xml.dom import minidom

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2009-07-10 21:43:46 UTC (rev 1258)
+++ trunk/lib/sql.py	2009-07-12 18:43:12 UTC (rev 1259)
@@ -240,105 +240,3 @@
     log.debug(query.compile())
     return query #}}}
 
-# MOVIE LOAN related functions --------------------------------{{{
-def loan_movie(gsql, movie_id, person_id, whole_collection=False):
-    """loans a movie, movie's volume and optionally movie's collection"""
-
-    session = gsql.Session() # create new session
-
-    person = session.query(db.Person).filter_by(person_id=person_id).first()
-    if not person:
-        log.warn("loan_movie: person doesn't exist")
-        return False
-    movie = session.query(db.Movie).filter_by(movie_id=movie_id).first()
-    if not movie:
-        log.warn("loan_movie: wrong movie_id")
-        return False
-
-    loan = db.Loan()
-    loan.person = person
-    loan.movie = movie
-
-    if whole_collection:
-        loan.collection = movie.collection
-        movie.collection.loaned = True
-        for m in movie.collection.movies:
-            if m.loaned:
-                log.warn("collection contains loaned movie (%s), cannot proceed", m.number)
-                session.rollback()
-                return -1
-            m.loaned = True
-            session.add(m)
-        session.add(movie.collection)
-
-    if movie.volume:
-        loan.volume = movie.volume
-        movie.volume.loaned = True
-        for m in movie.volume.movies:
-            m.loaned = True
-            session.add(m)
-        session.add(movie.volume)
-
-    movie.loaned = True
-    session.add(movie)
-    session.add(loan)
-
-    try:
-        session.commit()
-    except Exception, e:
-        session.rollback()
-        log.error(e)
-        return False
-    return True
-
-def loan_return(gsql, movie_id):
-    """marks movie, movie's volume and movie's collection as returned"""
-
-    session = gsql.Session() # create new session
-
-    loan = session.query(db.Loan).filter_by(movie_id=movie_id, return_date=None).first()
-
-    if loan is None:
-        movie = session.query(db.Movie).filter_by(movie_id=movie_id).first()
-        if not movie:
-            log.warn("Cannot find movie: %s", movie_id)
-            return False
-        # lets check if whole colletion was loaned
-        elif movie.collection and movie.collection.loaned:
-            loan = session.query(db.Loan).filter_by(collection_id=movie.collection_id, return_date=None).first()
-            if not loan:
-                log.error("Collection is marked as loaned but there's no loan data")
-                return False
-        elif movie.volume and movie.volume.loaned:
-            loan = session.query(db.Loan).filter_by(volume_id=movie.volume_id, return_date=None).first()
-        else:
-            log.error("Cannot find loan data (movie_id:%s)", movie_id)
-            return False
-
-    if loan.collection:
-        loan.collection.loaned = False
-        for m in loan.collection.movies:
-            m.loaned = False
-            session.add(m)
-        session.add(loan.collection)
-    elif loan.volume:
-        loan.volume.loaned = False
-        for m in loan.volume.movies:
-            m.loaned = False
-            session.add(m)
-        session.add(loan.volume)
-    else:
-        loan.movie.loaned = False
-        session.add(loan.movie)
-    loan.return_date = func.current_date()
-    session.add(loan)
-
-    try:
-        session.commit()
-    except Exception, e:
-        session.rollback()
-        log.error(e)
-        return False
-    return True
-
-#}}}



From piotrek at mail.berlios.de  Sun Jul 12 21:09:32 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 21:09:32 +0200
Subject: [Griffith-svn] r1260 - trunk
Message-ID: <200907121909.n6CJ9Vsj012806@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 21:09:31 +0200 (Sun, 12 Jul 2009)
New Revision: 1260

Modified:
   trunk/griffith
Log:
don't destroy advfilter window if Esc key is pressed


Modified: trunk/griffith
===================================================================
--- trunk/griffith	2009-07-12 18:43:12 UTC (rev 1259)
+++ trunk/griffith	2009-07-12 19:09:31 UTC (rev 1260)
@@ -1150,6 +1150,7 @@
     def hide_advfilter_window(self, *args):
         from advfilter import hide_window
         hide_window(self)
+        return True
 
     def on_af_find_clicked(self, *args):
         from advfilter import create_select_query, hide_window



From piotrek at mail.berlios.de  Sun Jul 12 22:25:16 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 22:25:16 +0200
Subject: [Griffith-svn] r1261 - in trunk: . lib/db lib/plugins/movie
Message-ID: <200907122025.n6CKPGZ5021719@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 22:25:15 +0200 (Sun, 12 Jul 2009)
New Revision: 1261

Modified:
   trunk/ChangeLog
   trunk/lib/db/_objects.py
   trunk/lib/plugins/movie/PluginMovieAniDB.py
Log:
AniDB movie plugin updated (thanks to nickpick)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-12 19:09:31 UTC (rev 1260)
+++ trunk/ChangeLog	2009-07-12 20:25:15 UTC (rev 1261)
@@ -7,6 +7,7 @@
 
 2009-07-12  Piotr O?arowski
 	* Loaning collections with lots of movies inside will work faster now
+	* AniDB movie plugin updated (thanks to nickpick)
 
 2009-07-10  Michael Jahn
 	* new export plugins: Ant Movie Catalog, GCstar, DVD Profiler XML Export V2 and V3

Modified: trunk/lib/db/_objects.py
===================================================================
--- trunk/lib/db/_objects.py	2009-07-12 19:09:31 UTC (rev 1260)
+++ trunk/lib/db/_objects.py	2009-07-12 20:25:15 UTC (rev 1261)
@@ -135,9 +135,9 @@
        
         if self.collection_id:
             self.collection.loaned = False # will update the loaned flag in all associated movies as well
-        elif self.volume_id:
+        if self.volume_id:
             self.volume.loaned = False # will update the loaned flag in all associated movies as well
-        else:
+        if self.movie_id:
             self.movie.loaned = False
         self.return_date = date
 

Modified: trunk/lib/plugins/movie/PluginMovieAniDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAniDB.py	2009-07-12 19:09:31 UTC (rev 1260)
+++ trunk/lib/plugins/movie/PluginMovieAniDB.py	2009-07-12 20:25:15 UTC (rev 1261)
@@ -30,8 +30,8 @@
 plugin_url          = 'www.anidb.net'
 plugin_language     = _('English')
 plugin_author       = 'Piotr O?arowski'
-plugin_author_email = '<ozarow+griffith at gmail.com>'
-plugin_version      = '2.6'
+plugin_author_email = 'piotr at griffith.cc'
+plugin_version      = '2.7'
 
 aid_pattern = re.compile('[?&;]aid=(\d+)')
 
@@ -67,14 +67,15 @@
             self.image_url = ''
 
     def get_o_title(self):
-        self.o_title = gutils.trim(self.page, '<span>Info: ', '</span>')
+        self.o_title = gutils.trim(self.page, '<span class="i_icon i_audio_ja" title=" language: japanese"><span>ja</span></span>', '</td>')
+        self.o_title = gutils.trim(self.o_title, '<label>', '</label>')
 
     def get_title(self):
-        self.title = gutils.trim(self.page, '"field">Official Title', '</td>')
-        self.title = gutils.trim(self.title, '<label>', '</label>')
+        self.title = gutils.trim(self.page, '<h1 class="anime">Anime: ', '</h1>')
 
     def get_director(self):
-        self.director = ''
+        self.director = gutils.trim(self.page, '<a title="Direction (&#x76E3;&#x7763;)" href=', 'a>')
+        self.director = gutils.trim(self.director, '>', '</')
 
     def get_plot(self):
         self.plot = gutils.trim(self.page, 'class="desc">', '</div>')
@@ -99,7 +100,21 @@
         self.genre = string.replace(self.genre, '\n', '')
 
     def get_cast(self):
-        self.cast = ''
+        self.cast = 'Characters:\n---------------'
+        castv = gutils.trim(self.page, '<table id="characterlist" class="characterlist">', '</table>')
+        if castv != '':
+            castparts = string.split(castv, '<tr ')
+            for index in range(2, len(castparts), 1):
+                castpart = castparts[index]
+                castcharacter = gutils.clean(gutils.trim(castpart, '<td rowspan="1" class="name">', '</td>'))
+                castentity = gutils.clean(gutils.trim(castpart, '<td rowspan="1" class="entity">', '</td>'))
+                castactor = gutils.clean(gutils.trim(castpart, '<td class="name"><a href="animedb.pl?show=creator&amp;creatorid=', 'd>'))
+                castactor = gutils.clean(gutils.trim(castactor, '">', '</t'))
+                if castv == ' ':
+                    castactor = 'unknown'
+                castrelation = gutils.clean(gutils.trim(castpart, '<td rowspan="1" class="relation">', '</td>'))
+                castappearance = gutils.clean(gutils.trim(castpart, '<td rowspan="1" class="eprange">', '</td>'))
+                self.cast += '\n\n' + '[' + castcharacter + '] voiced by ' + castactor + '\n' + castentity + '; ' + castrelation + '; appears in episodes: ' + castappearance
 
     def get_classification(self):
         self.classification = ''
@@ -117,8 +132,8 @@
         self.studio = string.replace(self.studio, '\n', '')
 
     def get_o_site(self):
-        self.o_site = gutils.trim(self.page, '"field">URL', '</td>')
-        self.o_site = gutils.trim(self.o_site, 'href="', '"')
+        self.o_site = gutils.trim(self.page, '<th class="field">Resources</th>', '</tr>') #class varies, tag used
+        self.o_site = gutils.trim(self.o_site, '<a href="', '" rel="anidb::extern">Official page</a>')
 
     def get_site(self):
         self.site = self.url
@@ -157,13 +172,13 @@
 
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
-        self.encode                = 'utf-8'
-        self.original_url_search   = 'http://anidb.net/perl-bin/animedb.pl?show=animelist&do.search=search&adb.search='
+        self.encode = 'utf-8'
+        self.original_url_search = 'http://anidb.net/perl-bin/animedb.pl?show=animelist&do.search=search&adb.search='
         self.translated_url_search = 'http://anidb.net/perl-bin/animedb.pl?show=animelist&do.search=search&adb.search='
 
     def search(self,parent_window):
-        if not self.open_search(parent_window):
-            return None
+        self.open_search(parent_window)
+        self.page = decompress(self.page)
 
         tmp = string.find(self.page, '>Anime List - Search for: ')
         if tmp == -1:        # already a movie page



From piotrek at mail.berlios.de  Sun Jul 12 22:49:23 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 22:49:23 +0200
Subject: [Griffith-svn] r1262 - in trunk: . lib
Message-ID: <200907122049.n6CKnNlB024633@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 22:49:23 +0200 (Sun, 12 Jul 2009)
New Revision: 1262

Modified:
   trunk/NEWS
   trunk/README
   trunk/lib/version.py
   trunk/winpackage.iss
   trunk/winsetup.py
Log:
* version changed to 0.10-rc1
* NEWS file updated


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2009-07-12 20:25:15 UTC (rev 1261)
+++ trunk/NEWS	2009-07-12 20:49:23 UTC (rev 1262)
@@ -1,3 +1,12 @@
+Griffith 0.10-rc1
+=================
+* New export plugins: Ant Movie Catalog, GCstar, DVD Profiler XML Export V2 and V3
+* New import plugin: Ant Movie Catalog
+* Updated movie plugins: IMDb, Allocine, CineMovies, IMDb-de, MovieMeter,
+  Zelluloid, AniDB
+* Few bugs fixed
+
+
 Griffith 0.10-beta3
 ===================
 * Backup function fixed
@@ -65,10 +74,13 @@
 
 Griffith 0.9.6
 ==============
-* Distribute local copy of SQLAlchemy 0.3.11 (Griffith 0.10 which will work with SQLAlchemy 0.4.x is not ready yet)
-* Updated movie plugins: AniDb, FilmeVonAZ, Kino.de, OFDb, Stopklatka, Zelluloid
+* Distribute local copy of SQLAlchemy 0.3.11 (Griffith 0.10 which will work
+  with SQLAlchemy 0.4.x is not ready yet)
+* Updated movie plugins: AniDb, FilmeVonAZ, Kino.de, OFDb, Stopklatka,
+  Zelluloid
 * Translation changes:
-  + new: Estonian, Hungarian, Indonesian, Korean, Occitan (post 1500), Pashto, Slovak
+  + new: Estonian, Hungarian, Indonesian, Korean, Occitan (post 1500), Pashto,
+	 Slovak
   + updated: almost all :-)
 * Quick filter for volumes
 * Added columns genre, seen, runtime and year to the mainlist
@@ -86,7 +98,8 @@
   + Added gmail smtp server support
 * Translation changes:
   + new: Catalan, Norwegian Bokmal
-  + updated: Brazilian Portuguese, Cech, Dutch, French, German, Italian, Polish, Portuguese, Russian
+  + updated: Brazilian Portuguese, Cech, Dutch, French, German, Italian,
+             Polish, Portuguese, Russian
 * [Bug #11864] Fixed medium and video codec's default value in add window
 
 

Modified: trunk/README
===================================================================
--- trunk/README	2009-07-12 20:25:15 UTC (rev 1261)
+++ trunk/README	2009-07-12 20:49:23 UTC (rev 1262)
@@ -1,5 +1,5 @@
-Griffith 0.10-beta3 README
-==========================
+Griffith 0.10 README
+====================
 
 This document was last updated on Thu Jun 10 2009.
 Please see the file COPYING for licensing and warranty information.

Modified: trunk/lib/version.py
===================================================================
--- trunk/lib/version.py	2009-07-12 20:25:15 UTC (rev 1261)
+++ trunk/lib/version.py	2009-07-12 20:49:23 UTC (rev 1262)
@@ -22,7 +22,7 @@
 # GNU General Public License, version 2 or later
 
 pname        = "Griffith"
-pversion     = "0.10-beta3+svn"
+pversion     = "0.10-rc1"
 pauthor      = "Vasco Nunes, Piotr O?arowski <griffith-private at lists.berlios.de>"
 pyear        = "2005-2009"
 pwebsite     = "http://www.griffith.cc/"

Modified: trunk/winpackage.iss
===================================================================
--- trunk/winpackage.iss	2009-07-12 20:25:15 UTC (rev 1261)
+++ trunk/winpackage.iss	2009-07-12 20:49:23 UTC (rev 1262)
@@ -3,7 +3,7 @@
 
 [Setup]
 AppName=Griffith
-AppVerName=Griffith 0.10-beta3
+AppVerName=Griffith 0.10-rc1
 AppPublisher=Vasco Nunes, Piotr O?arowski
 AppPublisherURL=http://griffith.cc/
 AppSupportURL=http://griffith.cc/
@@ -14,7 +14,7 @@
 LicenseFile=COPYING
 InfoAfterFile=README
 OutputDir=installer
-OutputBaseFilename=griffith-0.10-beta3-win32
+OutputBaseFilename=griffith-0.10-rc1-win32
 SetupIconFile=images\griffith.ico
 Compression=lzma
 SolidCompression=true
@@ -22,8 +22,8 @@
 InternalCompressLevel=ultra
 AppCopyright=Vasco Nunes/Piotr Ozarowski
 DisableStartupPrompt=false
-AppVersion=0.10-beta3
-VersionInfoVersion=0.10.1
+AppVersion=0.10-rc1
+VersionInfoVersion=0.10.2
 
 [Languages]
 Name: eng; MessagesFile: compiler:Default.isl

Modified: trunk/winsetup.py
===================================================================
--- trunk/winsetup.py	2009-07-12 20:25:15 UTC (rev 1261)
+++ trunk/winsetup.py	2009-07-12 20:49:23 UTC (rev 1262)
@@ -53,7 +53,7 @@
 
 setup(
     name = "Griffith",
-    version = "0.10-beta3",
+    version = "0.10-rc1",
     description = 'Griffith - A film manager',
     author = 'Vasco Nunes/Piotr Ozarowski',
     author_email = 'griffith-private at lists.berlios.de',



From piotrek at mail.berlios.de  Sun Jul 12 23:04:24 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 23:04:24 +0200
Subject: [Griffith-svn] r1263 - trunk/debian
Message-ID: <200907122104.n6CL4OMi026281@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 23:04:24 +0200 (Sun, 12 Jul 2009)
New Revision: 1263

Modified:
   trunk/debian/changelog
   trunk/debian/control
Log:
Debian files updated:
* New upstream release
* Bump Standards-Version to 3.8.2 (no changes needed)
* Upload to unstable


Modified: trunk/debian/changelog
===================================================================
--- trunk/debian/changelog	2009-07-12 20:49:23 UTC (rev 1262)
+++ trunk/debian/changelog	2009-07-12 21:04:24 UTC (rev 1263)
@@ -1,3 +1,11 @@
+griffith (0.10~rc1-1) unstable; urgency=low
+
+  * New upstream release
+  * Bump Standards-Version to 3.8.2 (no changes needed)
+  * Upload to unstable
+
+ -- Piotr O?arowski <piotr at debian.org>  Sun, 12 Jul 2009 22:57:18 +0200
+
 griffith (0.10~beta3-1) experimental; urgency=low
 
   * New upstream release

Modified: trunk/debian/control
===================================================================
--- trunk/debian/control	2009-07-12 20:49:23 UTC (rev 1262)
+++ trunk/debian/control	2009-07-12 21:04:24 UTC (rev 1263)
@@ -4,7 +4,7 @@
 Maintainer: Piotr O?arowski <piotr at debian.org>
 Build-Depends: debhelper (>= 5)
 Build-Depends-Indep: python (>= 2.3.5-11), python-support (>= 0.6.4), docbook2x
-Standards-Version: 3.8.1
+Standards-Version: 3.8.2
 XS-Python-Version: >=2.5
 Vcs-Svn: svn://svn.berlios.de/griffith/trunk/debian
 Vcs-Browser: http://svn.berlios.de/wsvn/griffith/debian/?sc=1



From piotrek at mail.berlios.de  Sun Jul 12 23:28:30 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 23:28:30 +0200
Subject: [Griffith-svn] r1265 - trunk
Message-ID: <200907122128.n6CLSU92028755@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 23:28:30 +0200 (Sun, 12 Jul 2009)
New Revision: 1265

Modified:
   trunk/ChangeLog
Log:
releasing 0.10-rc1


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-12 21:27:20 UTC (rev 1264)
+++ trunk/ChangeLog	2009-07-12 21:28:30 UTC (rev 1265)
@@ -5,6 +5,8 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+---- 0.10-rc1 ----
+
 2009-07-12  Piotr O?arowski
 	* Loaning collections with lots of movies inside will work faster now
 	* AniDB movie plugin updated (thanks to nickpick)



From piotrek at mail.berlios.de  Sun Jul 12 23:44:32 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 12 Jul 2009 23:44:32 +0200
Subject: [Griffith-svn] r1266 - trunk
Message-ID: <200907122144.n6CLiWQn030364@sheep.berlios.de>

Author: piotrek
Date: 2009-07-12 23:44:31 +0200 (Sun, 12 Jul 2009)
New Revision: 1266

Modified:
   trunk/Makefile
   trunk/winsetup.py
Log:
add new db directory in install scripts


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2009-07-12 21:28:30 UTC (rev 1265)
+++ trunk/Makefile	2009-07-12 21:44:31 UTC (rev 1266)
@@ -52,11 +52,13 @@
 	@echo
 	@echo "installing Griffith"
 	@echo "^^^^^^^^^^^^^^^^^^^"
-	$(INSTALL) -m 755 -d $(BINDIR) $(DATADIR) $(LIBDIR) $(PLUGINSDIR) $(MOVIEPLUGINSDIR) \
-		$(EXPORTPLUGINSDIR) $(IMPORTPLUGINSDIR) $(FONTSDIR) $(APPLICATIONSDIR) \
-		$(ICONDIR) $(TPLDIR) $(IMAGESDIR) $(GLADEDIR) $(ETCDIR) $(BASHCOMPDIR)
+	$(INSTALL) -m 755 -d $(BINDIR) $(DATADIR) $(LIBDIR) $(LIBDIR)/db \
+		$(PLUGINSDIR) $(MOVIEPLUGINSDIR) $(EXPORTPLUGINSDIR) $(IMPORTPLUGINSDIR) \
+		$(FONTSDIR) $(APPLICATIONSDIR) $(ICONDIR) $(TPLDIR) \
+		$(IMAGESDIR) $(GLADEDIR) $(ETCDIR) $(BASHCOMPDIR)
 	$(INSTALL) -m 755 griffith $(LIBDIR)
 	$(INSTALL) -m 644 lib/*.py $(LIBDIR)
+	$(INSTALL) -m 644 lib/db/*.py $(LIBDIR)/db/
 	$(INSTALL) -m 644 lib/plugins/*.py $(PLUGINSDIR)
 	$(INSTALL) -m 644 lib/plugins/movie/*.py $(MOVIEPLUGINSDIR)
 	$(INSTALL) -m 644 lib/plugins/export/*.py $(EXPORTPLUGINSDIR)

Modified: trunk/winsetup.py
===================================================================
--- trunk/winsetup.py	2009-07-12 21:28:30 UTC (rev 1265)
+++ trunk/winsetup.py	2009-07-12 21:44:31 UTC (rev 1266)
@@ -112,5 +112,6 @@
         ("lib/plugins/movie", glob.glob("lib\\plugins\\movie\\*.*")),
         ("lib/plugins/imp", glob.glob("lib\\plugins\\imp\\*.*")),
         ("images", glob.glob("images\\*.png")),
+        ("lib/db", glob.glob("lib\\db\\*.py")),
         ("lib", glob.glob("lib\\*.*"))],
 )



From piotrek at mail.berlios.de  Mon Jul 13 20:06:15 2009
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 13 Jul 2009 20:06:15 +0200
Subject: [Griffith-svn] r1268 - in trunk: . lib lib/db
Message-ID: <200907131806.n6DI6F4a003872@sheep.berlios.de>

Author: piotrek
Date: 2009-07-13 20:06:14 +0200 (Mon, 13 Jul 2009)
New Revision: 1268

Modified:
   trunk/ChangeLog
   trunk/lib/db/__init__.py
   trunk/lib/db/tables.py
   trunk/lib/version.py
Log:
* Version changed to 0.10-rc1+svn
* Filtering Volumes/Collections by loaned flag fixed


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-07-12 21:50:30 UTC (rev 1267)
+++ trunk/ChangeLog	2009-07-13 18:06:14 UTC (rev 1268)
@@ -5,6 +5,10 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2009-07-13  Piotr O?arowski
+	* Version changed to 0.10-rc1+svn
+	* Filtering Volumes/Collections by loaned flag fixed
+
 ---- 0.10-rc1 ----
 
 2009-07-12  Piotr O?arowski

Modified: trunk/lib/db/__init__.py
===================================================================
--- trunk/lib/db/__init__.py	2009-07-12 21:50:30 UTC (rev 1267)
+++ trunk/lib/db/__init__.py	2009-07-13 18:06:14 UTC (rev 1268)
@@ -23,7 +23,7 @@
 # GNU General Public License, version 2 or later
 
 from sqlalchemy import MetaData, func, select, and_
-from sqlalchemy.orm import mapper, relation, deferred, column_property
+from sqlalchemy.orm import mapper, relation, deferred, column_property, synonym
 
 metadata = MetaData()
 import tables # *after* metadata initialization
@@ -32,8 +32,10 @@
 
 mapper(Configuration, tables.configuration)
 mapper(Volume, tables.volumes, order_by=tables.volumes.c.name, properties={
+    'loaned': synonym('_loaned', map_column=True),
     'movies': relation(Movie, backref='volume')})
 mapper(Collection, tables.collections, order_by=tables.collections.c.name, properties={
+    'loaned': synonym('_loaned', map_column=True),
     'movies': relation(Movie, backref='collection')})
 mapper(Medium, tables.media, properties={
     'movies': relation(Movie, backref='medium')})

Modified: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2009-07-12 21:50:30 UTC (rev 1267)
+++ trunk/lib/db/tables.py	2009-07-13 18:06:14 UTC (rev 1268)
@@ -33,12 +33,12 @@
 volumes = Table('volumes', metadata,
     Column('volume_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False, key='_loaned'))
+    Column('loaned', Boolean, nullable=False, default=False))
 
 collections = Table('collections', metadata,
     Column('collection_id', Integer, primary_key=True),
     Column('name', Unicode(64), nullable=False, unique=True),
-    Column('loaned', Boolean, nullable=False, default=False, key='_loaned'))
+    Column('loaned', Boolean, nullable=False, default=False))
 
 media = Table('media', metadata,
     Column('medium_id', Integer, primary_key=True),

Modified: trunk/lib/version.py
===================================================================
--- trunk/lib/version.py	2009-07-12 21:50:30 UTC (rev 1267)
+++ trunk/lib/version.py	2009-07-13 18:06:14 UTC (rev 1268)
@@ -22,7 +22,7 @@
 # GNU General Public License, version 2 or later
 
 pname        = "Griffith"
-pversion     = "0.10-rc1"
+pversion     = "0.10-rc1+svn"
 pauthor      = "Vasco Nunes, Piotr O?arowski <griffith-private at lists.berlios.de>"
 pyear        = "2005-2009"
 pwebsite     = "http://www.griffith.cc/"



From mikej06 at mail.berlios.de  Tue Jul 14 22:30:51 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 14 Jul 2009 22:30:51 +0200
Subject: [Griffith-svn] r1269 - extra_artwork/images
Message-ID: <200907142030.n6EKUpeT015094@sheep.berlios.de>

Author: mikej06
Date: 2009-07-14 22:30:08 +0200 (Tue, 14 Jul 2009)
New Revision: 1269

Added:
   extra_artwork/images/PluginMovieMovieMeter.png
Log:
added image for moviemeter plugin

Added: extra_artwork/images/PluginMovieMovieMeter.png
===================================================================
(Binary files differ)


Property changes on: extra_artwork/images/PluginMovieMovieMeter.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From mikej06 at mail.berlios.de  Tue Jul 14 22:45:29 2009
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 14 Jul 2009 22:45:29 +0200
Subject: [Griffith-svn] r1270 - trunk
Message-ID: <200907142045.n6EKjTq5016848@sheep.berlios.de>

Author: mikej06
Date: 2009-07-14 22:44:57 +0200 (Tue, 14 Jul 2009)
New Revision: 1270

Modified:
   trunk/winpackage.iss
Log:
reflecting file structure changes from revision 1252 in ISS setup script

Modified: trunk/winpackage.iss
===================================================================
--- trunk/winpackage.iss	2009-07-14 20:30:08 UTC (rev 1269)
+++ trunk/winpackage.iss	2009-07-14 20:44:57 UTC (rev 1270)
@@ -64,6 +64,7 @@
 ; don't use recursion because of components selection (movie plugins, ...)
 Source: dist\lib\*;    DestDir: {app}\lib;    Flags: ignoreversion
 ; use recursion, no components
+Source: dist\lib\db\*;           DestDir: {app}\lib\db;           Flags: ignoreversion recursesubdirs createallsubdirs
 Source: dist\lib\gettext\*;      DestDir: {app}\lib\gettext;      Flags: ignoreversion recursesubdirs createallsubdirs
 Source: dist\lib\glade3\*;       DestDir: {app}\lib\glade3;       Flags: ignoreversion recursesubdirs createallsubdirs
 Source: dist\lib\glib-2.0\*;     DestDir: {app}\lib\glib-2.0;     Flags: ignoreversion recursesubdirs createallsubdirs
@@ -138,6 +139,7 @@
 
 [UninstallDelete]
 Type: files; Name: {app}\lib\*.pyo
+Type: files; Name: {app}\lib\db\*.pyo
 Type: files; Name: {app}\lib\plugins\export\*.pyo
 Type: files; Name: {app}\lib\plugins\movie\*.pyo
 Type: files; Name: {app}\lib\plugins\imp\*.pyo



