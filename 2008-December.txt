From piotrek at mail.berlios.de  Mon Dec  1 22:01:21 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 1 Dec 2008 22:01:21 +0100
Subject: [Griffith-svn] r1077 - in trunk: . lib/plugins/export
Message-ID: <200812012101.mB1L1LxF009774@sheep.berlios.de>

Author: piotrek
Date: 2008-12-01 22:01:20 +0100 (Mon, 01 Dec 2008)
New Revision: 1077

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/export/PluginExportHTML.py
Log:
HTML export plugin exports posters again (closes: 304072)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-11-30 21:15:50 UTC (rev 1076)
+++ trunk/ChangeLog	2008-12-01 21:01:20 UTC (rev 1077)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-01  Piotr O?arowski
+	* HTML export plugin exports posters again (closes: 304072)
+
 2008-11-30  Piotr O?arowski
 	* CSFD movie plugin updated (thanks to Otakar)
 

Modified: trunk/lib/plugins/export/PluginExportHTML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportHTML.py	2008-11-30 21:15:50 UTC (rev 1076)
+++ trunk/lib/plugins/export/PluginExportHTML.py	2008-12-01 21:01:20 UTC (rev 1077)
@@ -101,7 +101,7 @@
         'movies_country'        : 'country',
         'movies_genre'          : 'genre',
         'movies_director'       : 'director',
-        'movies_image'          : 'image',
+        'movies_image'          : 'poster_md5',
         'movies_o_site'         : 'o_site',
         'movies_site'           : 'site',
         'movies_trailer'        : 'trailer',
@@ -169,8 +169,11 @@
     def initialize(self): #{{{
         self.fields_to_export = []
         for field in ExportPlugin.fields:
-            pos = field.find('_')
-            self.fields_to_export.append("%s.%s" % (field[:pos], field[pos+1:]))
+            if field == 'movies_image':
+                self.fields_to_export.append('movies.poster_md5')
+            else:
+                pos = field.find('_')
+                self.fields_to_export.append("%s.%s" % (field[:pos], field[pos+1:]))
 
         self.widgets = {}
         self.style_list = {}
@@ -698,9 +701,9 @@
             for j in self.names:
                 if self.fields[self.names[j]] == True:
                     if self.names[j] == 'movies_image':
-                        if row['movies_image']:
-                            #image = row['movies_image'] + '.' + config['poster_format'].lower()
-                            image = '%d' % row['movies_number'] + '.' + config['poster_format'].lower()
+                        if row['movies_poster_md5']:
+                            #image = row['movies_poster_md5'] + '.' + config['poster_format'].lower()
+                            image = "%d.%s" % (row['movies_number'], config['poster_format'].lower())
                             tmp = self.fill_template(tmp, self.names[j], image, j)
                         else:
                             tmp = self.fill_template(tmp, self.names[j], 'nopic.' + config['poster_format'].lower(), j)
@@ -735,21 +738,22 @@
             
             # copy poster
             if fields['movies_image']:
-                if row['movies_image'] is not None:
-                    image_file_src = os.path.join(self.locations['posters'], str(row['movies_image']) + '.jpg')
-                    image_file_dst = os.path.join(posters_dir, '%d' % row['movies_number']) + '.' + config['poster_format'].lower()
+
+                if row['movies_poster_md5']:
+                    image_file_src = gutils.get_image_fname(row['movies_poster_md5'], self.db)
+                    image_file_dst = os.path.join(posters_dir, "%d.%s" % (row['movies_number'], config['poster_format'].lower()))
                     if not config['poster_convert']:    # copy file
                         try:
-                            shutil.copy(image_file_src,    image_file_dst)
+                            shutil.copy(image_file_src, image_file_dst)
                         except:
-                            log.info("Can't copy %s" % image_file_src)
+                            log.info("Can't copy %s", image_file_src)
                     else:    # convert posters
                         try:
                             im = Image.open(image_file_src, 'r').convert(config['poster_mode'])
                             im.thumbnail((config['poster_width'], config['poster_height']), Image.ANTIALIAS)
                             im.save(image_file_dst, config['poster_format'])
                         except:
-                            log.info("Can't convert %s" % image_file_src)
+                            log.info("Can't convert %s", image_file_src)
 
             # close file if last item
             if ((page-1)*self.entries_per_page)+item == number_of_exported_movies:



From piotrek at mail.berlios.de  Wed Dec  3 20:59:45 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Wed, 3 Dec 2008 20:59:45 +0100
Subject: [Griffith-svn] r1078 - trunk/lib
Message-ID: <200812031959.mB3JxjH0022860@sheep.berlios.de>

Author: piotrek
Date: 2008-12-03 20:59:45 +0100 (Wed, 03 Dec 2008)
New Revision: 1078

Modified:
   trunk/lib/db.py
Log:
add few indexes


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2008-12-01 21:01:20 UTC (rev 1077)
+++ trunk/lib/db.py	2008-12-03 19:59:45 UTC (rev 1078)
@@ -51,63 +51,18 @@
             log.warning("%s: empty name (%s)", self.__class__.__name__, name)
             raise ValueError(_("Name cannot be empty"))
         return name.strip()
-
-    def remove_from_db(self):
-        dbtable_id = self.__dict__[self.__class__.__name__.lower() + '_id']
-        if dbtable_id<1:
-            log.info("%s: none selected => none removed", self.__class__.__name__)
-            return False
-        tmp = None
-        if hasattr(self,'movies'):
-            tmp = getattr(self,'movies')
-        elif hasattr(self,'movielangs'):
-            tmp = getattr(self,'movielangs')
-        if tmp and len(tmp)>0:
-            gutils.warning(self, msg=_("This item is in use.\nOperation aborted!"))
-            return False
-        log.info("%s: removing '%s' (id=%s) from database...", self.__class__.__name__, self.name, dbtable_id)
-        self.delete()
-        try:
-            self.flush()
-        except exceptions.SQLError, e:
-            log.info("%s: remove_from_db: %s", self.__class__.__name__, e)
-            return False
-        #self.refresh()
-        return True
-    def update_in_db(self):
-        dbtable_id = self.__dict__[self.__class__.__name__.lower() + '_id']
-        if dbtable_id<1:
-            log.info("%s: none selected => none updated", self.__class__.__name__)
-            return False
-        tmp = self.query.filter_by(name=self.name).first()
-        if tmp is not None and tmp is not self:
-            gutils.warning(self, msg=_("This name is already in use!"))
-            return False
-        self.update()
-        try:
-            self.flush()
-        except exceptions.SQLError, e:
-            log.info("%s: update_in_db: %s", self.__class__.__name__, e)
-            return False
-        self.refresh()
-        return True
      #}}}
 
 ### clases #################################################### {{{
-class AChannel(DBTable):
-    pass
+class AChannel(DBTable): pass
 
-class ACodec(DBTable):
-    pass
+class ACodec(DBTable): pass
 
-class Collection(DBTable):
-    pass
+class Collection(DBTable): pass
 
-class Lang(DBTable):
-    pass
+class Lang(DBTable): pass
 
-class Medium(DBTable):
-    pass
+class Medium(DBTable): pass
 
 class Person(DBTable):
     @validates('email')
@@ -125,20 +80,15 @@
         delchars = allchars.translate(allchars, string.digits)
         return unicode(str(value).translate(allchars, delchars))
 
-class Ratio(DBTable):
-    pass
+class Ratio(DBTable): pass
 
-class SubFormat(DBTable):
-    pass
+class SubFormat(DBTable): pass
 
-class Tag(DBTable):
-    pass
+class Tag(DBTable): pass
 
-class VCodec(DBTable):
-    pass
+class VCodec(DBTable): pass
 
-class Volume(DBTable):
-    pass
+class Volume(DBTable): pass
 
 class Poster(object):
     def __init__(self, md5sum=None, data=None):
@@ -173,10 +123,10 @@
 
 class MovieLang(object):
     def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
-        self.lang_id      = lang_id
-        self.type         = type
-        self.acodec_id    = acodec_id
-        self.achannel_id  = achannel_id
+        self.lang_id = lang_id
+        self.type = type
+        self.acodec_id = acodec_id
+        self.achannel_id = achannel_id
         self.subformat_id = subformat_id
     def __repr__(self):
         return "<MovieLang:%s-%s (Type:%s ACodec:%s AChannel:%s SubFormat:%s)>" % \
@@ -206,7 +156,7 @@
 ### table definitions ######################################### {{{
 movies_table = Table('movies', metadata,
     Column('movie_id', Integer, primary_key = True),
-    Column('number', Integer, nullable=False, unique=True),
+    Column('number', Integer, nullable=False, unique=True, index=True),
     Column('collection_id', Integer, ForeignKey('collections.collection_id')),
     Column('volume_id', Integer, ForeignKey('volumes.volume_id')),
     Column('medium_id', Integer, ForeignKey('media.medium_id')),
@@ -216,14 +166,14 @@
     Column('seen', Boolean, nullable=False, default=False),
     Column('rating', SmallInteger(2)),
     Column('color', SmallInteger),
-    Column('cond', SmallInteger),    # MySQL will not accept name "condition"
+    Column('cond', SmallInteger), # MySQL will not accept name "condition"
     Column('layers', SmallInteger),
     Column('region', SmallInteger),
     Column('media_num', SmallInteger),
     Column('runtime', Integer),
     Column('year', Integer),
-    Column('o_title', Unicode(256)),
-    Column('title', Unicode(256)),
+    Column('o_title', Unicode(256), index=True),
+    Column('title', Unicode(256), index=True),
     Column('director', Unicode(256)),
     Column('screenplay', Unicode(256)),
     Column('cameraman', Unicode(256)),
@@ -236,9 +186,9 @@
     Column('poster_md5', Unicode(32), ForeignKey('posters.md5sum')),
     Column('studio', Unicode(128)),
     Column('classification', Unicode(128)),
-    Column('cast', TEXT),
-    Column('plot', TEXT),
-    Column('notes', TEXT))
+    Column('cast', Text),
+    Column('plot', Text),
+    Column('notes', Text))
 
 loans_table = Table('loans', metadata,
     Column('loan_id', Integer, primary_key=True),



From piotrek at mail.berlios.de  Wed Dec  3 21:25:24 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Wed, 3 Dec 2008 21:25:24 +0100
Subject: [Griffith-svn] r1079 - trunk/lib
Message-ID: <200812032025.mB3KPOSA025474@sheep.berlios.de>

Author: piotrek
Date: 2008-12-03 21:25:24 +0100 (Wed, 03 Dec 2008)
New Revision: 1079

Modified:
   trunk/lib/db.py
   trunk/lib/dbupgrade.py
Log:
create index in db_version=4 (not yet available)


Modified: trunk/lib/db.py
===================================================================
--- trunk/lib/db.py	2008-12-03 19:59:45 UTC (rev 1078)
+++ trunk/lib/db.py	2008-12-03 20:25:24 UTC (rev 1079)
@@ -54,15 +54,17 @@
      #}}}
 
 ### clases #################################################### {{{
-class AChannel(DBTable): pass
 
+class AChannel(DBTable): pass
 class ACodec(DBTable): pass
-
 class Collection(DBTable): pass
-
 class Lang(DBTable): pass
-
 class Medium(DBTable): pass
+class Ratio(DBTable): pass
+class SubFormat(DBTable): pass
+class Tag(DBTable): pass
+class VCodec(DBTable): pass
+class Volume(DBTable): pass
 
 class Person(DBTable):
     @validates('email')
@@ -80,16 +82,6 @@
         delchars = allchars.translate(allchars, string.digits)
         return unicode(str(value).translate(allchars, delchars))
 
-class Ratio(DBTable): pass
-
-class SubFormat(DBTable): pass
-
-class Tag(DBTable): pass
-
-class VCodec(DBTable): pass
-
-class Volume(DBTable): pass
-
 class Poster(object):
     def __init__(self, md5sum=None, data=None):
         if md5sum and data:
@@ -113,9 +105,11 @@
 class Movie(object):
     def __repr__(self):
         return "<Movie:%s (number=%s)>" % (self.movie_id, self.number)
+
     def __contains__(self, name):
         if name in ('volume','collection','medium','vcodec','loans','tags','languages','lectors','dubbings','subtitles'): return True
         else: return name in movies_table.columns
+
     def __getitem__(self, name):
         if name in self:
             return getattr(self, name)
@@ -128,6 +122,7 @@
         self.acodec_id = acodec_id
         self.achannel_id = achannel_id
         self.subformat_id = subformat_id
+
     def __repr__(self):
         return "<MovieLang:%s-%s (Type:%s ACodec:%s AChannel:%s SubFormat:%s)>" % \
             (self.movie_id, self.lang_id, self.type, self.acodec_id, self.achannel_id, self.subformat_id)
@@ -135,6 +130,7 @@
 class MovieTag(object):
     def __init__(self, tag_id=None):
         self.tag_id = tag_id
+
     def __repr__(self):
         return "<MovieTag:%s-%s>" % (self.movie_id, self.tag_id)
 
@@ -144,8 +140,10 @@
             self.name = name
             #self.data = marshal.dumps(cond)
             self.conditions = cond
+
     def __repr__(self):
         return "<Filter(%s)>" % self.name
+
     def _set_cond(self, cond):
         self.data = marshal.dumps(cond)
     def _get_cond(self):
@@ -157,11 +155,11 @@
 movies_table = Table('movies', metadata,
     Column('movie_id', Integer, primary_key = True),
     Column('number', Integer, nullable=False, unique=True, index=True),
-    Column('collection_id', Integer, ForeignKey('collections.collection_id')),
-    Column('volume_id', Integer, ForeignKey('volumes.volume_id')),
-    Column('medium_id', Integer, ForeignKey('media.medium_id')),
-    Column('ratio_id', Integer, ForeignKey('ratios.ratio_id')),
-    Column('vcodec_id', Integer, ForeignKey('vcodecs.vcodec_id')),
+    Column('collection_id', ForeignKey('collections.collection_id')),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('medium_id', ForeignKey('media.medium_id')),
+    Column('ratio_id', ForeignKey('ratios.ratio_id')),
+    Column('vcodec_id', ForeignKey('vcodecs.vcodec_id')),
     Column('loaned', Boolean, nullable=False, default=False),
     Column('seen', Boolean, nullable=False, default=False),
     Column('rating', SmallInteger(2)),
@@ -183,7 +181,7 @@
     Column('country', Unicode(128)),
     Column('genre', Unicode(128)),
     Column('image', Unicode(128)), # XXX: deprecated
-    Column('poster_md5', Unicode(32), ForeignKey('posters.md5sum')),
+    Column('poster_md5', ForeignKey('posters.md5sum')),
     Column('studio', Unicode(128)),
     Column('classification', Unicode(128)),
     Column('cast', Text),
@@ -192,10 +190,10 @@
 
 loans_table = Table('loans', metadata,
     Column('loan_id', Integer, primary_key=True),
-    Column('person_id', Integer, ForeignKey('people.person_id'), nullable=False),
-    Column('movie_id', Integer, ForeignKey('movies.movie_id'), nullable=False),
-    Column('volume_id', Integer, ForeignKey('volumes.volume_id')),
-    Column('collection_id', Integer, ForeignKey('collections.collection_id')),
+    Column('person_id',  ForeignKey('people.person_id'), nullable=False),
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('collection_id', ForeignKey('collections.collection_id')),
     Column('date', Date, nullable=False, default=func.current_date()),
     Column('return_date', Date, nullable=True))
 
@@ -250,16 +248,16 @@
 movie_lang_table = Table('movie_lang', metadata,
     Column('ml_id', Integer, primary_key=True),
     Column('type', SmallInteger), # 0: Original, 1:lector, 2:dubbing, 3:subtitle
-    Column('movie_id', Integer, ForeignKey('movies.movie_id'), nullable=False),
-    Column('lang_id', Integer, ForeignKey('languages.lang_id'), nullable=False),
-    Column('acodec_id', Integer, ForeignKey('acodecs.acodec_id')),
-    Column('achannel_id', Integer, ForeignKey('achannels.achannel_id')),
-    Column('subformat_id', Integer, ForeignKey('subformats.subformat_id')))
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('lang_id', ForeignKey('languages.lang_id'), nullable=False),
+    Column('acodec_id', ForeignKey('acodecs.acodec_id')),
+    Column('achannel_id', ForeignKey('achannels.achannel_id')),
+    Column('subformat_id', ForeignKey('subformats.subformat_id')))
 
 movie_tag_table = Table('movie_tag', metadata,
     Column('mt_id', Integer, primary_key=True),
-    Column('movie_id', Integer, ForeignKey('movies.movie_id')),
-    Column('tag_id', Integer, ForeignKey('tags.tag_id')))
+    Column('movie_id', ForeignKey('movies.movie_id')),
+    Column('tag_id', ForeignKey('tags.tag_id')))
 
 configuration_table = Table('configuration', metadata,
     Column('param', Unicode(16), primary_key=True),

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2008-12-03 19:59:45 UTC (rev 1078)
+++ trunk/lib/dbupgrade.py	2008-12-03 20:25:24 UTC (rev 1079)
@@ -187,6 +187,21 @@
         db_version.value = unicode(version)
         self.session.add(db_version)
         self.session.commit()
+
+    if False and version == 3:    # fix changes between v3 and v4
+        version += 1
+        log.info("Upgrading database to version %d..." % version)
+
+        i = Index('ix_movies_title', db.movies_table.c.title)
+        i.create(bind=b)
+        i = Index('ix_movies_o_title', db.movies_table.c.o_title)
+        i.create(bind=b)
+        
+        db_version = self.session.query(db.Configuration).filter_by(param=u'version').one()
+        db_version.value = unicode(version)
+        self.session.add(db_version)
+        self.session.commit()
+
     return True
 
 



From piotrek at mail.berlios.de  Thu Dec  4 23:02:13 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Thu, 4 Dec 2008 23:02:13 +0100
Subject: [Griffith-svn] r1080 - in online/trunk: . deployment
	deployment/mod_proxy deployment/mod_wsgi docs docs/deployment
Message-ID: <200812042202.mB4M2Ds2030277@sheep.berlios.de>

Author: piotrek
Date: 2008-12-04 23:02:12 +0100 (Thu, 04 Dec 2008)
New Revision: 1080

Added:
   online/trunk/deployment/
   online/trunk/deployment/mod_proxy/
   online/trunk/deployment/mod_proxy/apache_directory.conf
   online/trunk/deployment/mod_proxy/apache_domain.conf
   online/trunk/deployment/mod_wsgi/
   online/trunk/deployment/mod_wsgi/apache_directory.conf
   online/trunk/deployment/mod_wsgi/apache_domain.conf
   online/trunk/deployment/mod_wsgi/dispatch.wsgi
   online/trunk/docs/deployment/
   online/trunk/docs/deployment/index.txt
   online/trunk/docs/deployment/mod_proxy.txt
   online/trunk/docs/deployment/mod_wsgi.txt
   online/trunk/init.sh
   online/trunk/start.py
Log:
add deployment scripts/configs/docs


Added: online/trunk/deployment/mod_proxy/apache_directory.conf
===================================================================
--- online/trunk/deployment/mod_proxy/apache_directory.conf	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/deployment/mod_proxy/apache_directory.conf	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,15 @@
+# Proxy
+# retry=5 - default is 60 seconds which means that Apache would show an error
+#         page for 60 seconds if any connection to the Paste HTTP server failed
+ProxyPass /webgriffith http://localhost:5000 retry=5
+ProxyPassReverse /webgriffith http://localhost:5000
+ProxyPreserveHost On
+<Proxy *>
+    Order deny,allow
+    Allow from all
+</Proxy>
+<Directory /srv/webgriffith/deployment/mod_proxy>
+	Order deny,allow
+	Allow from all
+</Directory>
+# vim: ft=apache

Added: online/trunk/deployment/mod_proxy/apache_domain.conf
===================================================================
--- online/trunk/deployment/mod_proxy/apache_domain.conf	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/deployment/mod_proxy/apache_domain.conf	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,21 @@
+<VirtualHost *>
+    ServerName webgriffith.mydomain.com
+    ServerAlias www.webgriffith.mydomain.com
+
+    # Logfiles
+    ErrorLog  /srv/webgriffith/logs/apache.error.log
+    CustomLog /srv/webgriffith/logs/apache.access.log combined
+
+    # Proxy
+    # retry=5 - default is 60 seconds which means that Apache would show an
+    #           error page for 60 seconds if any connection to the Paste HTTP
+    #           server failed
+    ProxyPass / http://localhost:5000/ retry=5
+    ProxyPassReverse / http://localhost:5000/
+    ProxyPreserveHost On
+    <Proxy *>
+        Order deny,allow
+        Allow from all
+    </Proxy>
+</VirtualHost>
+# vim: ft=apache

Added: online/trunk/deployment/mod_wsgi/apache_directory.conf
===================================================================
--- online/trunk/deployment/mod_wsgi/apache_directory.conf	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/deployment/mod_wsgi/apache_directory.conf	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,12 @@
+# XXX: remember to update paths  
+
+# Setup mod_wsgi
+WSGIScriptAlias /webgriffith /srv/webgriffith/deployment/mod_wsgi/dispatch.wsgi
+#WSGIDaemonProcess user=griffith group=www-data processes=2 threads=25 display-name=webgriffith
+WSGIDaemonProcess griffith display-name=webgriffith
+WSGIProcessGroup griffith
+<Directory /srv/webgriffith/deployment/mod_wsgi>
+	Order deny,allow
+	Allow from all
+</Directory>
+# vim: ft=apache

Added: online/trunk/deployment/mod_wsgi/apache_domain.conf
===================================================================
--- online/trunk/deployment/mod_wsgi/apache_domain.conf	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/deployment/mod_wsgi/apache_domain.conf	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,21 @@
+<VirtualHost *>
+    ServerName webgriffith.mydomain.com
+    ServerAlias www.webgriffith.mydomain.com
+
+    # Logfiles
+    ErrorLog  /srv/webgriffith/logs/apache.error.log
+    CustomLog /srv/webgriffith/logs/apache.access.log combined
+
+    # Setup mod_wsgi
+    WSGIScriptAlias / /srv/webgriffith/deployment/mod_wsgi/dispatch.wsgi
+    #WSGIDaemonProcess user=griffith group=www-data processes=2 threads=25 display-name=webgriffith
+    WSGIDaemonProcess griffith display-name=webgriffith
+    WSGIProcessGroup griffith
+
+    <Directory /srv/webgriffith/deployment/mod_wsgi>
+        Order deny,allow
+        Allow from all
+    </Directory>
+
+</VirtualHost>
+# vim: ft=apache

Added: online/trunk/deployment/mod_wsgi/dispatch.wsgi
===================================================================
--- online/trunk/deployment/mod_wsgi/dispatch.wsgi	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/deployment/mod_wsgi/dispatch.wsgi	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,16 @@
+# vim: ft=python
+import site
+import sys
+import os
+
+root_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))
+sys.path.append(root_dir)
+
+lib = os.path.join(root_dir, '3rdparty')
+if os.path.isdir(lib):
+    sys.path.insert(1, lib)
+    #site.addsitedir(lib)
+
+# Load the Pylons application
+from paste.deploy import loadapp
+application = loadapp("config:%s/production.ini" % root_dir)

Added: online/trunk/docs/deployment/index.txt
===================================================================
--- online/trunk/docs/deployment/index.txt	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/docs/deployment/index.txt	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,45 @@
+built-in HTTP server
+====================
+
+preparing configuration file
+----------------------------
+
+ $ ./start.py make-config webgriffith production.ini
+ 
+ for developers:
+ $ ./start.py make-config webgriffith development.ini
+
+and tweak it as appropriate (set the right paths, domains, etc.)
+
+
+starting the server
+-------------------
+
+ development
+ ^^^^^^^^^^^
+
+$ ./start.py serve --reload development.ini
+or:
+$ ./start.py
+
+
+ production
+ ^^^^^^^^^^
+
+ $ ./start.py serve --daemon production.ini start
+ or:
+ $ ./init.sh start
+
+
+Apache
+======
+
+see mod_wsgi.txt and mod_proxy.txt for more details
+
+
+mod_wsgi vs. mod_proxy
+---------------------
+
+mod_proxy will not start the Pylons project itself (in opposite to mod_wsgi),
+you have to start it yourself, see "built-in HTTP server" above (and init.sh script)
+

Added: online/trunk/docs/deployment/mod_proxy.txt
===================================================================
--- online/trunk/docs/deployment/mod_proxy.txt	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/docs/deployment/mod_proxy.txt	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,29 @@
+Deploying WebGriffith using Apache's mod_proxy
+==============================================
+
+* create production.ini file if you don't have it yet (see index.txt)
+* update paths in files under deployment/mod_proxy/ directory
+* update WebGriffith instance's domain/port if it's different than the default
+  localhost:5000 (you can change it in .ini file)
+* if you want to use new domain for webgriffith:
+  + update domain name in mod_proxy/apache_domain.conf
+* if you want to use a directory:
+  + update directory name in mod_proxy/apache_directory.conf
+  + in ini file (f.e. production.ini), set prefix (see filter-with) to directory name
+* run these commands:
+
+  $ a2enmode proxy # if not enabled already
+  $ a2enmode proxy_http # if not enabled already
+
+  if you want to use a new domain:
+  $ ln -s `pwd`/deployment/mod_proxy/apache_domain.conf /etc/apache2/sites-available/webgriffith
+  
+  or if you want to use directory:
+  $ ln -s `pwd`/deployment/mod_proxy/apache_directory.conf /etc/apache2/sites-available/webgriffith
+ 
+  and finally:
+  $ a2ensite webgriffith
+  $ /etc/init.d/apache2 reload
+  $ update-rc.d -f webgriffith defaults # start at boot time
+
+

Added: online/trunk/docs/deployment/mod_wsgi.txt
===================================================================
--- online/trunk/docs/deployment/mod_wsgi.txt	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/docs/deployment/mod_wsgi.txt	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,25 @@
+Deploying WebGriffith using Apache's mod_wsgi
+=============================================
+
+* create production.ini file if you don't have it yet (see index.txt)
+* update paths in files under deployment/mod_wsgi/ directory
+* if you want to use new domain for webgriffith:
+  + update domain name in mod_wsgi/apache_domain.conf
+* if you want to use a directory:
+  + update directory name in mod_wsgi/apache_directory.conf
+  + in ini file (f.e. production.ini), set prefix (see filter-with) to directory name
+* run these commands:
+
+  $ a2enmode wsgi # if not enabled already
+
+  if you want to use a new domain:
+  $ ln -s `pwd`/deployment/mod_wsgi/apache2_conf-domain /etc/apache2/sites-available/webgriffith
+  
+  or if you want to use directory:
+  $ ln -s `pwd`/deployment/mod_wsgi/apache_directory.conf /etc/apache2/sites-available/webgriffith
+ 
+  and finally:
+  $ a2ensite webgriffith
+  $ /etc/init.d/apache2 reload
+  $ update-rc.d -f webgriffith defaults # start at boot time
+

Added: online/trunk/init.sh
===================================================================
--- online/trunk/init.sh	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/init.sh	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,20 @@
+#!/bin/sh -e
+
+DIRECTORY=`pwd` # FIXME: replace it with real path
+
+case "$1" in
+  start)
+    $DIRECTORY/start.py serve --daemon --pid-file=$DIRECTORY/webgriffith.pid --log-file=$DIRECTORY/logs/deamon.log $DIRECTORY/production.ini start
+    ;;
+  stop)
+    $DIRECTORY/start.py serve --daemon --pid-file=$DIRECTORY/webgriffith.pid --log-file=$DIRECTORY/logs/deamon.log $DIRECTORY/production.ini stop
+    ;;
+  restart)
+    $DIRECTORY/start.py serve --daemon --pid-file=$DIRECTORY/webgriffith.pid --log-file=$DIRECTORY/logs/deamon.log $DIRECTORY/production.ini restart
+    ;;
+  *)
+    echo $"Usage: $0 {start|stop|restart}"
+    exit 1
+esac
+
+exit 0


Property changes on: online/trunk/init.sh
___________________________________________________________________
Name: svn:executable
   + *

Added: online/trunk/start.py
===================================================================
--- online/trunk/start.py	2008-12-03 20:25:24 UTC (rev 1079)
+++ online/trunk/start.py	2008-12-04 22:02:12 UTC (rev 1080)
@@ -0,0 +1,23 @@
+#!/usr/bin/env python2.5
+
+import sys
+import os
+
+try:
+    here = __file__
+except NameError:
+    here = sys.argv[0]
+
+lib = os.path.abspath(os.path.join(os.path.dirname(here), '3rdparty'))
+if os.path.isdir(lib):
+    sys.path.insert(1, lib)
+
+if len(sys.argv) == 1: # no arguments, lets prepare few for paster (development only)
+    sys.argv.append('serve')
+    sys.argv.append('--reload')
+    sys.argv.append('development.ini')
+
+# run paster
+from paste.script import command
+command.run()
+


Property changes on: online/trunk/start.py
___________________________________________________________________
Name: svn:executable
   + *



From piotrek at mail.berlios.de  Thu Dec  4 23:03:56 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Thu, 4 Dec 2008 23:03:56 +0100
Subject: [Griffith-svn] r1081 - online/trunk
Message-ID: <200812042203.mB4M3uir030451@sheep.berlios.de>

Author: piotrek
Date: 2008-12-04 23:03:56 +0100 (Thu, 04 Dec 2008)
New Revision: 1081

Added:
   online/trunk/3rdparty/
   online/trunk/logs/
Log:
add placeholders




From piotrek at mail.berlios.de  Thu Dec  4 23:27:47 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Thu, 4 Dec 2008 23:27:47 +0100
Subject: [Griffith-svn] r1082 - online/trunk/docs/deployment
Message-ID: <200812042227.mB4MRlIv032002@sheep.berlios.de>

Author: piotrek
Date: 2008-12-04 23:27:47 +0100 (Thu, 04 Dec 2008)
New Revision: 1082

Modified:
   online/trunk/docs/deployment/index.txt
Log:
add a note about dependencies


Modified: online/trunk/docs/deployment/index.txt
===================================================================
--- online/trunk/docs/deployment/index.txt	2008-12-04 22:03:56 UTC (rev 1081)
+++ online/trunk/docs/deployment/index.txt	2008-12-04 22:27:47 UTC (rev 1082)
@@ -43,3 +43,10 @@
 mod_proxy will not start the Pylons project itself (in opposite to mod_wsgi),
 you have to start it yourself, see "built-in HTTP server" above (and init.sh script)
 
+
+Dependencies
+============
+
+Please install python-pylons 0.9.7 package (backports for Debian Etch and Lenny
+will be available on http://pylons.debian.net soon) or download 3rdparty.tar.bz2
+from http://storage.griffith.cc/ and unpack it into 3rdparty directory.



From piotrek at mail.berlios.de  Thu Dec  4 23:34:33 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Thu, 4 Dec 2008 23:34:33 +0100
Subject: [Griffith-svn] r1083 - online/trunk/webgriffith/model
Message-ID: <200812042234.mB4MYXIx032590@sheep.berlios.de>

Author: piotrek
Date: 2008-12-04 23:34:32 +0100 (Thu, 04 Dec 2008)
New Revision: 1083

Modified:
   online/trunk/webgriffith/model/__init__.py
   online/trunk/webgriffith/model/db.py
Log:
sync db.py with Griffith's trunk


Modified: online/trunk/webgriffith/model/__init__.py
===================================================================
--- online/trunk/webgriffith/model/__init__.py	2008-12-04 22:27:47 UTC (rev 1082)
+++ online/trunk/webgriffith/model/__init__.py	2008-12-04 22:34:32 UTC (rev 1083)
@@ -6,34 +6,9 @@
 from webgriffith.model.db import *
 
 def init_model(engine):
-    """Call me before using any of the tables or classes in the model"""
-    ## Reflected tables must be defined and mapped here
-    #global reflected_table
-    #reflected_table = sa.Table("Reflected", meta.metadata, autoload=True,
-    #                           autoload_with=engine)
-    #orm.mapper(Reflected, reflected_table)
 
-    sm = orm.sessionmaker(autoflush=True, autocommit=False, bind=engine)
+    sm = orm.sessionmaker(bind=engine)
 
     meta.engine = engine
     meta.Session = orm.scoped_session(sm)
 
-
-## Non-reflected tables may be defined and mapped at module level
-#foo_table = sa.Table("Foo", meta.metadata,
-#    sa.Column("id", sa.types.Integer, primary_key=True),
-#    sa.Column("bar", sa.types.String(255), nullable=False),
-#    )
-#
-#class Foo(object):
-#    pass
-#
-#orm.mapper(Foo, foo_table)
-
-
-## Classes for reflected tables may be defined here, but the table and
-## mapping itself must be done in the init_model function
-#reflected_table = None
-#
-#class Reflected(object):
-#    pass

Modified: online/trunk/webgriffith/model/db.py
===================================================================
--- online/trunk/webgriffith/model/db.py	2008-12-04 22:27:47 UTC (rev 1082)
+++ online/trunk/webgriffith/model/db.py	2008-12-04 22:34:32 UTC (rev 1083)
@@ -1,6 +1,6 @@
 # -*- coding: UTF-8 -*-
 # vim: fdm=marker
-__revision__ = '$Id: $'
+__revision__ = '$Id: db.py 1079 2008-12-03 20:25:24Z piotrek $'
 
 # Copyright (c) 2008 Vasco Nunes, Piotr O?arowski
 #
@@ -51,64 +51,21 @@
             log.warning("%s: empty name (%s)", self.__class__.__name__, name)
             raise ValueError(_("Name cannot be empty"))
         return name.strip()
-
-    def remove_from_db(self):
-        dbtable_id = self.__dict__[self.__class__.__name__.lower() + '_id']
-        if dbtable_id<1:
-            log.info("%s: none selected => none removed", self.__class__.__name__)
-            return False
-        tmp = None
-        if hasattr(self,'movies'):
-            tmp = getattr(self,'movies')
-        elif hasattr(self,'movielangs'):
-            tmp = getattr(self,'movielangs')
-        if tmp and len(tmp)>0:
-            gutils.warning(self, msg=_("This item is in use.\nOperation aborted!"))
-            return False
-        log.info("%s: removing '%s' (id=%s) from database...", self.__class__.__name__, self.name, dbtable_id)
-        self.delete()
-        try:
-            self.flush()
-        except exceptions.SQLError, e:
-            log.info("%s: remove_from_db: %s", self.__class__.__name__, e)
-            return False
-        #self.refresh()
-        return True
-    def update_in_db(self):
-        dbtable_id = self.__dict__[self.__class__.__name__.lower() + '_id']
-        if dbtable_id<1:
-            log.info("%s: none selected => none updated", self.__class__.__name__)
-            return False
-        tmp = self.query.filter_by(name=self.name).first()
-        if tmp is not None and tmp is not self:
-            gutils.warning(self, msg=_("This name is already in use!"))
-            return False
-        self.update()
-        try:
-            self.flush()
-        except exceptions.SQLError, e:
-            log.info("%s: update_in_db: %s", self.__class__.__name__, e)
-            return False
-        self.refresh()
-        return True
      #}}}
 
 ### clases #################################################### {{{
-class AChannel(DBTable):
-    pass
 
-class ACodec(DBTable):
-    pass
+class AChannel(DBTable): pass
+class ACodec(DBTable): pass
+class Collection(DBTable): pass
+class Lang(DBTable): pass
+class Medium(DBTable): pass
+class Ratio(DBTable): pass
+class SubFormat(DBTable): pass
+class Tag(DBTable): pass
+class VCodec(DBTable): pass
+class Volume(DBTable): pass
 
-class Collection(DBTable):
-    pass
-
-class Lang(DBTable):
-    pass
-
-class Medium(DBTable):
-    pass
-
 class Person(DBTable):
     @validates('email')
     def _validate_email(self, key, address):
@@ -125,21 +82,6 @@
         delchars = allchars.translate(allchars, string.digits)
         return unicode(str(value).translate(allchars, delchars))
 
-class Ratio(DBTable):
-    pass
-
-class SubFormat(DBTable):
-    pass
-
-class Tag(DBTable):
-    pass
-
-class VCodec(DBTable):
-    pass
-
-class Volume(DBTable):
-    pass
-
 class Poster(object):
     def __init__(self, md5sum=None, data=None):
         if md5sum and data:
@@ -163,9 +105,11 @@
 class Movie(object):
     def __repr__(self):
         return "<Movie:%s (number=%s)>" % (self.movie_id, self.number)
+
     def __contains__(self, name):
         if name in ('volume','collection','medium','vcodec','loans','tags','languages','lectors','dubbings','subtitles'): return True
         else: return name in movies_table.columns
+
     def __getitem__(self, name):
         if name in self:
             return getattr(self, name)
@@ -173,11 +117,12 @@
 
 class MovieLang(object):
     def __init__(self, lang_id=None, type=None, acodec_id=None, achannel_id=None, subformat_id=None):
-        self.lang_id      = lang_id
-        self.type         = type
-        self.acodec_id    = acodec_id
-        self.achannel_id  = achannel_id
+        self.lang_id = lang_id
+        self.type = type
+        self.acodec_id = acodec_id
+        self.achannel_id = achannel_id
         self.subformat_id = subformat_id
+
     def __repr__(self):
         return "<MovieLang:%s-%s (Type:%s ACodec:%s AChannel:%s SubFormat:%s)>" % \
             (self.movie_id, self.lang_id, self.type, self.acodec_id, self.achannel_id, self.subformat_id)
@@ -185,6 +130,7 @@
 class MovieTag(object):
     def __init__(self, tag_id=None):
         self.tag_id = tag_id
+
     def __repr__(self):
         return "<MovieTag:%s-%s>" % (self.movie_id, self.tag_id)
 
@@ -194,8 +140,10 @@
             self.name = name
             #self.data = marshal.dumps(cond)
             self.conditions = cond
+
     def __repr__(self):
         return "<Filter(%s)>" % self.name
+
     def _set_cond(self, cond):
         self.data = marshal.dumps(cond)
     def _get_cond(self):
@@ -206,24 +154,24 @@
 ### table definitions ######################################### {{{
 movies_table = Table('movies', metadata,
     Column('movie_id', Integer, primary_key = True),
-    Column('number', Integer, nullable=False, unique=True),
-    Column('collection_id', Integer, ForeignKey('collections.collection_id')),
-    Column('volume_id', Integer, ForeignKey('volumes.volume_id')),
-    Column('medium_id', Integer, ForeignKey('media.medium_id')),
-    Column('ratio_id', Integer, ForeignKey('ratios.ratio_id')),
-    Column('vcodec_id', Integer, ForeignKey('vcodecs.vcodec_id')),
+    Column('number', Integer, nullable=False, unique=True, index=True),
+    Column('collection_id', ForeignKey('collections.collection_id')),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('medium_id', ForeignKey('media.medium_id')),
+    Column('ratio_id', ForeignKey('ratios.ratio_id')),
+    Column('vcodec_id', ForeignKey('vcodecs.vcodec_id')),
     Column('loaned', Boolean, nullable=False, default=False),
     Column('seen', Boolean, nullable=False, default=False),
     Column('rating', SmallInteger(2)),
     Column('color', SmallInteger),
-    Column('cond', SmallInteger),    # MySQL will not accept name "condition"
+    Column('cond', SmallInteger), # MySQL will not accept name "condition"
     Column('layers', SmallInteger),
     Column('region', SmallInteger),
     Column('media_num', SmallInteger),
     Column('runtime', Integer),
     Column('year', Integer),
-    Column('o_title', Unicode(256)),
-    Column('title', Unicode(256)),
+    Column('o_title', Unicode(256), index=True),
+    Column('title', Unicode(256), index=True),
     Column('director', Unicode(256)),
     Column('screenplay', Unicode(256)),
     Column('cameraman', Unicode(256)),
@@ -233,19 +181,19 @@
     Column('country', Unicode(128)),
     Column('genre', Unicode(128)),
     Column('image', Unicode(128)), # XXX: deprecated
-    Column('poster_md5', Unicode(32), ForeignKey('posters.md5sum')),
+    Column('poster_md5', ForeignKey('posters.md5sum')),
     Column('studio', Unicode(128)),
     Column('classification', Unicode(128)),
-    Column('cast', TEXT),
-    Column('plot', TEXT),
-    Column('notes', TEXT))
+    Column('cast', Text),
+    Column('plot', Text),
+    Column('notes', Text))
 
 loans_table = Table('loans', metadata,
     Column('loan_id', Integer, primary_key=True),
-    Column('person_id', Integer, ForeignKey('people.person_id'), nullable=False),
-    Column('movie_id', Integer, ForeignKey('movies.movie_id'), nullable=False),
-    Column('volume_id', Integer, ForeignKey('volumes.volume_id')),
-    Column('collection_id', Integer, ForeignKey('collections.collection_id')),
+    Column('person_id',  ForeignKey('people.person_id'), nullable=False),
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('volume_id', ForeignKey('volumes.volume_id')),
+    Column('collection_id', ForeignKey('collections.collection_id')),
     Column('date', Date, nullable=False, default=func.current_date()),
     Column('return_date', Date, nullable=True))
 
@@ -300,16 +248,16 @@
 movie_lang_table = Table('movie_lang', metadata,
     Column('ml_id', Integer, primary_key=True),
     Column('type', SmallInteger), # 0: Original, 1:lector, 2:dubbing, 3:subtitle
-    Column('movie_id', Integer, ForeignKey('movies.movie_id'), nullable=False),
-    Column('lang_id', Integer, ForeignKey('languages.lang_id'), nullable=False),
-    Column('acodec_id', Integer, ForeignKey('acodecs.acodec_id')),
-    Column('achannel_id', Integer, ForeignKey('achannels.achannel_id')),
-    Column('subformat_id', Integer, ForeignKey('subformats.subformat_id')))
+    Column('movie_id', ForeignKey('movies.movie_id'), nullable=False),
+    Column('lang_id', ForeignKey('languages.lang_id'), nullable=False),
+    Column('acodec_id', ForeignKey('acodecs.acodec_id')),
+    Column('achannel_id', ForeignKey('achannels.achannel_id')),
+    Column('subformat_id', ForeignKey('subformats.subformat_id')))
 
 movie_tag_table = Table('movie_tag', metadata,
     Column('mt_id', Integer, primary_key=True),
-    Column('movie_id', Integer, ForeignKey('movies.movie_id')),
-    Column('tag_id', Integer, ForeignKey('tags.tag_id')))
+    Column('movie_id', ForeignKey('movies.movie_id')),
+    Column('tag_id', ForeignKey('tags.tag_id')))
 
 configuration_table = Table('configuration', metadata,
     Column('param', Unicode(16), primary_key=True),



From piotrek at mail.berlios.de  Sun Dec  7 22:55:59 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sun, 7 Dec 2008 22:55:59 +0100
Subject: [Griffith-svn] r1084 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200812072155.mB7LtxiA013189@sheep.berlios.de>

Author: piotrek
Date: 2008-12-07 22:55:58 +0100 (Sun, 07 Dec 2008)
New Revision: 1084

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieCSFD.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieCSFD.py
Log:
CSFD movie plugin updated (thanks to Ale?\197?\161 Nejdr)


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-04 22:34:32 UTC (rev 1083)
+++ branches/0.9.x/ChangeLog	2008-12-07 21:55:58 UTC (rev 1084)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O??arowski
 
 
+2008-12-07  Piotr O??arowski
+	* CSFD movie plugin updated (thanks to Ale?? Nejdr)
+
 2008-11-30  Piotr O??arowski
 	* CSFD movie plugin updated (thanks to Otakar)
 	* Sync FDb, Filmweb and Stopklatka movie plugins with trunk

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieCSFD.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieCSFD.py	2008-12-04 22:34:32 UTC (rev 1083)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieCSFD.py	2008-12-07 21:55:58 UTC (rev 1084)
@@ -1,172 +1,177 @@
-# -*- coding: utf-8 -*-
-__revision__ = '$Id: PluginMovieCSFD.py 12 2007-01-05 09:08:06Z blondak $'
-# Copyright (c) 2005 Blondak
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Library General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
-
-# You may use and distribute this software under the terms of the
-# GNU General Public License, version 2 or later
-
-import gutils
-import movie,string
-import re
-
-plugin_name = "CSFD"
-plugin_description = "Cesko-Slovenska Filmova Databaze"
-plugin_url = "www.csfd.cz"
-plugin_language = _("Czech")
-plugin_author = "Blondak"
-plugin_author_email = "<blondak at neser.cz>"
-plugin_version = "0.8"
-
-class Plugin(movie.Movie):
-	def __init__(self, id):
-		self.movie_id = id
-		self.encode = "utf-8"
-		self.url = "http://www.csfd.cz/"+str(id)
-
-	def get_image(self):
-		self.image_url = re.search(r"background=\"http://img.csfd.cz/posters/([^\"]*)\"",self.page)
-		if self.image_url:
-			self.image_url = "http://img.csfd.cz/posters/" + gutils.strip_tags(self.image_url.group(1))
-		else:
-			self.image_url = ""
-
-	def get_o_title(self):
-		self.o_title = re.findall(r"/images/flag_[\d]+\.gif'[^>]*></td><td>([^<]*)",self.page)
-		if len(self.o_title)>0:
-			self.o_title = self.o_title[len(self.o_title)-1]
-		else:
-			self.o_title = ""
-		if self.o_title == "":
-			self.o_title = self.get_title(True)
-
-	def get_title(self, ret=False):
-		data = re.search(r"<title>CSFD.cz - ([^,]*)\(\d{4}\)",self.page)
-		if data:
-			data = data.group(1)
-		else:
-			data = ""
-		if ret is True:
-			return data
-		else:
-			self.title = data
-
-	def get_director(self):
-		self.director = re.search(r"Re?ie:(.*)<br><b>Hraj?:",self.page)
-		if self.director:
-			self.director = gutils.strip_tags(self.director.group(1))
-		else:
-			self.director = ""
-
-	def get_year(self):
-		self.year = re.search(r"<title>.*\(([\d]+)\)",self.page)
-		if self.year:
-			self.year = self.year.group(1)
-		else:
-			self.year = ""
-
-	def get_runtime(self):
-		self.runtime = re.search(r"([\d]+) min</b><BR><BR><b>Re?ie:",self.page)
-		if self.runtime:
-			self.runtime = gutils.strip_tags(self.runtime.group(1))
-		else:
-			self.runtime = ""
-
-	def get_genre(self):
-		self.genre = re.search(r"/images/flag_[\d]+.gif.*</table>[\s]*<br>[\s]*<b>([^&:]*)&nbsp;<br>",self.page)
-		if self.genre:
-			self.genre = gutils.strip_tags(self.genre.group(1))
-		else:
-			self.genre = ""
-
-	def get_country(self):
-		self.country = re.search(r"/images/flag_[\d]+.gif.*</table>[\s]*<br>[\s]*<b>[^&:]*&nbsp;<br>(.*), [\d]{4}, ",self.page)
-		if self.country:
-			self.country = gutils.strip_tags(self.country.group(1))
-		else:
-			self.country = ""
-
-	def get_cast(self):
-		self.cast = re.search(r"Hraj?: (.*)</div><br>",self.page)
-		if self.cast:
-			self.cast = gutils.strip_tags(self.cast.group(1))
-		else:
-			self.cast = ""
-
-	def get_plot(self):
-		self.plot = gutils.strip_tags(string.replace(gutils.trim(self.page,"Obsah:","</td>"),"(ofici?ln? text distributora)",""))
-
-	def get_site(self):
-		self.site = re.search(r"href=[\"'](http://.*imdb\.com/title/[^\"']*)",self.page)
-		if self.site:
-			self.site = gutils.strip_tags(self.site.group(1))
-		else:
-			self.site = ""
-
-	def get_trailer(self):
-		self.trailer = re.search(r"<a href=\"([^\"]*)\"[^>]*>trailer<br><img src=\"http://img.csfd.cz/images/new/film/ikona_trailer",self.page)
-		if self.trailer:
-			self.trailer = "http://www.csfd.cz/"+gutils.strip_tags(self.trailer.group(1))
-
-		else:
-			self.trailer = ""
-
-	def get_rating(self):
-		self.rating = re.search(r"[\s]*([\d]+)%[\s]*</td>",self.page)
-		if self.rating:
-			self.rating = str(float(self.rating.group(1))/10)
-		else:
-			self.rating = ""
-
-	def get_o_site(self):
-		self.o_site = re.search(r"href=\"([^\"]*)\"[^>]*>www<br><img src=\"http://img.csfd.cz/images/new/film/ikona_www",self.page)
-		if self.o_site:
-			self.o_site = gutils.strip_tags(self.o_site.group(1))
-		else:
-			self.o_site = ""
-
-	def get_notes(self):
-		self.notes = ""
-
-	def get_studio(self):
-		self.studio = ""
-
-	def get_classification(self):
-		self.classification = ""
-
-class SearchPlugin(movie.SearchMovie):
-	def __init__(self):
-		self.encode = "utf-8"
-		self.original_url_search   = "http://www.csfd.cz/search_pg.php?search="
-		self.translated_url_search = "http://www.csfd.cz/search_pg.php?search="
-
-	def search(self,parent_window):
-		self.open_search(parent_window)
-		return self.page
-
-	def get_searches(self):
-		tmp_id = self.re_items=re.search(r"window.location.href='http://www.csfd.cz/(/film/[^']*)'",self.page)
-		if tmp_id:
-			self.ids.append(tmp_id.group(1))
-		else:
-			self.re_items=re.findall(r"href=\"(/film/[^\"]+)[^>]*>([^<]+)</a>([^<]*)",self.page)
-			self.number_results = len(self.re_items)
-			if (self.number_results > 0):
-				for item in self.re_items:
-					self.ids.append(item[0])
-#					self.titles.append(gutils.convert_entities(item[1])+' '+item[2])
-					self.titles.append(item[1]+' '+item[2])
-
+# -*- coding: utf-8 -*-
+__revision__ = '$Id: PluginMovieCSFD.py 12 2007-01-05 09:08:06Z blondak $'
+# Copyright (c) 2005 Blondak
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import gutils
+import movie,string
+import re
+
+plugin_name = "CSFD"
+plugin_description = "Cesko-Slovenska Filmova Databaze"
+plugin_url = "www.csfd.cz"
+plugin_language = _("Czech")
+plugin_author = "Blondak"
+plugin_author_email = "<blondak at neser.cz>"
+plugin_version = '0.9'
+
+class Plugin(movie.Movie):
+    def __init__(self, id):
+        self.movie_id = id
+        self.encode = "utf-8"
+        self.url = "http://www.csfd.cz/"+str(id)
+
+    def get_image(self):
+        self.image_url = re.search(r"background=\"http://img.csfd.cz/posters/([^\"]*)\"",self.page)
+        if self.image_url:
+            self.image_url = "http://img.csfd.cz/posters/" + gutils.strip_tags(self.image_url.group(1))
+        else:
+            self.image_url = ""
+
+    def get_o_title(self):
+        self.o_title = re.findall(r"/images/flag_[\d]+\.gif'[^>]*></td><td>([^<]*)",self.page)
+        if len(self.o_title)>0:
+            self.o_title = self.o_title[len(self.o_title)-1]
+        else:
+            self.o_title = ""
+        if self.o_title == "":
+            self.o_title = self.get_title(True)
+
+    def get_title(self, ret=False):
+        data = re.search(r"<title>CSFD.cz - ([^,]*)\(\d{4}\)",self.page)
+        if data:
+            data = data.group(1)
+        else:
+            data = ""
+        if ret is True:
+            return data
+        else:
+            self.title = data
+
+    def get_director(self):
+        self.director = re.search(r"ie:(.*)<br><b>Hraj", self.page)
+        if self.director:
+            self.director = gutils.strip_tags(self.director.group(1))
+        else:
+            self.director = ""
+
+    def get_year(self):
+        self.year = re.search(r"<title>.*\(([\d]+)\)", self.page)
+        if self.year:
+            self.year = self.year.group(1)
+        else:
+            self.year = ""
+
+    def get_runtime(self):
+        self.runtime = re.search(r"([\d]+) min</b><BR><BR><b>Re", self.page)
+        if self.runtime:
+            self.runtime = gutils.strip_tags(self.runtime.group(1))
+        else:
+            self.runtime = ""
+
+    def get_genre(self):
+        self.genre = re.search(r"/images/flag_[\d]+.gif.*</table>[\s]*<br>[\s]*<b>([^&:]*)&nbsp;<br>",self.page)
+        if self.genre:
+            self.genre = gutils.strip_tags(self.genre.group(1))
+        else:
+            self.genre = ""
+
+    def get_country(self):
+        self.country = re.search(r"/images/flag_[\d]+.gif.*</table>[\s]*<br>[\s]*<b>[^&:]*&nbsp;<br>(.*), [\d]{4}, ",self.page)
+        if self.country:
+            self.country = gutils.strip_tags(self.country.group(1))
+        else:
+            self.country = ""
+
+    def get_cast(self):
+        self.cast = re.search(r"Hraj?: (.*)</div><br>", self.page)
+        if self.cast:
+            self.cast = gutils.strip_tags(self.cast.group(1))
+        else:
+            self.cast = ""
+
+    def get_plot(self):
+        text = re.search(r"\?text=([\d]*)", self.page)
+        if text:
+            page_content = self.open_page(url=self.url+"?text="+text.group(1))
+            self.plot = gutils.strip_tags(gutils.trim(page_content,"Obsah:","&nbsp;&nbsp;&nbsp;<b><i>("))
+        else:
+            self.plot = gutils.strip_tags(gutils.trim(self.page,"Obsah:","&nbsp;&nbsp;&nbsp;<b><i>("))
+
+    def get_site(self):
+        self.site = re.search(r"href=[\"'](http://.*imdb\.com/title/[^\"']*)",self.page)
+        if self.site:
+            self.site = gutils.strip_tags(self.site.group(1))
+        else:
+            self.site = ""
+
+    def get_trailer(self):
+        self.trailer = re.search(r"<a href=\"([^\"]*)\"[^>]*>trailer<br><img src=\"http://img.csfd.cz/images/new/film/ikona_trailer",self.page)
+        if self.trailer:
+            self.trailer = "http://www.csfd.cz/"+gutils.strip_tags(self.trailer.group(1))
+
+        else:
+            self.trailer = ""
+
+    def get_rating(self):
+        self.rating = re.search(r"[\s]*([\d]+)%[\s]*</td>",self.page)
+        if self.rating:
+            self.rating = str(float(self.rating.group(1))/10)
+        else:
+            self.rating = ""
+
+    def get_o_site(self):
+        self.o_site = re.search(r"href=\"([^\"]*)\"[^>]*>www<br><img src=\"http://img.csfd.cz/images/new/film/ikona_www",self.page)
+        if self.o_site:
+            self.o_site = gutils.strip_tags(self.o_site.group(1))
+        else:
+            self.o_site = ""
+
+    def get_notes(self):
+        self.notes = ""
+
+    def get_studio(self):
+        self.studio = ""
+
+    def get_classification(self):
+        self.classification = ""
+
+class SearchPlugin(movie.SearchMovie):
+    def __init__(self):
+        self.encode = "utf-8"
+        self.original_url_search   = "http://www.csfd.cz/search_pg.php?search="
+        self.translated_url_search = "http://www.csfd.cz/search_pg.php?search="
+
+    def search(self,parent_window):
+        self.open_search(parent_window)
+        return self.page
+
+    def get_searches(self):
+        tmp_id = self.re_items=re.search(r"window.location.href='http://www.csfd.cz/(/film/[^']*)'",self.page)
+        if tmp_id:
+            self.ids.append(tmp_id.group(1))
+        else:
+            self.re_items=re.findall(r"href=\"(/film/[^\"]+)[^>]*>([^<]+)</a>([^<]*)",self.page)
+            self.number_results = len(self.re_items)
+            if (self.number_results > 0):
+                for item in self.re_items:
+                    self.ids.append(item[0])
+#                    self.titles.append(gutils.convert_entities(item[1])+' '+item[2])
+                    self.titles.append(item[1]+' '+item[2])
+

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-04 22:34:32 UTC (rev 1083)
+++ trunk/ChangeLog	2008-12-07 21:55:58 UTC (rev 1084)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O??arowski
 
 
+2008-12-07  Piotr O??arowski
+	* CSFD movie plugin updated (thanks to Ale?? Nejdr)
+
 2008-12-01  Piotr O??arowski
 	* HTML export plugin exports posters again (closes: 304072)
 

Modified: trunk/lib/plugins/movie/PluginMovieCSFD.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCSFD.py	2008-12-04 22:34:32 UTC (rev 1083)
+++ trunk/lib/plugins/movie/PluginMovieCSFD.py	2008-12-07 21:55:58 UTC (rev 1084)
@@ -29,7 +29,7 @@
 plugin_language = _("Czech")
 plugin_author = "Blondak"
 plugin_author_email = "<blondak at neser.cz>"
-plugin_version = "0.8"
+plugin_version = '0.9'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -65,21 +65,21 @@
             self.title = data
 
     def get_director(self):
-        self.director = re.search(r"Re?ie:(.*)<br><b>Hraj?:",self.page)
+        self.director = re.search(r"ie:(.*)<br><b>Hraj", self.page)
         if self.director:
             self.director = gutils.strip_tags(self.director.group(1))
         else:
             self.director = ""
 
     def get_year(self):
-        self.year = re.search(r"<title>.*\(([\d]+)\)",self.page)
+        self.year = re.search(r"<title>.*\(([\d]+)\)", self.page)
         if self.year:
             self.year = self.year.group(1)
         else:
             self.year = ""
 
     def get_runtime(self):
-        self.runtime = re.search(r"([\d]+) min</b><BR><BR><b>Re?ie:",self.page)
+        self.runtime = re.search(r"([\d]+) min</b><BR><BR><b>Re", self.page)
         if self.runtime:
             self.runtime = gutils.strip_tags(self.runtime.group(1))
         else:
@@ -100,14 +100,19 @@
             self.country = ""
 
     def get_cast(self):
-        self.cast = re.search(r"Hraj?: (.*)</div><br>",self.page)
+        self.cast = re.search(r"Hraj?: (.*)</div><br>", self.page)
         if self.cast:
             self.cast = gutils.strip_tags(self.cast.group(1))
         else:
             self.cast = ""
 
     def get_plot(self):
-        self.plot = gutils.strip_tags(string.replace(gutils.trim(self.page,"Obsah:","</td>"),"(ofici?ln? text distributora)",""))
+        text = re.search(r"\?text=([\d]*)", self.page)
+        if text:
+            page_content = self.open_page(url=self.url+"?text="+text.group(1))
+            self.plot = gutils.strip_tags(gutils.trim(page_content,"Obsah:","&nbsp;&nbsp;&nbsp;<b><i>("))
+        else:
+            self.plot = gutils.strip_tags(gutils.trim(self.page,"Obsah:","&nbsp;&nbsp;&nbsp;<b><i>("))
 
     def get_site(self):
         self.site = re.search(r"href=[\"'](http://.*imdb\.com/title/[^\"']*)",self.page)



From piotrek at mail.berlios.de  Tue Dec  9 01:07:40 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 9 Dec 2008 01:07:40 +0100
Subject: [Griffith-svn] r1085 - in trunk: . lib
Message-ID: <200812090007.mB907esZ009239@sheep.berlios.de>

Author: piotrek
Date: 2008-12-09 01:07:39 +0100 (Tue, 09 Dec 2008)
New Revision: 1085

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/edit.py
Log:
update the md5 *after* all other queries (so that UPDATE will not be invoked)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-07 21:55:58 UTC (rev 1084)
+++ trunk/ChangeLog	2008-12-09 00:07:39 UTC (rev 1085)
@@ -6,8 +6,14 @@
 
 
 2008-12-07  Piotr O?arowski
+	* update_image(): update the md5 *after* all other queries (so that UPDATE will not be invoked)
+
+2008-12-07  Piotr O?arowski
 	* CSFD movie plugin updated (thanks to Ale? Nejdr)
 
+2008-12-03  Piotr O?arowski
+	* Add few indexes to the model
+
 2008-12-01  Piotr O?arowski
 	* HTML export plugin exports posters again (closes: 304072)
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2008-12-07 21:55:58 UTC (rev 1084)
+++ trunk/griffith	2008-12-09 00:07:39 UTC (rev 1085)
@@ -354,7 +354,7 @@
             return
         number = tmp_model.get_value(tmp_iter, 0)
         movie = self.db.session.query(db.Movie).filter_by(number=number).first()
-        if movie:
+        if movie and movie.poster_md5:
             filename = gutils.get_image_fname(movie.poster_md5, self.db)
             self.widgets['big_poster'].set_from_file(filename)
             self.widgets['poster_window'].show()

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2008-12-07 21:55:58 UTC (rev 1084)
+++ trunk/lib/edit.py	2008-12-09 00:07:39 UTC (rev 1085)
@@ -64,11 +64,13 @@
 
     movie = session.query(db.Movie).filter_by(number=number).one()
     old_poster_md5 = movie.poster_md5
-    movie.poster_md5 = poster_md5
 
     if not session.query(db.Poster).filter_by(md5sum=poster_md5).first():
         poster = db.Poster(md5sum=poster_md5, data=file(filename, 'rb').read())
         session.add(poster)
+
+    # update the md5 *after* all other queries (so that UPDATE will not be invoked)
+    movie.poster_md5 = poster_md5
     
     if old_poster_md5:
         delete.delete_poster(self, old_poster_md5)
@@ -80,9 +82,10 @@
         session.rollback()
         log.error("cannot add poster to database: %s" % e)
         return False
-   
+
     filename = gutils.get_image_fname(poster_md5, self.db, 's')
-    update_tree_thumbnail(self, filename)
+    if filename:
+        update_tree_thumbnail(self, filename)
 
     self.widgets['movie']['picture_button'].set_sensitive(True)
     self.widgets['add']['delete_poster'].set_sensitive(True)



From piotrek at mail.berlios.de  Tue Dec 16 20:42:12 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 20:42:12 +0100
Subject: [Griffith-svn] r1086 - in trunk: . lib
Message-ID: <200812161942.mBGJgC5r012556@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 20:42:10 +0100 (Tue, 16 Dec 2008)
New Revision: 1086

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/add.py
   trunk/lib/gconsole.py
   trunk/lib/movie.py
Log:
Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-09 00:07:39 UTC (rev 1085)
+++ trunk/ChangeLog	2008-12-16 19:42:10 UTC (rev 1086)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-16  Piotr O?arowski
+	* Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)
+
 2008-12-07  Piotr O?arowski
 	* update_image(): update the md5 *after* all other queries (so that UPDATE will not be invoked)
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2008-12-09 00:07:39 UTC (rev 1085)
+++ trunk/griffith	2008-12-16 19:42:10 UTC (rev 1086)
@@ -72,6 +72,7 @@
 class Griffith(object):
     """The main application class"""
 
+    debug_mode = False
     Image = gtk.Image()
     founded_results_id = None
     initialized = False

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2008-12-09 00:07:39 UTC (rev 1085)
+++ trunk/lib/add.py	2008-12-16 19:42:10 UTC (rev 1086)
@@ -282,6 +282,10 @@
         self.active_plugin = option
         plugin_name = 'PluginMovie%s' % option
         plugin = __import__(plugin_name)
+        if self.debug_mode:
+            log.debug('reloading %s', plugin_name)
+            import sys
+            reload(sys.modules[plugin_name])
         self.search_movie = plugin.SearchPlugin()
         self.search_movie.config = self.config
         if o_title:

Modified: trunk/lib/gconsole.py
===================================================================
--- trunk/lib/gconsole.py	2008-12-09 00:07:39 UTC (rev 1085)
+++ trunk/lib/gconsole.py	2008-12-16 19:42:10 UTC (rev 1086)
@@ -94,6 +94,8 @@
             if o in ('-C', '--clean'):
                 gutils.clean_posters_dir(self)
                 sys.exit()
+            elif o in ('-D', '--debug'):
+                self.debug_mode = True
             elif o in ('-s', '--sort'):
                 sort = a
             elif o in ('-o', '--original_title'):

Modified: trunk/lib/movie.py
===================================================================
--- trunk/lib/movie.py	2008-12-09 00:07:39 UTC (rev 1085)
+++ trunk/lib/movie.py	2008-12-16 19:42:10 UTC (rev 1086)
@@ -34,7 +34,7 @@
 log = logging.getLogger("Griffith")
 import gutils
 
-class Movie:
+class Movie(object):
     cast = None
     classification = None
     country = None
@@ -185,8 +185,7 @@
 
     def parse_movie(self):
         try:
-            from copy import deepcopy
-            fields = deepcopy(self.fields_to_fetch)
+            fields = list(self.fields_to_fetch) # make a copy
 
             self.initialize()
 
@@ -241,11 +240,11 @@
             # close the progress dialog which was opened in get_movie
             self.progress.hide()
 
-class SearchMovie:
+class SearchMovie(object):
     page = None
     number_results = None
-    titles = [""]
-    ids = [""]
+    titles = []
+    ids = []
     url = None
     encode = 'utf-8'
     original_url_search = None
@@ -258,7 +257,7 @@
     def __init__(self):
         pass
 
-    def search_movies(self,parent_window):
+    def search_movies(self, parent_window):
         try:
             #
             # initialize the progress dialog once for the following search process
@@ -281,7 +280,7 @@
             self.url = self.url % self.title
             self.url = string.replace(self.url, ' ', '%20')
         else:
-            self.url = string.replace(self.url+self.title,' ','%20')
+            self.url = string.replace(self.url+self.title, ' ', '%20')
         try:
             url = self.url.encode(self.encode)
         except UnicodeEncodeError:
@@ -292,16 +291,20 @@
         while retriever.isAlive():
             self.progress.pulse()
             if self.progress.status:
-                retriever.suspend()
+                retriever.join()
             while gtk.events_pending():
                 gtk.main_iteration()
         try:
-            ifile = file(retriever.html[0], "rb")
-            self.page = ifile.read()
-            self.page = self.page.decode(self.encode)
+            if retriever.html:
+                ifile = file(retriever.html[0], 'rb')
+                self.page = ifile.read()
+                self.page = self.page.decode(self.encode, 'replace')
+            else:
+                return False
         except IOError:
             pass
         urlcleanup()
+        return True
 
 class Retriever(threading.Thread):
     def __init__(self, URL, parent_window, progress, destination=None):
@@ -313,6 +316,7 @@
         self._stopevent = threading.Event()
         self._sleepperiod = 1.0
         threading.Thread.__init__(self, name="Retriever")
+
     def run(self):
         try:
             self.html = urlretrieve(self.URL, self.destination, self.hook)
@@ -323,7 +327,8 @@
             self.progress.dialog.hide()
             gutils.urllib_error(_("Connection error"), self.parent_window)
             self.suspend()
-    def hook(self,count, blockSize, totalSize):
+
+    def hook(self, count, blockSize, totalSize):
         if totalSize ==-1:
             pass
         else:
@@ -332,7 +337,7 @@
             except:
                 downloaded_percentage = 100
             if count != 0:
-                downloaded_kbyte = int(count * blockSize/1024.0)
+                downloaded_percentagenloaded_kbyte = int(count * blockSize/1024.0)
                 filesize_kbyte = int(totalSize/1024.0)
 
 #
@@ -366,20 +371,25 @@
         self.button.connect("clicked", self.callback)
         self.dialog.vbox.pack_start(self.button, False, False)
         self.dialog.show_all()
+
     def callback(self, widget):
         self.dialog.hide()
         self.status = True
+
     def pulse(self):
         self.progress.pulse()
         time.sleep(0.01)
+
     def close(self):
         self.dialog.destroy()
+
     def hide(self):
         self.dialog.hide()
+
     def set_data(self, parent_window, title, message, showit):
         #self.dialog.set_parent(parent_window)
         self.dialog.set_title(title)
         self.label.set_markup(message)
-        if showit == True:
+        if showit is True:
             self.dialog.show()
 # vim: fdm=marker



From piotrek at mail.berlios.de  Tue Dec 16 21:09:30 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 21:09:30 +0100
Subject: [Griffith-svn] r1087 - in trunk: . lib
Message-ID: <200812162009.mBGK9Unl015826@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 21:09:29 +0100 (Tue, 16 Dec 2008)
New Revision: 1087

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/movie.py
Log:
Canceling search doesn't throw exception anymore (closes 100038) - partially fixed in previous commit


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-16 19:42:10 UTC (rev 1086)
+++ trunk/ChangeLog	2008-12-16 20:09:29 UTC (rev 1087)
@@ -7,6 +7,7 @@
 
 2008-12-16  Piotr O?arowski
 	* Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)
+	* Canceling search doesn't throw exception anymore (closes 100038)
 
 2008-12-07  Piotr O?arowski
 	* update_image(): update the md5 *after* all other queries (so that UPDATE will not be invoked)

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2008-12-16 19:42:10 UTC (rev 1086)
+++ trunk/lib/add.py	2008-12-16 20:09:29 UTC (rev 1087)
@@ -300,8 +300,8 @@
                 self.search_movie.title = gutils.remove_accents(title, 'utf-8')
             else:
                 self.search_movie.title = unicode(title, 'utf-8')
-        self.search_movie.search_movies(self.widgets['add']['window'])
-        self.search_movie.get_searches()
+        if self.search_movie.search_movies(self.widgets['add']['window']):
+            self.search_movie.get_searches()
         if len(self.search_movie.ids) == 1 and o_title and title:
             self.search_movie.url = self.search_movie.translated_url_search
             if self.search_movie.remove_accents:

Modified: trunk/lib/movie.py
===================================================================
--- trunk/lib/movie.py	2008-12-16 19:42:10 UTC (rev 1086)
+++ trunk/lib/movie.py	2008-12-16 20:09:29 UTC (rev 1087)
@@ -144,7 +144,7 @@
         while retriever.isAlive():
             self.progress.pulse()
             if self.progress.status:
-                retriever.suspend()
+                retriever.join()
             while gtk.events_pending():
                 gtk.main_iteration()
         try:
@@ -170,7 +170,7 @@
                 while retriever.isAlive():
                     self.progress.pulse()
                     if self.progress.status:
-                        retriever.suspend()
+                        retriever.join()
                     while gtk.events_pending():
                         gtk.main_iteration()
                 urlcleanup()
@@ -268,7 +268,7 @@
             #            
             # call the plugin specific search method
             #
-            self.search(parent_window)
+            return self.search(parent_window)
         finally:
             # dont forget to hide the progress dialog
             self.progress.hide()
@@ -326,7 +326,7 @@
         except IOError:
             self.progress.dialog.hide()
             gutils.urllib_error(_("Connection error"), self.parent_window)
-            self.suspend()
+            self.join()
 
     def hook(self, count, blockSize, totalSize):
         if totalSize ==-1:
@@ -337,7 +337,7 @@
             except:
                 downloaded_percentage = 100
             if count != 0:
-                downloaded_percentagenloaded_kbyte = int(count * blockSize/1024.0)
+                downloaded_kbyte = int(count * blockSize/1024.0)
                 filesize_kbyte = int(totalSize/1024.0)
 
 #



From piotrek at mail.berlios.de  Tue Dec 16 21:15:54 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 21:15:54 +0100
Subject: [Griffith-svn] r1088 - trunk/lib
Message-ID: <200812162015.mBGKFsB1016846@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 21:15:54 +0100 (Tue, 16 Dec 2008)
New Revision: 1088

Modified:
   trunk/lib/movie.py
Log:
return None if canceled


Modified: trunk/lib/movie.py
===================================================================
--- trunk/lib/movie.py	2008-12-16 20:09:29 UTC (rev 1087)
+++ trunk/lib/movie.py	2008-12-16 20:15:54 UTC (rev 1088)
@@ -147,10 +147,12 @@
                 retriever.join()
             while gtk.events_pending():
                 gtk.main_iteration()
+        data = None
         try:
-            ifile = file(retriever.html[0], "rb")
-            data = ifile.read()
-            data = data.decode(self.encode)
+            if retriever.html:
+                ifile = file(retriever.html[0], "rb")
+                data = ifile.read()
+                data = data.decode(self.encode)
         except IOError:
             pass
         if url is None:



From mikej06 at mail.berlios.de  Tue Dec 16 21:36:52 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 16 Dec 2008 21:36:52 +0100
Subject: [Griffith-svn] r1089 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200812162036.mBGKaqe5018275@sheep.berlios.de>

Author: mikej06
Date: 2008-12-16 21:36:29 +0100 (Tue, 16 Dec 2008)
New Revision: 1089

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieIMDB.py
Log:
IMDB movie plugin updated

Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-16 20:15:54 UTC (rev 1088)
+++ branches/0.9.x/ChangeLog	2008-12-16 20:36:29 UTC (rev 1089)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-16  Michael Jahn
+	* IMDB movie plugin updated
+
 2008-12-07  Piotr O?arowski
 	* CSFD movie plugin updated (thanks to Ale? Nejdr)
 

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:15:54 UTC (rev 1088)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:36:29 UTC (rev 1089)
@@ -185,7 +185,7 @@
 
 class SearchPlugin(movie.SearchMovie):
 	PATTERN = re.compile(r"""<A HREF=['"]/title/tt([0-9]+)/["']>(.*?)</LI>""")
-	PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["']>(.*?)</td>""")
+	PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""")
 
 	def __init__(self):
 		self.original_url_search	= 'http://www.imdb.com/List?words='
@@ -200,6 +200,8 @@
 		else:
 			self.page = tmp_page
 		self.page = self.page.decode('iso-8859-1')
+		# correction of all &#xxx entities
+		self.page = gutils.convert_entities(self.page)
 		return self.page
 
 	def get_searches(self):
@@ -210,7 +212,7 @@
 				for element in elements[1:]:
 					match = self.PATTERN2.findall(element)
 					if len(match):
-						tmp  = gutils.clean(match[0][1])
+						tmp = re.sub('^[0-9]+[.]', '', gutils.clean(gutils.after(match[0][1], '>')))
 						self.ids.append(match[0][0])
 						self.titles.append(tmp)
 		else:

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-16 20:15:54 UTC (rev 1088)
+++ trunk/ChangeLog	2008-12-16 20:36:29 UTC (rev 1089)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-16  Michael Jahn
+	* IMDB movie plugin updated
+
 2008-12-16  Piotr O?arowski
 	* Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)
 	* Canceling search doesn't throw exception anymore (closes 100038)

Modified: trunk/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:15:54 UTC (rev 1088)
+++ trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:36:29 UTC (rev 1089)
@@ -172,11 +172,11 @@
 
 class SearchPlugin(movie.SearchMovie):
     PATTERN = re.compile(r"""<A HREF=['"]/title/tt([0-9]+)/["']>(.*?)</LI>""")
-    PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["']>(.*?)</td>""")
+    PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""")
 
     def __init__(self):
-        self.original_url_search    = 'http://www.imdb.com/List?words='
-        self.translated_url_search	= 'http://www.imdb.com/find?more=tt;q='
+        self.original_url_search   = 'http://www.imdb.com/List?words='
+        self.translated_url_search = 'http://www.imdb.com/find?more=tt;q='
         self.encode = 'utf-8'
 
     def search(self,parent_window):
@@ -187,6 +187,8 @@
         else:
             self.page = tmp_page
         self.page = self.page.decode('iso-8859-1')
+        # correction of all &#xxx entities
+        self.page = gutils.convert_entities(self.page)
         return self.page
 
     def get_searches(self):
@@ -195,9 +197,9 @@
             elements = string.split(self.page, '<tr>')
             if len(elements):
                 for element in elements[1:]:
-                    match = self.PATTERN.findall(element)
+                    match = self.PATTERN2.findall(element)
                     if len(match):
-                        tmp = gutils.clean(match[0][1])
+                        tmp = re.sub('^[0-9]+[.]', '', gutils.clean(gutils.after(match[0][1], '>')))
                         self.ids.append(match[0][0])
                         self.titles.append(tmp)
         else:



From piotrek at mail.berlios.de  Tue Dec 16 21:59:03 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 21:59:03 +0100
Subject: [Griffith-svn] r1090 - trunk/lib/plugins/movie
Message-ID: <200812162059.mBGKx3Qe024165@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 21:59:02 +0100 (Tue, 16 Dec 2008)
New Revision: 1090

Modified:
   trunk/lib/plugins/movie/PluginMovie7arte.py
   trunk/lib/plugins/movie/PluginMovieAllocine.py
   trunk/lib/plugins/movie/PluginMovieAniDB.py
   trunk/lib/plugins/movie/PluginMovieCSFD.py
   trunk/lib/plugins/movie/PluginMovieCineMovies.py
   trunk/lib/plugins/movie/PluginMovieCinematografo.py
   trunk/lib/plugins/movie/PluginMovieCineteka.py
   trunk/lib/plugins/movie/PluginMovieCulturalia.py
   trunk/lib/plugins/movie/PluginMovieDVDEmpire.py
   trunk/lib/plugins/movie/PluginMovieDVDPalace.py
   trunk/lib/plugins/movie/PluginMovieE-Pipoca.py
   trunk/lib/plugins/movie/PluginMovieFDb.py
   trunk/lib/plugins/movie/PluginMovieFilmAffinity.py
   trunk/lib/plugins/movie/PluginMovieFilmDb.py
   trunk/lib/plugins/movie/PluginMovieFilmeVonAZ.py
   trunk/lib/plugins/movie/PluginMovieFilmtipset.py
   trunk/lib/plugins/movie/PluginMovieFilmweb.py
   trunk/lib/plugins/movie/PluginMovieIMDB-de.py
   trunk/lib/plugins/movie/PluginMovieIMDB-es.py
   trunk/lib/plugins/movie/PluginMovieIMDB.py
   trunk/lib/plugins/movie/PluginMovieMediadis.py
   trunk/lib/plugins/movie/PluginMovieMoviefone.py
   trunk/lib/plugins/movie/PluginMovieOFDb.py
   trunk/lib/plugins/movie/PluginMovieOnet.py
   trunk/lib/plugins/movie/PluginMoviePTGate.py
   trunk/lib/plugins/movie/PluginMovieStopklatka.py
   trunk/lib/plugins/movie/PluginMovieTanukiAnime.py
   trunk/lib/plugins/movie/PluginMovieWP.py
   trunk/lib/plugins/movie/PluginMovieZelluloid.py
Log:
update movie plugins to handle open_search's return value correctly


Modified: trunk/lib/plugins/movie/PluginMovie7arte.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovie7arte.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovie7arte.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -128,7 +128,8 @@
 
     def search(self, parent_window):
         """Perform the web search"""
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieAllocine.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAllocine.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieAllocine.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -109,7 +109,8 @@
         self.translated_url_search    = "http://www.allocine.fr/recherche/?motcle="
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieAniDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAniDB.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieAniDB.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -147,7 +147,8 @@
         self.translated_url_search    = 'http://anidb.net/perl-bin/animedb.pl?show=animelist&do.search=search&adb.search='
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.page = decompress(self.page)
 
         tmp = string.find(self.page, '<h1>Anime List - Search for: ')

Modified: trunk/lib/plugins/movie/PluginMovieCSFD.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCSFD.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieCSFD.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -159,7 +159,8 @@
         self.translated_url_search = "http://www.csfd.cz/search_pg.php?search="
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         return self.page
 
     def get_searches(self):

Modified: trunk/lib/plugins/movie/PluginMovieCineMovies.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCineMovies.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieCineMovies.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -102,7 +102,8 @@
         self.translated_url_search    = "http://www.cinemovies.fr/resultat_recherche.php?cherche="
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieCinematografo.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -131,7 +131,8 @@
 
     def search(self, parent_window):
         "Perform the web search"
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieCineteka.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCineteka.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieCineteka.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -127,7 +127,8 @@
 
     def search(self, parent_window):
         """Perform the web search"""
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieCulturalia.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCulturalia.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieCulturalia.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -112,7 +112,8 @@
         self.encode = 'iso-8859-15'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieDVDEmpire.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieDVDEmpire.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieDVDEmpire.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -135,7 +135,8 @@
         self.encode = 'iso-8859-1'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         # short the content
         tmp_page = gutils.trim(self.page,'<select name="sort"', 'Click Here to make a Suggestion</a>')
         #
@@ -156,8 +157,9 @@
             tmp_pagecountintcurrent = tmp_pagecountintcurrent + 1
             self.url = "http://www.dvdempire.com/Exec/v1_search_all.asp?&site_media_id=0&pp=&search_refined=32&used=0&page=" + str(tmp_pagecountintcurrent) + "&string="
             self.open_search(parent_window)
-            tmp_page2 = gutils.trim(self.page,'<select name="sort"', 'Click Here to make a Suggestion</a>')
-            tmp_page = tmp_page + tmp_page2
+            if self.open_search(parent_window):
+                tmp_page2 = gutils.trim(self.page,'<select name="sort"', 'Click Here to make a Suggestion</a>')
+                tmp_page = tmp_page + tmp_page2
 
         self.page = tmp_page
         return self.page

Modified: trunk/lib/plugins/movie/PluginMovieDVDPalace.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieDVDPalace.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieDVDPalace.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -142,7 +142,8 @@
         self.encode='iso-8859-1'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp_pagemovie = self.page
         #
         # try to get all result pages (not so nice, but it works)
@@ -155,9 +156,9 @@
         tmp_pagecountintcurrent = 1
         while (tmp_pagecountint > tmp_pagecountintcurrent and tmp_pagecountintcurrent < 5):
             self.url = "http://www.dvd-palace.de/dvddatabase/dbsearch.php?action=1&start=" + str(tmp_pagecountintcurrent * 20) + "&suchbegriff="
-            self.open_search(parent_window)
-            tmp_pagemovie = tmp_pagemovie + self.page
-            tmp_pagecountintcurrent = tmp_pagecountintcurrent + 1
+            if self.open_search(parent_window):
+                tmp_pagemovie = tmp_pagemovie + self.page
+                tmp_pagecountintcurrent = tmp_pagecountintcurrent + 1
         self.page = tmp_pagemovie
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieE-Pipoca.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieE-Pipoca.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieE-Pipoca.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -131,7 +131,8 @@
 
     def search(self, parent_window):
         "Perform the web search"
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFDb.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFDb.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -140,7 +140,8 @@
         self.translated_url_search    = 'http://fdb.pl/szukaj.php?t=f&s='
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp = string.find(self.page,'<div>Wyniki wyszukiwania dla')
         if tmp == -1:        # already a movie page
             self.page = ''

Modified: trunk/lib/plugins/movie/PluginMovieFilmAffinity.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmAffinity.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFilmAffinity.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -127,7 +127,8 @@
         self.encode = 'iso-8859-15'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         auxPage = self.page
         self.sub_search()
         if self.page <> '':

Modified: trunk/lib/plugins/movie/PluginMovieFilmDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmDb.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFilmDb.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -129,7 +129,8 @@
         self.encode='iso-8859-1'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         return gutils.trim(self.page, "<span class=font_normal>", "<table width=590")
 
     def get_searches(self):

Modified: trunk/lib/plugins/movie/PluginMovieFilmeVonAZ.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmeVonAZ.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFilmeVonAZ.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -114,7 +114,8 @@
         self.encode='utf-8'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         # used for looking for subpages
         tmp_page = gutils.trim(self.page, "Treffer-Seite", "chste Seite")
         elements = string.split(tmp_page, '" class="text_navi">')
@@ -127,11 +128,12 @@
                 tmp_element = int(element)
             except:
                 tmp_element = 1
-            if (tmp_element <> 1):
+            if tmp_element != 1:
                 self.url = "http://www.filmevona-z.de/filmsuche.cfm?sucheNach=Titel&currentPage=" + str(tmp_element) + "&wert="
                 self.open_search(parent_window)
-                tmp_page2 = gutils.trim(self.page,"Alle Treffer aus der Kategorie", "Treffer-Seite")
-                tmp_page = tmp_page + tmp_page2
+                if self.open_search(parent_window):
+                    tmp_page2 = gutils.trim(self.page,"Alle Treffer aus der Kategorie", "Treffer-Seite")
+                    tmp_page = tmp_page + tmp_page2
         self.page = tmp_page
 
         return self.page

Modified: trunk/lib/plugins/movie/PluginMovieFilmtipset.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmtipset.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFilmtipset.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -114,7 +114,8 @@
         self.encode='iso-8859-1'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp_page = gutils.trim(self.page, 'Matchning', 'Hittade')
         if tmp_page == '':
             tmp_page = gutils.trim(self.page, 'Matchning', 'Visa fler')

Modified: trunk/lib/plugins/movie/PluginMovieFilmweb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmweb.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieFilmweb.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -145,7 +145,8 @@
         self.translated_url_search = "http://www.filmweb.pl/szukaj?c=film&q="
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         pos = string.find(self.page, 'Znaleziono <b>')
         if pos == -1:    # movie page
             self.page = None

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -203,7 +203,8 @@
         self.remove_accents = False
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp = gutils.trim(self.page, ' angezeigt)', ' Treffergenauigkeit')
         if tmp == '':
             if self.PATTERN_POWERSEARCH.search(self.page) is None:

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-es.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-es.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-es.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -142,7 +142,8 @@
         self.encode = 'iso-8859-15'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -24,19 +24,19 @@
 import gutils, movie
 import string, re
 
-plugin_name        = 'IMDb'
-plugin_description    = 'Internet Movie Database'
-plugin_url        = 'www.imdb.com'
-plugin_language        = _('English')
-plugin_author        = 'Vasco Nunes, Piotr O??arowski'
-plugin_author_email    = 'griffith-private at lists.berlios.de'
-plugin_version        = '1.5'
+plugin_name = 'IMDb'
+plugin_description = 'Internet Movie Database'
+plugin_url = 'www.imdb.com'
+plugin_language = _('English')
+plugin_author = 'Vasco Nunes, Piotr O??arowski'
+plugin_author_email = 'griffith-private at lists.berlios.de'
+plugin_version = '1.6'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
         self.encode = 'utf-8'
         self.movie_id = id
-        self.url = "http://imdb.com/title/tt%s" % str(self.movie_id)
+        self.url = "http://imdb.com/title/tt%s" % self.movie_id
 
     def initialize(self):
         self.cast_page = self.open_page(url=self.url + '/fullcredits')
@@ -166,7 +166,7 @@
     
     def __before_more(self, data):
         tmp = string.find(data, '>more<')
-        if tmp>0:
+        if tmp > 0:
             data = data[:tmp] + '>'
         return data
 
@@ -180,9 +180,10 @@
         self.encode = 'utf-8'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp_page = gutils.trim(self.page, 'Here are the', '</TABLE>')
-        if tmp_page == '':
+        if not tmp_page:
             self.page = gutils.trim(self.page, '(Displaying', '<b>Suggestions For Improving Your Results</b>')
         else:
             self.page = tmp_page

Modified: trunk/lib/plugins/movie/PluginMovieMediadis.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieMediadis.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieMediadis.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -92,7 +92,8 @@
         self.translated_url_search    = "http://www.mediadis.com/dvd/search.asp?t=1&kw=";
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieMoviefone.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieMoviefone.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieMoviefone.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -81,7 +81,8 @@
         self.translated_url_search    = "http://movies.aol.com/search/encyresults.adp?query=";
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieOFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOFDb.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieOFDb.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -116,7 +116,8 @@
         self.remove_accents = False
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.page = gutils.trim(self.page,"</b><br><br>", "<br><br><br>");
         self.page = string.replace( self.page, "'", '"' )
         self.page = string.replace( self.page, '<font size="1">', '' )

Modified: trunk/lib/plugins/movie/PluginMovieOnet.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2006 Piotr O?arowski
+# Copyright (c) 2005-2006 Piotr O??arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -28,7 +28,7 @@
 plugin_description  = 'Onet Film'
 plugin_url          = 'film.onet.pl'
 plugin_language     = _('Polish')
-plugin_author       = 'Piotr O?arowski'
+plugin_author       = 'Piotr O??arowski'
 plugin_author_email = '<ozarow+griffith at gmail.com>'
 plugin_version      = '1.7'
 
@@ -140,7 +140,8 @@
         self.translated_url_search    = 'http://film.onet.pl/filmoteka.html?O=1&S='
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.page = gutils.trim(self.page, '>Wynik wyszukiwania<', '<TABLE border=0 cellpadding=0');
         self.page = gutils.after(self.page, '</SPAN></DIV><BR>');
         return self.page
@@ -157,5 +158,3 @@
                 self.titles.append(element)
         else:
             self.number_results = 0
-
-# vim: fenc=iso-8859-2

Modified: trunk/lib/plugins/movie/PluginMoviePTGate.py
===================================================================
--- trunk/lib/plugins/movie/PluginMoviePTGate.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMoviePTGate.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -112,7 +112,8 @@
         self.encode='iso-8859-1'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.sub_search()
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieStopklatka.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -119,7 +119,8 @@
         self.translated_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.page = gutils.trim(self.page, '>Wyniki poszukiwania frazy:', '</div>');
         self.page = self.page.replace('\x9c','??')
         self.page = self.page.replace('??','??')

Modified: trunk/lib/plugins/movie/PluginMovieTanukiAnime.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieTanukiAnime.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieTanukiAnime.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -133,7 +133,8 @@
         self.translated_url_search = 'http://anime.tanuki.pl/strony/anime/lista/title/1/?&title='
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp = string.find(self.page, "<table class=\"animelist strippedlist\"")
         if tmp == -1:    # only one match!
             self.page = ''

Modified: trunk/lib/plugins/movie/PluginMovieWP.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieWP.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieWP.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -132,7 +132,8 @@
         self.translated_url_search    = 'http://film.wp.pl/szukaj,%s,type,f,szukaj.html'
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         self.page = gutils.trim(self.page, '<div id="filmUS"', '<div id=');
         return self.page
 

Modified: trunk/lib/plugins/movie/PluginMovieZelluloid.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieZelluloid.py	2008-12-16 20:36:29 UTC (rev 1089)
+++ trunk/lib/plugins/movie/PluginMovieZelluloid.py	2008-12-16 20:59:02 UTC (rev 1090)
@@ -156,7 +156,8 @@
         self.remove_accents = False
 
     def search(self,parent_window):
-        self.open_search(parent_window)
+        if not self.open_search(parent_window):
+            return None
         tmp = gutils.trim(self.page, "Der Suchbegriff erzielte", "</TABLE>")
         return tmp
 



From piotrek at mail.berlios.de  Tue Dec 16 22:18:12 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 22:18:12 +0100
Subject: [Griffith-svn] r1091 - in trunk: . lib
Message-ID: <200812162118.mBGLICwV025729@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 22:18:12 +0100 (Tue, 16 Dec 2008)
New Revision: 1091

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
Log:
search_movies() return value again


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-16 20:59:02 UTC (rev 1090)
+++ trunk/ChangeLog	2008-12-16 21:18:12 UTC (rev 1091)
@@ -10,7 +10,7 @@
 
 2008-12-16  Piotr O?arowski
 	* Reload movie plugin each time search is performed (in --debug mode only, this should ease writing plugins)
-	* Canceling search doesn't throw exception anymore (closes 100038)
+	* Canceling search doesn't throw exception anymore (closes: 100038)
 
 2008-12-07  Piotr O?arowski
 	* update_image(): update the md5 *after* all other queries (so that UPDATE will not be invoked)

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2008-12-16 20:59:02 UTC (rev 1090)
+++ trunk/lib/add.py	2008-12-16 21:18:12 UTC (rev 1091)
@@ -308,8 +308,8 @@
                 self.search_movie.title = gutils.remove_accents(title, 'utf-8')
             else:
                 self.search_movie.title = unicode(title, 'utf-8')
-            self.search_movie.search_movies(self.widgets['add']['window'])
-            self.search_movie.get_searches()
+            if self.search_movie.search_movies(self.widgets['add']['window']):
+                self.search_movie.get_searches()
         self.show_search_results(self.search_movie)
     else:
         gutils.error(self.widgets['results']['window'], \



From piotrek at mail.berlios.de  Tue Dec 16 22:28:41 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 16 Dec 2008 22:28:41 +0100
Subject: [Griffith-svn] r1092 - trunk/lib
Message-ID: <200812162128.mBGLSfCM026765@sheep.berlios.de>

Author: piotrek
Date: 2008-12-16 22:28:41 +0100 (Tue, 16 Dec 2008)
New Revision: 1092

Modified:
   trunk/lib/add.py
   trunk/lib/movie.py
Log:
movie details download cancellation is possible as well


Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2008-12-16 21:18:12 UTC (rev 1091)
+++ trunk/lib/add.py	2008-12-16 21:28:41 UTC (rev 1092)
@@ -191,7 +191,8 @@
         fields_to_fetch = [ i for i in fields_to_fetch if details[i] is None ]
     self.movie.fields_to_fetch = fields_to_fetch
     
-    self.movie.get_movie(w['window'])
+    if not self.movie.get_movie(w['window']):
+        return None
     self.movie.parse_movie()
 
     if 'year' in fields_to_fetch:

Modified: trunk/lib/movie.py
===================================================================
--- trunk/lib/movie.py	2008-12-16 21:18:12 UTC (rev 1091)
+++ trunk/lib/movie.py	2008-12-16 21:28:41 UTC (rev 1092)
@@ -124,12 +124,14 @@
             #            
             # get the page
             #
-            self.open_page(parent_window)
+            if not self.open_page(parent_window):
+                return None
         except:
             # close the dialog if an error occured
             self.progress.hide()
             # reraise the error
             raise
+        return True
 
     def open_page(self, parent_window=None, url=None):
         if url is None:



From mikej06 at mail.berlios.de  Wed Dec 17 21:47:11 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Wed, 17 Dec 2008 21:47:11 +0100
Subject: [Griffith-svn] r1093 - branches/0.9.x/lib/plugins/movie
	trunk/lib/plugins/movie
Message-ID: <200812172047.mBHKlBca015831@sheep.berlios.de>

Author: mikej06
Date: 2008-12-17 21:46:55 +0100 (Wed, 17 Dec 2008)
New Revision: 1093

Modified:
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
   trunk/lib/plugins/movie/PluginMovieIMDB.py
Log:
IMDB movie plugin updated (plot fixed)

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 21:28:41 UTC (rev 1092)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-17 20:46:55 UTC (rev 1093)
@@ -30,7 +30,7 @@
 plugin_language		= _('English')
 plugin_author		= 'Vasco Nunes, Piotr O?arowski'
 plugin_author_email	= 'griffith-private at lists.berlios.de'
-plugin_version		= '1.5'
+plugin_version		= '1.7'
 
 class Plugin(movie.Movie):
 	def __init__(self, id):
@@ -67,7 +67,7 @@
 			self.director = self.director.replace('<br/>', ', ')
 
 	def get_plot(self):
-		self.plot = gutils.trim(self.page, '<h5>Plot Outline:</h5>', '</div>')
+		self.plot = self.regextrim(self.page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
 		self.plot = self.__before_more(self.plot)
 		elements = string.split(self.plot_page, '<p class="plotpar">')
 		if len(elements) > 1:
@@ -75,7 +75,7 @@
 			elements[0] = ''
 			for element in elements:
 				if element <> '':
-					self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n'
+					self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n\n'
 
 	def get_year(self):
 		self.year = gutils.trim(self.page, '<a href="/Sections/Years/', '</a>')
@@ -166,7 +166,7 @@
 	
 	def __before_more(self, data):
 		tmp = string.find(data, '>more<')
-		if tmp>0:
+		if tmp > 0:
 			data = data[:tmp] + '>'
 		return data
 

Modified: trunk/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-16 21:28:41 UTC (rev 1092)
+++ trunk/lib/plugins/movie/PluginMovieIMDB.py	2008-12-17 20:46:55 UTC (rev 1093)
@@ -30,7 +30,7 @@
 plugin_language = _('English')
 plugin_author = 'Vasco Nunes, Piotr O?arowski'
 plugin_author_email = 'griffith-private at lists.berlios.de'
-plugin_version = '1.6'
+plugin_version = '1.7'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -67,7 +67,7 @@
             self.director = self.director.replace('<br/>', ', ')
 
     def get_plot(self):
-        self.plot = gutils.trim(self.page, '<h5>Plot Outline:</h5>', '</div>')
+        self.plot = gutils.regextrim(self.page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
         self.plot = self.__before_more(self.plot)
         elements = string.split(self.plot_page, '<p class="plotpar">')
         if len(elements) > 1:
@@ -75,7 +75,7 @@
             elements[0] = ''
             for element in elements:
                 if element <> '':
-                    self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n'
+                    self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n\n'
 
     def get_year(self):
         self.year = gutils.trim(self.page, '<a href="/Sections/Years/', '</a>')



From kura666 at mail.berlios.de  Fri Dec 19 10:59:01 2008
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Fri, 19 Dec 2008 10:59:01 +0100
Subject: [Griffith-svn] r1094 - trunk/lib/plugins/movie
Message-ID: <200812190959.mBJ9x1cr018563@sheep.berlios.de>

Author: kura666
Date: 2008-12-19 10:59:00 +0100 (Fri, 19 Dec 2008)
New Revision: 1094

Modified:
   trunk/lib/plugins/movie/PluginMovieFDb.py
Log:
FDb movie plugin updated


Modified: trunk/lib/plugins/movie/PluginMovieFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFDb.py	2008-12-17 20:46:55 UTC (rev 1093)
+++ trunk/lib/plugins/movie/PluginMovieFDb.py	2008-12-19 09:59:00 UTC (rev 1094)
@@ -32,7 +32,7 @@
 plugin_language        = _('Polish')
 plugin_author        = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email    = '<bartosz.kurczewski at gmail.com>'
-plugin_version        = '1.11'
+plugin_version        = '1.12'
 
 class Plugin(movie.Movie):
     TRAILER_PATTERN = re.compile('/film/.*/zwiastuny/odtwarzaj/[0-9]*')
@@ -49,7 +49,7 @@
     def get_image(self):
         self.image_url = gutils.trim(self.page, 'class="poster"', '/></a>')
         self.image_url = gutils.trim(self.image_url,'src="','"')
-        if self.image_url.endswith('no_picture.png'):
+        if self.image_url.endswith('http://fdb.pl/images/fdb2/add_poster.png?1214306282'):
             self.image_url = ''
 
     def get_o_title(self):
@@ -96,8 +96,11 @@
         self.genre = string.replace(self.genre, ' / ', ' | ')
 
     def get_cast(self):
-        self.cast = gutils.trim(self.page,'<h2 class="category-header">\n    Obsada','</div>')
-        self.cast = gutils.trim(self.cast,"<table>\n",'  </table>')
+        self.cast = gutils.trim(self.page,'<div class="cast">',"</div>")
+        tmpcast = gutils.trim(self.cast,"<table>\n",'</table>')
+        if tmpcast == '':
+            tmpcast = tmpcast = gutils.trim(self.cast,"<table>\n",'<div class="line">')
+        self.cast = tmpcast   
         if self.cast != '':
             self.cast = gutils.strip_tags(self.cast)
             self.cast = self.cast.replace("      ","")
@@ -136,17 +139,17 @@
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
         self.encode = 'utf-8'
-        self.original_url_search    = 'http://fdb.pl/szukaj.php?t=f&s='
-        self.translated_url_search    = 'http://fdb.pl/szukaj.php?t=f&s='
+        self.original_url_search    = 'http://fdb.pl/szukaj/movies?query='
+        self.translated_url_search    = 'http://fdb.pl/szukaj/movies?query='
 
     def search(self,parent_window):
         if not self.open_search(parent_window):
             return None
-        tmp = string.find(self.page,'<div>Wyniki wyszukiwania dla')
+        tmp = string.find(self.page,'<h1>Wyniki wyszukiwania dla')
         if tmp == -1:        # already a movie page
             self.page = ''
         else:            # multiple matches
-            self.page = gutils.before(self.page[tmp:],'<div id="mapaSerwisu">');
+            self.page = gutils.before(self.page[tmp:],'>Mapa strony</h3>');
         return self.page
 
     def get_searches(self):
@@ -155,11 +158,11 @@
             self.ids.append(self.url)
             self.titles.append(self.title)
         else:            # multiple matches
-            elements = string.split(self.page,'<div class="searchItem">')
-            if len(elements)>0:
+            elements = string.split(self.page,'<div class="content">')
+            if len(elements)>1:
                 for element in elements:
                     tmpId = gutils.trim(element, '<a href="', '"')
-                    if tmpId.endswith('dodajNowy.php'):
+                    if tmpId.endswith('http://fdb.pl'):
                         continue
                     self.ids.append(tmpId)
                     element = gutils.strip_tags(



From kura666 at mail.berlios.de  Fri Dec 19 11:31:42 2008
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Fri, 19 Dec 2008 11:31:42 +0100
Subject: [Griffith-svn] r1095 - trunk/lib/plugins/movie
Message-ID: <200812191031.mBJAVgsR020658@sheep.berlios.de>

Author: kura666
Date: 2008-12-19 11:31:41 +0100 (Fri, 19 Dec 2008)
New Revision: 1095

Modified:
   trunk/lib/plugins/movie/PluginMovieOnet.py
Log:
Onet movie plugin updated


Modified: trunk/lib/plugins/movie/PluginMovieOnet.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-19 09:59:00 UTC (rev 1094)
+++ trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-19 10:31:41 UTC (rev 1095)
@@ -72,15 +72,15 @@
             self.director = gutils.before(self.director, '</B>')
 
     def get_plot(self):
-        pos = string.find(self.page, '<TD class=tym>Tre\xb7\xe6</TD>')
+        pos = string.find(self.page, '<TD class=tym>')
         if pos > 0:
             self.plot = self.page[pos:]
-            self.plot = gutils.trim(self.plot, '<DIV class=a2>', '</DIV>')
+            self.plot = gutils.trim(self.plot, '<BR><DIV class=a2>', '</DIV>')
             return
-        pos = string.find(self.page, '>Recenzje</FONT>&nbsp;')
+        pos = string.find(self.page, '>Recenzje</font>&nbsp;')
         if pos > 0:
             self.plot = self.page[pos:]
-            self.plot = gutils.trim(self.plot, '<TD class=a1 colspan=3>', '<A class="ar" ')
+            self.plot = gutils.trim(self.plot, '<td class=a1 colspan=3>', '<a class="ar" ')
         else:
             self.plot = ''
 



From kura666 at mail.berlios.de  Fri Dec 19 12:38:20 2008
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Fri, 19 Dec 2008 12:38:20 +0100
Subject: [Griffith-svn] r1096 - trunk/lib/plugins/movie
Message-ID: <200812191138.mBJBcKEm002092@sheep.berlios.de>

Author: kura666
Date: 2008-12-19 12:38:17 +0100 (Fri, 19 Dec 2008)
New Revision: 1096

Modified:
   trunk/lib/plugins/movie/PluginMovieOnet.py
   trunk/lib/plugins/movie/PluginMovieStopklatka.py
Log:
Stopklatka movie plugin updated


Modified: trunk/lib/plugins/movie/PluginMovieOnet.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-19 10:31:41 UTC (rev 1095)
+++ trunk/lib/plugins/movie/PluginMovieOnet.py	2008-12-19 11:38:17 UTC (rev 1096)
@@ -28,9 +28,9 @@
 plugin_description  = 'Onet Film'
 plugin_url          = 'film.onet.pl'
 plugin_language     = _('Polish')
-plugin_author       = 'Piotr O?arowski'
-plugin_author_email = '<ozarow+griffith at gmail.com>'
-plugin_version      = '1.7'
+plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
+plugin_author_email = '<bartosz.kurczewski at gmail.com>'
+plugin_version      = '1.8'
 
 class Plugin(movie.Movie):
     def __init__(self, id):

Modified: trunk/lib/plugins/movie/PluginMovieStopklatka.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-19 10:31:41 UTC (rev 1095)
+++ trunk/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-19 11:38:17 UTC (rev 1096)
@@ -30,7 +30,7 @@
 plugin_language     = _('Polish')
 plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email = '<bartosz.kurczewski at gmail.com>'
-plugin_version      = '1.10'
+plugin_version      = '1.11'
 
 class Plugin(movie.Movie):
     IMAGE_PATTERN = re.compile('(http://img.stopklatka.pl/film/.*?)"')
@@ -38,18 +38,18 @@
     def __init__(self, id):
         self.movie_id = id
         self.url = "http://www.stopklatka.pl/film/film.asp?fi=%s" % str(self.movie_id)
-        self.encode = 'iso-8859-2' # with some cp-1250 data (sic!)
+        self.encode = 'utf-8' 
 
     def initialize(self):
         self.page = self.page.replace('\x9c','?')
         self.page = self.page.replace('?','?')
-        self.res = re.findall("""</td><td class="middle_cell"><span class="bold">(.*?)</span>, <span class="bold">(.*?)</span>, <span class="bold">(.*?)</span>, <span class="bold">(.*?) min</span>""", self.page)
+        self.res = re.findall("""<td class="middle_cell"><span class="bold">(.*?)</span>, (.*?), (.*?), (.*?) min</td>""", self.page)
         if len(self.res) == 0:
             self.res = [( '','','','' )]
 
     def get_image(self):
         image = self.IMAGE_PATTERN.findall(self.page)
-        if len(image):
+        if len(image) and image[0] != 'http://img.stopklatka.pl/film/0.jpg':
             self.image_url = image[0]
 
     def get_o_title(self):
@@ -65,12 +65,12 @@
             self.title = data
 
     def get_director(self):
-        self.director = gutils.trim(self.page, '>re\xbfyseria:<', '</td></tr>')
+        self.director = gutils.trim(self.page, '>re?yseria: <', '</span></a>')
         self.director = gutils.after(self.director, '>')
 
     def get_plot(self):
         self.plot = gutils.trim(self.page, '<p>', '</p>')
-        self.plot = gutils.before(self.plot, '<b>Wi\xEAcej ')
+        self.plot = gutils.before(self.plot, '<b>Wi?cej ')
 
     def get_year(self):
         self.year = self.res[0][2]
@@ -85,7 +85,7 @@
         self.cast = gutils.trim(self.page, '>obsada:<', '</td></tr>')
         self.cast = gutils.after(self.cast, '>')
         self.cast = string.replace(self.cast, ', ', "\n")
-        self.cast = gutils.before(self.cast, '<b>Wi\xEAcej ')
+        self.cast = gutils.before(self.cast, '<b>Wi?cej')
 
     def get_classification(self):
         self.classification = ''
@@ -114,7 +114,7 @@
 
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
-        self.encode='iso-8859-2'
+        self.encode='utf-8'
         self.original_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
         self.translated_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
 



From mikej06 at mail.berlios.de  Fri Dec 19 20:15:21 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 19 Dec 2008 20:15:21 +0100
Subject: [Griffith-svn] r1097 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200812191915.mBJJFL0P032043@sheep.berlios.de>

Author: mikej06
Date: 2008-12-19 20:14:13 +0100 (Fri, 19 Dec 2008)
New Revision: 1097

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieOFDb.py
Log:
OFDb movie plugin updated


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-19 11:38:17 UTC (rev 1096)
+++ branches/0.9.x/ChangeLog	2008-12-19 19:14:13 UTC (rev 1097)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-19  Michael Jahn
+	* OFDb movie plugin updated
+
 2008-12-16  Michael Jahn
 	* IMDB movie plugin updated
 

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py	2008-12-19 11:38:17 UTC (rev 1096)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieOFDb.py	2008-12-19 19:14:13 UTC (rev 1097)
@@ -16,7 +16,7 @@
 plugin_language = _("German")
 plugin_author = "Christian Sagmueller, Jessica Katharina Parth"
 plugin_author_email = "Jessica.K.P at women-at-work.org"
-plugin_version = "0.9"
+plugin_version = "0.10"
 
 class Plugin(movie.Movie):
 	def __init__(self, id):
@@ -31,7 +31,11 @@
 		if imdb_nr != '':
 			self.imdb_page = self.open_page(url='http://german.imdb.com/Title?' + imdb_nr)
 		else:
-			self.imdb_page = ''
+			imdb_nr = gutils.trim(self.page, 'http://www.imdb.com/Title?', '"')
+			if imdb_nr != '':
+				self.imdb_page = self.open_page(url='http://www.imdb.com/Title?' + imdb_nr)
+			else:
+				self.imdb_page = ''
 
 	def get_image(self):
 		self.image_url = "http://img.ofdb.de/film/" + gutils.trim(self.page, 'img src="http://img.ofdb.de/film/', '"' )
@@ -59,7 +63,7 @@
 
 	def get_runtime(self):
 		# from imdb
-		self.runtime = gutils.trim(self.imdb_page, '<h5>L&auml;nge:</h5>', ' Min')
+		self.runtime = self.regextrim(self.imdb_page, '<h5>(L&auml;nge|Runtime):</h5>', ' (min|Min)')
 
 	def get_genre(self):
 		self.genre = gutils.trim(self.page,"Genre(s):","</table>")
@@ -84,11 +88,11 @@
 
 	def get_classification(self):
 		# from imdb
-		self.classification = gutils.trim(gutils.trim(self.imdb_page, 'Altersfreigabe:', '</div>'), 'Germany:', '&')
+		self.classification = self.regextrim(self.regextrim(self.imdb_page, '(Altersfreigabe|Certification):', '</div>'), 'Germany:', '(&|[|])')
 
 	def get_studio(self):
 		# from imdb
-		self.studio = gutils.trim(self.imdb_page, '<h5>Firma:</h5>', '</a>')
+		self.studio = self.regextrim(self.imdb_page, '<h5>(Firma|Company):</h5>', '</a>')
 
 	def get_o_site(self):
 		self.o_site = ""

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-19 11:38:17 UTC (rev 1096)
+++ trunk/ChangeLog	2008-12-19 19:14:13 UTC (rev 1097)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-19  Michael Jahn
+	* OFDb movie plugin updated
+
 2008-12-16  Michael Jahn
 	* IMDB movie plugin updated
 

Modified: trunk/lib/plugins/movie/PluginMovieOFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOFDb.py	2008-12-19 11:38:17 UTC (rev 1096)
+++ trunk/lib/plugins/movie/PluginMovieOFDb.py	2008-12-19 19:14:13 UTC (rev 1097)
@@ -16,7 +16,7 @@
 plugin_language = _("German")
 plugin_author = "Christian Sagmueller, Jessica Katharina Parth"
 plugin_author_email = "Jessica.K.P at women-at-work.org"
-plugin_version = "0.9"
+plugin_version = "0.10"
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -31,7 +31,11 @@
         if imdb_nr != '':
             self.imdb_page = self.open_page(url='http://german.imdb.com/Title?' + imdb_nr)
         else:
-            self.imdb_page = ''
+            imdb_nr = gutils.trim(self.page, 'http://www.imdb.com/Title?', '"')
+            if imdb_nr != '':
+                self.imdb_page = self.open_page(url='http://www.imdb.com/Title?' + imdb_nr)
+            else:
+                self.imdb_page = ''
 
     def get_image(self):
         self.image_url = "http://img.ofdb.de/film/" + gutils.trim(self.page, 'img src="http://img.ofdb.de/film/', '"' )
@@ -59,7 +63,7 @@
 
     def get_runtime(self):
         # from imdb
-        self.runtime = gutils.trim(self.imdb_page, '<h5>L&auml;nge:</h5>', ' Min')
+        self.runtime = gutils.regextrim(self.imdb_page, '<h5>(L&auml;nge|Runtime):</h5>', ' (min|Min)')
 
     def get_genre(self):
         self.genre = gutils.trim(self.page,"Genre(s):","</table>")
@@ -84,11 +88,11 @@
 
     def get_classification(self):
         # from imdb
-        self.classification = gutils.trim(gutils.trim(self.imdb_page, 'Altersfreigabe:', '</div>'), 'Germany:', '&')
+        self.classification = gutils.regextrim(gutils.regextrim(self.imdb_page, '(Altersfreigabe|Certification):', '</div>'), 'Germany:', '(&|[|])')
 
     def get_studio(self):
         # from imdb
-        self.studio = gutils.trim(self.imdb_page, '<h5>Firma:</h5>', '</a>')
+        self.studio = gutils.regextrim(self.imdb_page, '<h5>(Firma|Company):</h5>', '</a>')
 
     def get_o_site(self):
         self.o_site = ""
@@ -148,9 +152,9 @@
     # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
     #
     test_configuration = {
-        'Rocky Balboa'            : [ 1, 1 ],
-        'Arahan'                : [ 3, 2 ],
-        'gl?ckliches'            : [ 4, 2 ]
+        'Rocky Balboa' : [ 1, 1 ],
+        'Arahan'       : [ 3, 2 ],
+        'gl?ckliches'  : [ 4, 2 ]
     }
 
 class PluginTest:



From mikej06 at mail.berlios.de  Fri Dec 19 21:43:50 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 19 Dec 2008 21:43:50 +0100
Subject: [Griffith-svn] r1098 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200812192043.mBJKhoIx006537@sheep.berlios.de>

Author: mikej06
Date: 2008-12-19 21:40:33 +0100 (Fri, 19 Dec 2008)
New Revision: 1098

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieIMDB-de.py
Log:
IMDB-de movie plugin updated


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-19 19:14:13 UTC (rev 1097)
+++ branches/0.9.x/ChangeLog	2008-12-19 20:40:33 UTC (rev 1098)
@@ -6,7 +6,7 @@
 
 
 2008-12-19  Michael Jahn
-	* OFDb movie plugin updated
+	* OFDb, IMDB-de movie plugin updated
 
 2008-12-16  Michael Jahn
 	* IMDB movie plugin updated

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-19 19:14:13 UTC (rev 1097)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-19 20:40:33 UTC (rev 1098)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2007 Michael Jahn
+# Copyright (c) 2007-2008 Michael Jahn
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -30,7 +30,7 @@
 plugin_language     = _('German')
 plugin_author       = 'Michael Jahn'
 plugin_author_email = 'mikej06 at hotmail.com'
-plugin_version      = '1.3'
+plugin_version      = '1.4'
 
 class Plugin(movie.Movie):
 	def __init__(self, id):
@@ -41,6 +41,9 @@
 	def initialize(self):
 		self.cast_page = self.open_page(url=self.url + '/fullcredits')
 		self.plot_page = self.open_page(url=self.url + '/plotsummary')
+		# looking for the original imdb page
+		self.imdb_page = self.open_page(url="http://www.imdb.com/title/tt%s" % str(self.movie_id))
+		self.imdb_plot_page = self.open_page(url="http://www.imdb.com/title/tt%s/plotsummary" % str(self.movie_id))
 		# correction of all &#xxx entities
 		self.page = self.page.decode(self.encode)
 		self.page = gutils.convert_entities(self.page)
@@ -91,10 +94,21 @@
 			for element in elements:
 				if element != '':
 					self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n'
+		if self.plot == '':
+			# nothing in german found, try original
+			self.plot = self.regextrim(self.imdb_page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
+			self.plot = self.__before_more(self.plot)
+			elements = string.split(self.imdb_plot_page, '<p class="plotpar">')
+			if len(elements) > 1:
+				self.plot = self.plot + '\n\n'
+				elements[0] = ''
+				for element in elements:
+					if element <> '':
+						self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n\n'
 
 	def get_year(self):
-		self.year = gutils.trim(self.page, '<a href="/Sections/Years/', '</a>')
-		self.year = gutils.after(self.year, '">')
+		self.year = gutils.trim(self.page, '<h1>', ' <span class')
+		self.year = gutils.trim(self.year, '(', ')')
 
 	def get_runtime(self):
 		self.runtime = self.regextrim(self.page, '<h5>L[^n]+nge:</h5>', ' [Mm]in')
@@ -117,7 +131,7 @@
 		self.cast = re.sub('[ ]+', ' ', self.cast)
 
 	def get_classification(self):
-		self.classification = gutils.trim(gutils.trim(self.page, 'Altersfreigabe:', '</div>'), 'Germany:', '&')
+		self.classification = gutils.trim(gutils.trim(self.page, 'Altersfreigabe:', '</div>'), 'Deutschland:', '|')
 
 	def get_studio(self):
 		self.studio = gutils.trim(self.page, '<h5>Firma:</h5>', '</div>')
@@ -142,7 +156,7 @@
 		self.rating = gutils.trim(self.page, '<h5>Nutzer-Bewertung:</h5>', '/10')
 		if self.rating:
 			try:
-				self.rating = str(float(gutils.clean(self.rating)))
+				self.rating = str(float(gutils.digits_only(gutils.clean(self.rating))))
 			except:
 				self.rating = ''
 
@@ -206,13 +220,13 @@
 		return text[p1:p2]
 
 class SearchPlugin(movie.SearchMovie):
-	PATTERN = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["']>(.*?)(</td>|</A>)""", re.IGNORECASE)
+	PATTERN = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""", re.IGNORECASE)
 	PATTERN_POWERSEARCH = re.compile(r"""Here are the [0-9]+ matching titles""")
 
 	def __init__(self):
 		self.original_url_search	= 'http://german.imdb.com/find?more=tt&q='
 		self.translated_url_search	= 'http://german.imdb.com/find?more=tt&q='
-		self.encode = 'iso8859-1'
+		self.encode = 'utf8'
 		self.remove_accents = False
 
 	def search(self,parent_window):
@@ -224,9 +238,9 @@
 		else:
 			self.page = tmp 
 		# correction of all &#xxx entities
-		self.page = self.page.decode(self.encode)
+		self.page = self.page.decode('iso8859-1')
 		self.page = gutils.convert_entities(self.page)
-		self.page = self.page.encode(self.encode)
+		#self.page = self.page.encode(self.encode)
 		return self.page
 
 	def get_searches(self):
@@ -238,7 +252,7 @@
 			for element in elements[1:]:
 				match = self.PATTERN.findall(element)
 				for entry in match:
-					tmp  = gutils.clean(entry[1])
+					tmp  = re.sub('^[0-9]+[.]', '', gutils.clean(gutils.after(entry[1], '>')))
 					self.ids.append(entry[0])
 					self.titles.append(tmp)
 
@@ -251,8 +265,8 @@
 	# dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
 	#
 	test_configuration = {
-		'Rocky Balboa'			: [ 3, 13 ],
-		'Ein gl?ckliches Jahr'	: [ 1, 30 ]
+		'Rocky Balboa'			: [ 15, 15 ],
+		'Ein gl?ckliches Jahr'	: [  6,  6 ]
 	}
 
 class PluginTest:
@@ -277,61 +291,67 @@
 Tony Burton' + _(' as ') + 'Duke\n\
 A.J. Benza' + _(' as ') + 'L.C.\n\
 James Francis Kelly III' + _(' as ') + 'Steps\n\
-Talia Shire' + _(' as ') + 'Adrian (archive footage)\n\
-Lou DiBella' + _(' as ') + 'Himself\n\
-Mike Tyson' + _(' as ') + 'Himself\n\
+Talia Shire' + _(' as ') + 'Adrian (Archivmaterial)\n\
+Lou DiBella' + _(' as ') + 'als er selbst\n\
+Mike Tyson' + _(' as ') + 'als er selbst\n\
 Henry G. Sanders' + _(' as ') + 'Martin\n\
 Pedro Lovell' + _(' as ') + 'Spider Rico\n\
 Ana Gerena' + _(' as ') + 'Isabel\n\
 Angela Boyd' + _(' as ') + 'Angie\n\
 Louis Giansante' + _(' as ') + 'Bar Thug\n\
 Maureen Schilling' + _(' as ') + 'Lucky\'s Bartender\n\
-Lahmard J. Tate' + _(' as ') + 'X-Cell (as Lahmard Tate)\n\
-Woody Paige' + _(' as ') + 'ESPN Commentator (as Woodrow W. Paige)\n\
+Lahmard J. Tate' + _(' as ') + 'X-Cell (als Lahmard Tate)\n\
+Woody Paige' + _(' as ') + 'ESPN Commentator (als Woodrow W. Paige)\n\
 Skip Bayless' + _(' as ') + 'ESPN Commentator\n\
 Jay Crawford' + _(' as ') + 'ESPN Commentator\n\
 Brian Kenny' + _(' as ') + 'ESPN Host\n\
 Dana Jacobson' + _(' as ') + 'ESPN Host\n\
-Charles Johnson' + _(' as ') + 'ESPN Host (as Chuck Johnson)\n\
-James Binns' + _(' as ') + 'Commissioner (as James J. Binns)\n\
+Charles Johnson' + _(' as ') + 'ESPN Host (als Chuck Johnson)\n\
+James Binns' + _(' as ') + 'Commissioner (als James J. Binns)\n\
 Johnnie Hobbs Jr.' + _(' as ') + 'Commissioner\n\
 Barney Fitzpatrick' + _(' as ') + 'Commissioner\n\
 Jim Lampley' + _(' as ') + 'HBO Commentator\n\
 Larry Merchant' + _(' as ') + 'HBO Commentator\n\
 Max Kellerman' + _(' as ') + 'HBO Commentator\n\
-LeRoy Neiman' + _(' as ') + 'Himself\n\
+LeRoy Neiman' + _(' as ') + 'als er selbst\n\
 Bert Randolph Sugar' + _(' as ') + 'Ring Magazine Reporter\n\
-Bernard Fern?ndez' + _(' as ') + 'Boxing Association of America Writer (as Bernard Fernandez)\n\
+Bernard Fern?ndez' + _(' as ') + 'Boxing Association of America Writer (als Bernard Fernandez)\n\
 Gunnar Peterson' + _(' as ') + 'Weightlifting Trainer\n\
 Yahya' + _(' as ') + 'Dixon\'s Opponent\n\
 Marc Ratner' + _(' as ') + 'Weigh-In Official\n\
 Anthony Lato Jr.' + _(' as ') + 'Rocky\'s Inspector\n\
 Jack Lazzarado' + _(' as ') + 'Dixon\'s Inspector\n\
 Michael Buffer' + _(' as ') + 'Ring Announcer\n\
-Joe Cortez' + _(' as ') + 'Referee\n\
+Joe Cortez' + _(' as ') + 'Schiedsrichter\n\
 Carter Mitchell' + _(' as ') + 'Shamrock Foreman\n\
 Vinod Kumar' + _(' as ') + 'Ravi\n\
 Fran Pultro' + _(' as ') + 'Father at Restaurant\n\
-Frank Stallone' + _(' as ') + 'Dinner Patron (as Frank Stallone Jr.)\n\
+Frank Stallone' + _(' as ') + 'Dinner Patron (als Frank Stallone Jr.)\n\
 Jody Giambelluca' + _(' as ') + 'Dinner Patron\n\
 Tobias Segal' + _(' as ') + 'Robert\'s Friend\n\
 Tim Carr' + _(' as ') + 'Robert\'s Friend\n\
 Matt Frack' + _(' as ') + 'Robert\'s Friend #3\n\
 Paul Dion Monte' + _(' as ') + 'Robert\'s Friend\n\
-Kevin King Templeton' + _(' as ') + 'Robert\'s Friend (as Kevin King-Templeton)\n\
+Kevin King Templeton' + _(' as ') + 'Robert\'s Friend (als Kevin King-Templeton)\n\
 Robert Michael Kelly' + _(' as ') + 'Mr. Tomilson\n\
 Rick Buchborn' + _(' as ') + 'Rocky Fan\n\
 Nick Baker' + _(' as ') + 'Irish Pub Bartender\n\
 Don Sherman' + _(' as ') + 'Andy\n\
-Stu Nahan' + _(' as ') + 'Computer Fight Commentator (voice)\n\
-Gary Compton' + _(' as ') + 'Security Guard\n\
+Stu Nahan' + _(' as ') + 'Computer Fight Commentator (Sprechrolle)\n\
+Gary Compton' + _(' as ') + 'Sicherheitsbediensteter\n\
 ?brige Besetzung in alphabetischer Reihenfolge:\n\
-Ricky Cavazos' + _(' as ') + 'Boxing Spectator (uncredited)\n\
-David Kneeream' + _(' as ') + 'Adrian\'s Patron (uncredited)\n\
-Dolph Lundgren' + _(' as ') + 'Captain Ivan Drago (archive footage) (uncredited)\n\
-Burgess Meredith' + _(' as ') + 'Mickey Goldmill (archive footage) (uncredited)\n\
-Keith Moyer' + _(' as ') + 'Bar Patron (uncredited)\n\
-Mr. T' + _(' as ') + 'Clubber Lang (archive footage) (uncredited)',
+Ricky Cavazos' + _(' as ') + 'Boxing Spectator (nicht im Abspann)\n\
+Deon Derrico' + _(' as ') + 'High roller at limo (nicht im Abspann)\n\
+Ruben Fischman' + _(' as ') + 'High-Roller in Las Vegas (nicht im Abspann)\n\
+Mark J. Kilbane' + _(' as ') + 'Businessman (nicht im Abspann)\n\
+David Kneeream' + _(' as ') + 'Adrian\'s Patron (nicht im Abspann)\n\
+Dolph Lundgren' + _(' as ') + 'Captain Ivan Drago (Archivmaterial) (nicht im Abspann)\n\
+Burgess Meredith' + _(' as ') + 'Mickey Goldmill (Archivmaterial) (nicht im Abspann)\n\
+Keith Moyer' + _(' as ') + 'Bargast (nicht im Abspann)\n\
+Mr. T' + _(' as ') + 'Clubber Lang (Archivmaterial) (nicht im Abspann)\n\
+Jacqueline Olivia' + _(' as ') + 'M?dchen (nicht im Abspann)\n\
+Brian H. Scott' + _(' as ') + 'Ringside Cop #1 (nicht im Abspann)\n\
+Jackie Sereni' + _(' as ') + 'Girl on Steps (nicht im Abspann)',
 			'country'			: 'USA',
 			'genre'				: 'Action | Sport',
 			'classification'	: False,
@@ -342,14 +362,13 @@
 			'year'				: 2006,
 			'notes'				: _('Language') + ': Englisch | Spanisch\n'\
 + _('Audio') + ': DTS | Dolby Digital | SDDS\n'\
-+ _('Color') + ': Farbe\n\
-Tagline: It ain\'t over \'til it\'s over.',
++ _('Color') + ': Farbe',
 			'runtime'			: 102,
 			'image'				: True,
 			'rating'			: 7
 		},
 		'0069815' : { 
-			'title' 			: 'Gl?ckliches Jahr, Ein',
+			'title' 			: 'Ein Gl?ckliches Jahr',
 			'o_title' 			: 'Bonne ann?e, La',
 			'director'			: 'Claude Lelouch',
 			'plot' 				: True,
@@ -357,7 +376,7 @@
 Fran?oise Fabian' + _(' as ') + 'Fran?oise\n\
 Charles G?rard' + _(' as ') + 'Charlot\n\
 Andr? Falcon' + _(' as ') + 'Le bijoutier\n\
-Mireille Mathieu' + _(' as ') + 'Herself / Elle-m?me\n\
+Mireille Mathieu' + _(' as ') + 'als sie selbst / Elle-m?me\n\
 Lilo' + _(' as ') + 'Madame F?lix\n\
 Claude Mann' + _(' as ') + 'L\'intellectuel\n\
 Fr?d?ric de Pasquale' + _(' as ') + 'L\'amant parisien\n\
@@ -368,18 +387,18 @@
 Norman de la Chesnaye\n\
 Pierre Edeline\n\
 Pierre Pontiche\n\
-Michou' + _(' as ') + 'Himself\n\
+Michou' + _(' as ') + 'als er selbst\n\
 Bettina Rheims' + _(' as ') + 'La jeune vendeuse\n\
 Joseph Rythmann\n\
 Georges Staquet\n\
 Jacques Villedieu\n\
 Harry Walter\n\
 ?brige Besetzung in alphabetischer Reihenfolge:\n\
-Anouk Aim?e' + _(' as ') + 'Une femme (archive footage) (uncredited)\n\
-Elie Chouraqui' + _(' as ') + '(uncredited)\n\
-R?my Julienne' + _(' as ') + 'Chauffeur de taxi (uncredited)\n\
-Jean-Louis Trintignant' + _(' as ') + 'Un homme (archive footage) (uncredited)',
-			'country'			: 'France | Italy',
+Anouk Aim?e' + _(' as ') + 'Une femme (Archivmaterial) (nicht im Abspann)\n\
+Elie Chouraqui' + _(' as ') + '(nicht im Abspann)\n\
+R?my Julienne' + _(' as ') + 'Chauffeur de taxi (nicht im Abspann)\n\
+Jean-Louis Trintignant' + _(' as ') + 'Un homme (Archivmaterial) (nicht im Abspann)',
+			'country'			: 'Frankreich | Italien',
 			'genre'				: 'Kom?die',
 			'classification'	: False,
 			'studio'			: 'Les Films 13',

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-19 19:14:13 UTC (rev 1097)
+++ trunk/ChangeLog	2008-12-19 20:40:33 UTC (rev 1098)
@@ -6,7 +6,7 @@
 
 
 2008-12-19  Michael Jahn
-	* OFDb movie plugin updated
+	* OFDb, IMDB-de movie plugin updated
 
 2008-12-16  Michael Jahn
 	* IMDB movie plugin updated

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-19 19:14:13 UTC (rev 1097)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-19 20:40:33 UTC (rev 1098)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2007 Michael Jahn
+# Copyright (c) 2007-2008 Michael Jahn
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -30,7 +30,7 @@
 plugin_language     = _('German')
 plugin_author       = 'Michael Jahn'
 plugin_author_email = 'mikej06 at hotmail.com'
-plugin_version      = '1.3'
+plugin_version      = '1.4'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -41,6 +41,9 @@
     def initialize(self):
         self.cast_page = self.open_page(url=self.url + '/fullcredits')
         self.plot_page = self.open_page(url=self.url + '/plotsummary')
+        # looking for the original imdb page
+        self.imdb_page = self.open_page(url="http://www.imdb.com/title/tt%s" % str(self.movie_id))
+        self.imdb_plot_page = self.open_page(url="http://www.imdb.com/title/tt%s/plotsummary" % str(self.movie_id))
         # correction of all &#xxx entities
         self.page = self.page.decode(self.encode)
         self.page = gutils.convert_entities(self.page)
@@ -91,10 +94,21 @@
             for element in elements:
                 if element != '':
                     self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n'
+        if self.plot == '':
+            # nothing in german found, try original
+            self.plot = self.regextrim(self.imdb_page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
+            self.plot = self.__before_more(self.plot)
+            elements = string.split(self.imdb_plot_page, '<p class="plotpar">')
+            if len(elements) > 1:
+                self.plot = self.plot + '\n\n'
+                elements[0] = ''
+                for element in elements:
+                    if element <> '':
+                        self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n\n'
 
     def get_year(self):
-        self.year = gutils.trim(self.page, '<a href="/Sections/Years/', '</a>')
-        self.year = gutils.after(self.year, '">')
+        self.year = gutils.trim(self.page, '<h1>', ' <span class')
+        self.year = gutils.trim(self.year, '(', ')')
 
     def get_runtime(self):
         self.runtime = gutils.regextrim(self.page, '<h5>L[^n]+nge:</h5>', ' [Mm]in')
@@ -117,7 +131,7 @@
         self.cast = re.sub('[ ]+', ' ', self.cast)
 
     def get_classification(self):
-        self.classification = gutils.trim(gutils.trim(self.page, 'Altersfreigabe:', '</div>'), 'Germany:', '&')
+        self.classification = gutils.trim(gutils.trim(self.page, 'Altersfreigabe:', '</div>'), 'Deutschland:', '|')
 
     def get_studio(self):
         self.studio = gutils.trim(self.page, '<h5>Firma:</h5>', '</div>')
@@ -142,7 +156,7 @@
         self.rating = gutils.trim(self.page, '<h5>Nutzer-Bewertung:</h5>', '/10')
         if self.rating:
             try:
-                self.rating = str(float(gutils.clean(self.rating)))
+                self.rating = str(float(gutils.digits_only(gutils.clean(self.rating))))
             except:
                 self.rating = ''
 
@@ -193,13 +207,13 @@
         return data
 
 class SearchPlugin(movie.SearchMovie):
-    PATTERN = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["']>(.*?)(</td>|</A>)""", re.IGNORECASE)
+    PATTERN = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""", re.IGNORECASE)
     PATTERN_POWERSEARCH = re.compile(r"""Here are the [0-9]+ matching titles""")
 
     def __init__(self):
-        self.original_url_search    = 'http://german.imdb.com/find?more=tt&q='
-        self.translated_url_search    = 'http://german.imdb.com/List?words='
-        self.encode = 'iso8859-1'
+        self.original_url_search   = 'http://german.imdb.com/find?more=tt&q='
+        self.translated_url_search = 'http://german.imdb.com/find?more=tt&q='
+        self.encode = 'utf8'
         self.remove_accents = False
 
     def search(self,parent_window):
@@ -212,9 +226,9 @@
         else:
             self.page = tmp 
         # correction of all &#xxx entities
-        self.page = self.page.decode(self.encode)
+        self.page = self.page.decode('iso8859-1')
         self.page = gutils.convert_entities(self.page)
-        self.page = self.page.encode(self.encode)
+        #self.page = self.page.encode(self.encode)
         return self.page
 
     def get_searches(self):
@@ -226,7 +240,7 @@
             for element in elements[1:]:
                 match = self.PATTERN.findall(element)
                 for entry in match:
-                    tmp  = gutils.clean(entry[1])
+                    tmp  = re.sub('^[0-9]+[.]', '', gutils.clean(gutils.after(entry[1], '>')))
                     self.ids.append(entry[0])
                     self.titles.append(tmp)
 
@@ -239,8 +253,8 @@
     # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
     #
     test_configuration = {
-        'Rocky Balboa'            : [ 3, 13 ],
-        'Ein gl?ckliches Jahr'    : [ 1, 30 ]
+        'Rocky Balboa'          : [ 15, 15 ],
+        'Ein gl?ckliches Jahr' : [  6,  6 ]
     }
 
 class PluginTest:
@@ -254,10 +268,10 @@
     test_configuration = {
         '0479143' : { 
             'title'             : 'Rocky Balboa',
-            'o_title'             : 'Rocky Balboa',
-            'director'            : 'Sylvester Stallone',
-            'plot'                 : True,
-            'cast'                : 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
+            'o_title'           : 'Rocky Balboa',
+            'director'          : 'Sylvester Stallone',
+            'plot'              : True,
+            'cast'              : 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
 Burt Young' + _(' as ') + 'Paulie Panina\n\
 Antonio Tarver' + _(' as ') + 'Mason \'The Line\' Dixon\n\
 Geraldine Hughes' + _(' as ') + 'Marie\n\
@@ -265,87 +279,92 @@
 Tony Burton' + _(' as ') + 'Duke\n\
 A.J. Benza' + _(' as ') + 'L.C.\n\
 James Francis Kelly III' + _(' as ') + 'Steps\n\
-Talia Shire' + _(' as ') + 'Adrian (archive footage)\n\
-Lou DiBella' + _(' as ') + 'Himself\n\
-Mike Tyson' + _(' as ') + 'Himself\n\
+Talia Shire' + _(' as ') + 'Adrian (Archivmaterial)\n\
+Lou DiBella' + _(' as ') + 'als er selbst\n\
+Mike Tyson' + _(' as ') + 'als er selbst\n\
 Henry G. Sanders' + _(' as ') + 'Martin\n\
 Pedro Lovell' + _(' as ') + 'Spider Rico\n\
 Ana Gerena' + _(' as ') + 'Isabel\n\
 Angela Boyd' + _(' as ') + 'Angie\n\
 Louis Giansante' + _(' as ') + 'Bar Thug\n\
 Maureen Schilling' + _(' as ') + 'Lucky\'s Bartender\n\
-Lahmard J. Tate' + _(' as ') + 'X-Cell (as Lahmard Tate)\n\
-Woody Paige' + _(' as ') + 'ESPN Commentator (as Woodrow W. Paige)\n\
+Lahmard J. Tate' + _(' as ') + 'X-Cell (als Lahmard Tate)\n\
+Woody Paige' + _(' as ') + 'ESPN Commentator (als Woodrow W. Paige)\n\
 Skip Bayless' + _(' as ') + 'ESPN Commentator\n\
 Jay Crawford' + _(' as ') + 'ESPN Commentator\n\
 Brian Kenny' + _(' as ') + 'ESPN Host\n\
 Dana Jacobson' + _(' as ') + 'ESPN Host\n\
-Charles Johnson' + _(' as ') + 'ESPN Host (as Chuck Johnson)\n\
-James Binns' + _(' as ') + 'Commissioner (as James J. Binns)\n\
+Charles Johnson' + _(' as ') + 'ESPN Host (als Chuck Johnson)\n\
+James Binns' + _(' as ') + 'Commissioner (als James J. Binns)\n\
 Johnnie Hobbs Jr.' + _(' as ') + 'Commissioner\n\
 Barney Fitzpatrick' + _(' as ') + 'Commissioner\n\
 Jim Lampley' + _(' as ') + 'HBO Commentator\n\
 Larry Merchant' + _(' as ') + 'HBO Commentator\n\
 Max Kellerman' + _(' as ') + 'HBO Commentator\n\
-LeRoy Neiman' + _(' as ') + 'Himself\n\
+LeRoy Neiman' + _(' as ') + 'als er selbst\n\
 Bert Randolph Sugar' + _(' as ') + 'Ring Magazine Reporter\n\
-Bernard Fern?ndez' + _(' as ') + 'Boxing Association of America Writer (as Bernard Fernandez)\n\
+Bernard Fern?ndez' + _(' as ') + 'Boxing Association of America Writer (als Bernard Fernandez)\n\
 Gunnar Peterson' + _(' as ') + 'Weightlifting Trainer\n\
 Yahya' + _(' as ') + 'Dixon\'s Opponent\n\
 Marc Ratner' + _(' as ') + 'Weigh-In Official\n\
 Anthony Lato Jr.' + _(' as ') + 'Rocky\'s Inspector\n\
 Jack Lazzarado' + _(' as ') + 'Dixon\'s Inspector\n\
 Michael Buffer' + _(' as ') + 'Ring Announcer\n\
-Joe Cortez' + _(' as ') + 'Referee\n\
+Joe Cortez' + _(' as ') + 'Schiedsrichter\n\
 Carter Mitchell' + _(' as ') + 'Shamrock Foreman\n\
 Vinod Kumar' + _(' as ') + 'Ravi\n\
 Fran Pultro' + _(' as ') + 'Father at Restaurant\n\
-Frank Stallone' + _(' as ') + 'Dinner Patron (as Frank Stallone Jr.)\n\
+Frank Stallone' + _(' as ') + 'Dinner Patron (als Frank Stallone Jr.)\n\
 Jody Giambelluca' + _(' as ') + 'Dinner Patron\n\
 Tobias Segal' + _(' as ') + 'Robert\'s Friend\n\
 Tim Carr' + _(' as ') + 'Robert\'s Friend\n\
 Matt Frack' + _(' as ') + 'Robert\'s Friend #3\n\
 Paul Dion Monte' + _(' as ') + 'Robert\'s Friend\n\
-Kevin King Templeton' + _(' as ') + 'Robert\'s Friend (as Kevin King-Templeton)\n\
+Kevin King Templeton' + _(' as ') + 'Robert\'s Friend (als Kevin King-Templeton)\n\
 Robert Michael Kelly' + _(' as ') + 'Mr. Tomilson\n\
 Rick Buchborn' + _(' as ') + 'Rocky Fan\n\
 Nick Baker' + _(' as ') + 'Irish Pub Bartender\n\
 Don Sherman' + _(' as ') + 'Andy\n\
-Stu Nahan' + _(' as ') + 'Computer Fight Commentator (voice)\n\
-Gary Compton' + _(' as ') + 'Security Guard\n\
+Stu Nahan' + _(' as ') + 'Computer Fight Commentator (Sprechrolle)\n\
+Gary Compton' + _(' as ') + 'Sicherheitsbediensteter\n\
 ?brige Besetzung in alphabetischer Reihenfolge:\n\
-Ricky Cavazos' + _(' as ') + 'Boxing Spectator (uncredited)\n\
-David Kneeream' + _(' as ') + 'Adrian\'s Patron (uncredited)\n\
-Dolph Lundgren' + _(' as ') + 'Captain Ivan Drago (archive footage) (uncredited)\n\
-Burgess Meredith' + _(' as ') + 'Mickey Goldmill (archive footage) (uncredited)\n\
-Keith Moyer' + _(' as ') + 'Bar Patron (uncredited)\n\
-Mr. T' + _(' as ') + 'Clubber Lang (archive footage) (uncredited)',
-            'country'            : 'USA',
-            'genre'                : 'Action | Sport',
+Ricky Cavazos' + _(' as ') + 'Boxing Spectator (nicht im Abspann)\n\
+Deon Derrico' + _(' as ') + 'High roller at limo (nicht im Abspann)\n\
+Ruben Fischman' + _(' as ') + 'High-Roller in Las Vegas (nicht im Abspann)\n\
+Mark J. Kilbane' + _(' as ') + 'Businessman (nicht im Abspann)\n\
+David Kneeream' + _(' as ') + 'Adrian\'s Patron (nicht im Abspann)\n\
+Dolph Lundgren' + _(' as ') + 'Captain Ivan Drago (Archivmaterial) (nicht im Abspann)\n\
+Burgess Meredith' + _(' as ') + 'Mickey Goldmill (Archivmaterial) (nicht im Abspann)\n\
+Keith Moyer' + _(' as ') + 'Bargast (nicht im Abspann)\n\
+Mr. T' + _(' as ') + 'Clubber Lang (Archivmaterial) (nicht im Abspann)\n\
+Jacqueline Olivia' + _(' as ') + 'M?dchen (nicht im Abspann)\n\
+Brian H. Scott' + _(' as ') + 'Ringside Cop #1 (nicht im Abspann)\n\
+Jackie Sereni' + _(' as ') + 'Girl on Steps (nicht im Abspann)',
+            'country'           : 'USA',
+            'genre'             : 'Action | Sport',
             'classification'    : False,
             'studio'            : 'Metro-Goldwyn-Mayer (MGM)',
             'o_site'            : False,
-            'site'                : 'http://german.imdb.com/title/tt0479143',
-            'trailer'            : 'http://german.imdb.com/title/tt0479143/trailers',
-            'year'                : 2006,
-            'notes'                : _('Language') + ': Englisch | Spanisch\n'\
+            'site'              : 'http://german.imdb.com/title/tt0479143',
+            'trailer'           : 'http://german.imdb.com/title/tt0479143/trailers',
+            'year'              : 2006,
+            'notes'             : _('Language') + ': Englisch | Spanisch\n'\
 + _('Audio') + ': DTS | Dolby Digital | SDDS\n'\
-+ _('Color') + ': Farbe\n\
-Tagline: It ain\'t over \'til it\'s over.',
-            'runtime'            : 102,
-            'image'                : True,
++ _('Color') + ': Farbe',
+            'runtime'           : 102,
+            'image'             : True,
             'rating'            : 7
         },
         '0069815' : { 
-            'title'             : 'Gl?ckliches Jahr, Ein',
-            'o_title'             : 'Bonne ann?e, La',
-            'director'            : 'Claude Lelouch',
-            'plot'                 : True,
-            'cast'                : 'Lino Ventura' + _(' as ') + 'Simon\n\
+            'title'             : 'Ein Gl?ckliches Jahr',
+            'o_title'           : 'Bonne ann?e, La',
+            'director'          : 'Claude Lelouch',
+            'plot'              : True,
+            'cast'              : 'Lino Ventura' + _(' as ') + 'Simon\n\
 Fran?oise Fabian' + _(' as ') + 'Fran?oise\n\
 Charles G?rard' + _(' as ') + 'Charlot\n\
 Andr? Falcon' + _(' as ') + 'Le bijoutier\n\
-Mireille Mathieu' + _(' as ') + 'Herself / Elle-m?me\n\
+Mireille Mathieu' + _(' as ') + 'als sie selbst / Elle-m?me\n\
 Lilo' + _(' as ') + 'Madame F?lix\n\
 Claude Mann' + _(' as ') + 'L\'intellectuel\n\
 Fr?d?ric de Pasquale' + _(' as ') + 'L\'amant parisien\n\
@@ -356,30 +375,30 @@
 Norman de la Chesnaye\n\
 Pierre Edeline\n\
 Pierre Pontiche\n\
-Michou' + _(' as ') + 'Himself\n\
+Michou' + _(' as ') + 'als er selbst\n\
 Bettina Rheims' + _(' as ') + 'La jeune vendeuse\n\
 Joseph Rythmann\n\
 Georges Staquet\n\
 Jacques Villedieu\n\
 Harry Walter\n\
 ?brige Besetzung in alphabetischer Reihenfolge:\n\
-Anouk Aim?e' + _(' as ') + 'Une femme (archive footage) (uncredited)\n\
-Elie Chouraqui' + _(' as ') + '(uncredited)\n\
-R?my Julienne' + _(' as ') + 'Chauffeur de taxi (uncredited)\n\
-Jean-Louis Trintignant' + _(' as ') + 'Un homme (archive footage) (uncredited)',
-            'country'            : 'France | Italy',
-            'genre'                : 'Kom?die',
-            'classification'    : False,
-            'studio'            : 'Les Films 13',
-            'o_site'            : False,
-            'site'                : 'http://german.imdb.com/title/tt0069815',
+Anouk Aim?e' + _(' as ') + 'Une femme (Archivmaterial) (nicht im Abspann)\n\
+Elie Chouraqui' + _(' as ') + '(nicht im Abspann)\n\
+R?my Julienne' + _(' as ') + 'Chauffeur de taxi (nicht im Abspann)\n\
+Jean-Louis Trintignant' + _(' as ') + 'Un homme (Archivmaterial) (nicht im Abspann)',
+            'country'            : 'Frankreich | Italien',
+            'genre'              : 'Kom?die',
+            'classification'     : False,
+            'studio'             : 'Les Films 13',
+            'o_site'             : False,
+            'site'               : 'http://german.imdb.com/title/tt0069815',
             'trailer'            : 'http://german.imdb.com/title/tt0069815/trailers',
-            'year'                : 1973,
-            'notes'                : _('Language') + ': Franz?sisch\n'\
+            'year'               : 1973,
+            'notes'              : _('Language') + ': Franz?sisch\n'\
 + _('Audio') + ': Mono\n'\
 + _('Color') + ': Farbe (Eastmancolor)',
             'runtime'            : 90,
-            'image'                : True,
-            'rating'            : 7
+            'image'              : True,
+            'rating'             : 7
         },
     }



From mikej06 at mail.berlios.de  Sat Dec 20 22:45:30 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sat, 20 Dec 2008 22:45:30 +0100
Subject: [Griffith-svn] r1099 - branches/0.9.x/lib/plugins/movie
	trunk/lib/plugins/movie
Message-ID: <200812202145.mBKLjUg0025719@sheep.berlios.de>

Author: mikej06
Date: 2008-12-20 22:44:52 +0100 (Sat, 20 Dec 2008)
New Revision: 1099

Modified:
   branches/0.9.x/lib/plugins/movie/PluginMovieKinoDe.py
   trunk/lib/plugins/movie/PluginMovieAmazon.py
   trunk/lib/plugins/movie/PluginMovieIMDB-de.py
   trunk/lib/plugins/movie/PluginMovieKinoDe.py
Log:
* KinoDe plugin updated
* fixed typo in amazon and imdb-de plugin

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieKinoDe.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieKinoDe.py	2008-12-19 20:40:33 UTC (rev 1098)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieKinoDe.py	2008-12-20 21:44:52 UTC (rev 1099)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2006-2007
+# Copyright (c) 2006-2008
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -32,7 +32,7 @@
 plugin_language = _("German")
 plugin_author = "Michael Jahn"
 plugin_author_email = "<mikej06 at hotmail.com>"
-plugin_version = "1.12"
+plugin_version = "1.13"
 
 class Plugin(movie.Movie):
 	url_to_use = "http://www.kino.de/kinofilm/"
@@ -51,13 +51,13 @@
 		self.url = self.url_to_use + str(self.movie_id)
 
 	def initialize(self):
-		self.tmp_page = gutils.before(self.page, 'kinode_navi1')
+		self.tmp_page = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
 		self.url = self.url_to_use + string.replace(str(self.movie_id), '/', '/credits/')
 		self.open_page(self.parent_window)
-		self.tmp_creditspage = gutils.before(self.page, 'kinode_navi1')
+		self.tmp_creditspage = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
 		self.url = self.url_to_use + string.replace(str(self.movie_id), "/", "/features/")
 		self.open_page(self.parent_window)
-		self.tmp_dvdfeaturespage = gutils.before(self.page, 'kinode_navi1')
+		self.tmp_dvdfeaturespage = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
 
 	def get_image(self):
 		self.image_url = ''
@@ -187,16 +187,16 @@
 	def get_notes(self):
 		self.notes = ""
 		tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Sprache</b>", "</td></tr>")), "&nbsp;", "")
-		if (tmp_notes != ""):
+		if tmp_notes != "":
 			self.notes = self.notes + "Sprachen:\n" + tmp_notes + "\n\n"
 		tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Untertitel</b>", "</td></tr>")), "&nbsp;", "")
-		if (tmp_notes != ""):
+		if tmp_notes != "":
 			self.notes = self.notes + "Untertitel:\n" + tmp_notes + "\n\n"
 		tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Mehrkanalton</b>", "</td></tr>")), "&nbsp;", "")
-		if (tmp_notes != ""):
+		if tmp_notes != "":
 			self.notes = self.notes + "Mehrkanalton:\n" + tmp_notes + "\n\n"
 		tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>EAN</b>", "</td></tr>")), "&nbsp;", "")
-		if (tmp_notes != ""):
+		if tmp_notes != "":
 			self.notes = self.notes + "EAN:\n" + tmp_notes + "\n\n"
 			
 	def regextrim(self,text,key1,key2):
@@ -233,7 +233,7 @@
 		#
 		# try to get all result pages (not so nice, but it works)
 		#
-		tmp_pagecount = gutils.trim(tmp_pagemovie, '>von', '</a>')
+		tmp_pagecount = gutils.clean(gutils.trim(tmp_pagemovie, '>von', '</a>'))
 		try:
 			tmp_pagecountint = int(tmp_pagecount)
 		except:
@@ -253,7 +253,7 @@
 		#
 		# try to get all result pages (not so nice, but it works)
 		#
-		tmp_pagecount = gutils.trim(self.page, '>von', '</a>')
+		tmp_pagecount = gutils.clean(gutils.trim(self.page, '>von', '</a>'))
 		try:
 			tmp_pagecountint = int(tmp_pagecount)
 		except:
@@ -269,7 +269,7 @@
 		return self.page
 
 	def get_searches(self):
-		elements1 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(http://www.kino.de)*/kinofilm/', self.page)
+		elements1 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(?:http://www.kino.de)*/kinofilm/', self.page)
 		elements1[0] = None
 		for element in elements1:
 			if element <> None:
@@ -285,7 +285,7 @@
 					'( - (', '('), '))', ')')
 				)
 
-		elements2 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(http://www.kino.de)*/videofilm/', self.page)
+		elements2 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(?:http://www.video.de)*/videofilm/', self.page)
 		elements2[0] = None
 		for element in elements2:
 			if element <> None:
@@ -354,7 +354,7 @@
 			'title' 			: 'Ein gl?ckliches Jahr',
 			'o_title' 			: 'La bonne ann?e',
 			'director'			: 'Claude Lelouch',
-			'plot' 				: True,
+			'plot' 				: False,
 			'cast'				: 'Lino Ventura\n\
 Fran?oise Fabian\n\
 Charles G?rard\n\

Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2008-12-19 20:40:33 UTC (rev 1098)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2008-12-20 21:44:52 UTC (rev 1099)
@@ -108,7 +108,7 @@
             if isinstance(self.page.ItemAttributes.Director, list):
                 self.director = string.join(self.page.ItemAttributes.Director, ', ')
             else:
-                self.director = self.page.ItemAttributes.Director,
+                self.director = self.page.ItemAttributes.Director
         else:
             self.director = ''
 

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-de.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-19 20:40:33 UTC (rev 1098)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-de.py	2008-12-20 21:44:52 UTC (rev 1099)
@@ -96,7 +96,7 @@
                     self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n'
         if self.plot == '':
             # nothing in german found, try original
-            self.plot = self.regextrim(self.imdb_page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
+            self.plot = gutils.regextrim(self.imdb_page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
             self.plot = self.__before_more(self.plot)
             elements = string.split(self.imdb_plot_page, '<p class="plotpar">')
             if len(elements) > 1:

Modified: trunk/lib/plugins/movie/PluginMovieKinoDe.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieKinoDe.py	2008-12-19 20:40:33 UTC (rev 1098)
+++ trunk/lib/plugins/movie/PluginMovieKinoDe.py	2008-12-20 21:44:52 UTC (rev 1099)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2006-2007
+# Copyright (c) 2006-2008
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -32,7 +32,7 @@
 plugin_language = _("German")
 plugin_author = "Michael Jahn"
 plugin_author_email = "<mikej06 at hotmail.com>"
-plugin_version = "1.12"
+plugin_version = "1.13"
 
 class Plugin(movie.Movie):
     url_to_use = "http://www.kino.de/kinofilm/"
@@ -51,13 +51,13 @@
         self.url = self.url_to_use + str(self.movie_id)
 
     def initialize(self):
-        self.tmp_page = gutils.before(self.page, 'kinode_navi1')
+        self.tmp_page = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
         self.url = self.url_to_use + string.replace(str(self.movie_id), '/', '/credits/')
         self.open_page(self.parent_window)
-        self.tmp_creditspage = gutils.before(self.page, 'kinode_navi1')
+        self.tmp_creditspage = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
         self.url = self.url_to_use + string.replace(str(self.movie_id), "/", "/features/")
         self.open_page(self.parent_window)
-        self.tmp_dvdfeaturespage = gutils.before(self.page, 'kinode_navi1')
+        self.tmp_dvdfeaturespage = gutils.before(self.page, '<!-- PRINT-CONTENT-ENDE-->')
 
     def get_image(self):
         self.image_url = ''
@@ -154,7 +154,7 @@
                         self.cast += elements2[1] + "\n"
                 else:
                     self.cast += element + "\n"
-            self.cast = string.replace(self.cast, '--flip--', _(' as ').encode('utf8'))
+            self.cast = string.replace(self.cast, '--flip--', _(' as '))
 
     def get_classification(self):
         self.classification = gutils.regextrim(self.tmp_page,'FSK:( |&nbsp;)+', '</strong>')
@@ -187,32 +187,25 @@
     def get_notes(self):
         self.notes = ""
         tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Sprache</b>", "</td></tr>")), "&nbsp;", "")
-        if (tmp_notes != ""):
+        if tmp_notes != "":
             self.notes = self.notes + "Sprachen:\n" + tmp_notes + "\n\n"
         tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Untertitel</b>", "</td></tr>")), "&nbsp;", "")
-        if (tmp_notes != ""):
+        if tmp_notes != "":
             self.notes = self.notes + "Untertitel:\n" + tmp_notes + "\n\n"
         tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>Mehrkanalton</b>", "</td></tr>")), "&nbsp;", "")
-        if (tmp_notes != ""):
+        if tmp_notes != "":
             self.notes = self.notes + "Mehrkanalton:\n" + tmp_notes + "\n\n"
         tmp_notes = string.replace(gutils.strip_tags(gutils.trim(self.tmp_dvdfeaturespage, "<b>EAN</b>", "</td></tr>")), "&nbsp;", "")
-        if (tmp_notes != ""):
+        if tmp_notes != "":
             self.notes = self.notes + "EAN:\n" + tmp_notes + "\n\n"
 
-#
-# kino.de use iso-8859-1
-# it's not necessary to decode the page
-# in fact if utf-8 is used you can't search for movies with german umlaut
-# and if you use the decode call you get a terrible formatted result list
-#
-
 class SearchPlugin(movie.SearchMovie):
 
     def __init__(self):
         self.original_url_search   = 'http://www.kino.de/search.php?mode=megaSearch&searchCategory=film&inputSearch='
         self.translated_url_search = 'http://www.kino.de/search.php?mode=megaSearch&searchCategory=film&inputSearch='
-#        self.encode='utf-8'
         self.encode='iso-8859-1'
+        self.remove_accents = False
 
     def search(self,parent_window):
         self.open_search(parent_window)
@@ -220,7 +213,7 @@
         #
         # try to get all result pages (not so nice, but it works)
         #
-        tmp_pagecount = gutils.trim(tmp_pagemovie, '>von', '</a>')
+        tmp_pagecount = gutils.clean(gutils.trim(tmp_pagemovie, '>von', '</a>'))
         try:
             tmp_pagecountint = int(tmp_pagecount)
         except:
@@ -240,7 +233,7 @@
         #
         # try to get all result pages (not so nice, but it works)
         #
-        tmp_pagecount = gutils.trim(self.page, '>von', '</a>')
+        tmp_pagecount = gutils.clean(gutils.trim(self.page, '>von', '</a>'))
         try:
             tmp_pagecountint = int(tmp_pagecount)
         except:
@@ -256,7 +249,7 @@
         return self.page
 
     def get_searches(self):
-        elements1 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(http://www.kino.de)*/kinofilm/', self.page)
+        elements1 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(?:http://www.kino.de)*/kinofilm/', self.page)
         elements1[0] = None
         for element in elements1:
             if element <> None:
@@ -272,7 +265,7 @@
                     '( - (', '('), '))', ')')
                 )
 
-        elements2 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(http://www.kino.de)*/videofilm/', self.page)
+        elements2 = re.split('headline3"[^>]*>[ \t\r\n]*<a href="(?:http://www.video.de)*/videofilm/', self.page)
         elements2[0] = None
         for element in elements2:
             if element <> None:
@@ -297,9 +290,9 @@
     # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
     #
     test_configuration = {
-        'Rocky Balboa'            : [ 6, 6 ],
+        'Rocky Balboa'          : [ 6, 6 ],
         'Arahan'                : [ 6, 6 ],
-        'Ein gl?ckliches Jahr'    : [ 3, 3 ]
+        'Ein gl?ckliches Jahr' : [ 3, 3 ]
     }
 
 class PluginTest:
@@ -312,10 +305,10 @@
     #
     test_configuration = {
         'K_rocky-balboa/96132.html' : { 
-            'title'             : 'Rocky Balboa',
+            'title'               : 'Rocky Balboa',
             'o_title'             : 'Rocky Balboa',
             'director'            : 'Sylvester Stallone',
-            'plot'                 : True,
+            'plot'                : True,
             'cast'                : 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
 Antonio Traver' + _(' as ') + 'Mason "The Line" Dixon\n\
 Burt Young' + _(' as ') + 'Paulie\n\
@@ -324,59 +317,59 @@
 James Francis Kelly III' + _(' as ') + 'Steps\n\
 Tony Burton' + _(' as ') + 'Duke\n\
 A.J. Benza' + _(' as ') + 'L.C.',
-            'country'            : 'USA',
-            'genre'                : 'Drama',
-            'classification'    : 'Freigegeben ab 12 Jahren',
-            'studio'            : 'Fox',
-            'o_site'            : False,
+            'country'             : 'USA',
+            'genre'               : 'Drama',
+            'classification'      : 'Freigegeben ab 12 Jahren',
+            'studio'              : 'Fox',
+            'o_site'              : False,
             'site'                : 'http://www.kino.de/kinofilm/rocky-balboa/96132.html',
-            'trailer'            : False,
+            'trailer'             : False,
             'year'                : 2006,
-            'notes'                : False,
-            'runtime'            : 102,
-            'image'                : True,
-            'rating'            : False
+            'notes'               : False,
+            'runtime'             : 102,
+            'image'               : True,
+            'rating'              : False
         },
         'K_ein-glueckliches-jahr/28675.html' : { 
-            'title'             : 'Ein gl?ckliches Jahr',
+            'title'               : 'Ein gl?ckliches Jahr',
             'o_title'             : 'La bonne ann?e',
             'director'            : 'Claude Lelouch',
-            'plot'                 : True,
+            'plot'                : False,
             'cast'                : 'Lino Ventura\n\
 Fran?oise Fabian\n\
 Charles G?rard\n\
 Andr? Falcon',
-            'country'            : 'Frankreich/Italien',
-            'genre'                : 'Drama',
-            'classification'    : 'Freigegeben ab 12 Jahren',
-            'studio'            : 'Columbia TriStar',
-            'o_site'            : False,
+            'country'             : 'Frankreich/Italien',
+            'genre'               : 'Drama',
+            'classification'      : 'Freigegeben ab 12 Jahren',
+            'studio'              : 'Columbia TriStar',
+            'o_site'              : False,
             'site'                : 'http://www.kino.de/kinofilm/ein-glueckliches-jahr/28675.html',
-            'trailer'            : False,
+            'trailer'             : False,
             'year'                : 1973,
-            'notes'                : False,
-            'runtime'            : 115,
-            'image'                : False,
-            'rating'            : False
+            'notes'               : False,
+            'runtime'             : 115,
+            'image'               : False,
+            'rating'              : False
         },
         'V_ein-glueckliches-jahr-dvd/85546.html' : { 
-            'title'             : 'Ein gl?ckliches Jahr',
+            'title'               : 'Ein gl?ckliches Jahr',
             'o_title'             : 'La bonne ann?e',
             'director'            : 'Claude Lelouch',
-            'plot'                 : True,
+            'plot'                : True,
             'cast'                : 'Lino Ventura\n\
 Fran?oise Fabian\n\
 Charles G?rard\n\
 Andr? Falcon',
-            'country'            : 'Frankreich/Italien',
-            'genre'                : 'Drama',
-            'classification'    : 'Freigegeben ab 12 Jahren',
-            'studio'            : 'Black Hill Pictures',
-            'o_site'            : False,
+            'country'             : 'Frankreich/Italien',
+            'genre'               : 'Drama',
+            'classification'      : 'Freigegeben ab 12 Jahren',
+            'studio'              : 'Black Hill Pictures',
+            'o_site'              : False,
             'site'                : 'http://www.kino.de/videofilm/ein-glueckliches-jahr-dvd/85546.html',
-            'trailer'            : False,
+            'trailer'             : False,
             'year'                : 1973,
-            'notes'                : 'Sprachen:\n\
+            'notes'               : 'Sprachen:\n\
 Deutsch DD 2.0, Franz?sisch DD 2.0\n\
 \n\
 Mehrkanalton:\n\
@@ -384,29 +377,29 @@
 \n\
 EAN:\n\
 7321921998843',
-            'runtime'            : 110,
-            'image'                : True,
-            'rating'            : False
+            'runtime'             : 110,
+            'image'               : True,
+            'rating'              : False
         },
         'V_arahan-vanilla-dvd/90405.html' : { 
-            'title'             : 'Arahan (Vanilla-DVD)',
+            'title'               : 'Arahan (Vanilla-DVD)',
             'o_title'             : 'Arahan jangpung dae jakjeon',
             'director'            : 'Ryoo Seung-wan',
-            'plot'                 : True,
+            'plot'                : True,
             'cast'                : 'Ryu Seung-beom' + _(' as ') + 'Sang-hwan\n\
 Yoon So-yi' + _(' as ') + 'Wi-jin\n\
 Ahn Sung-kee' + _(' as ') + 'Ja-woon\n\
 Jung Doo-hong' + _(' as ') + 'Heuk-woon\n\
 Yun Ju-sang' + _(' as ') + 'Mu-woon',
-            'country'            : 'S?dkorea',
-            'genre'                : 'Action/Kom?die',
-            'classification'    : 'Freigegeben ab 16 Jahren',
-            'studio'            : 'Splendid',
-            'o_site'            : False,
+            'country'             : 'S?dkorea',
+            'genre'               : 'Action/Kom?die',
+            'classification'      : 'Freigegeben ab 16 Jahren',
+            'studio'              : 'Splendid',
+            'o_site'              : False,
             'site'                : 'http://www.kino.de/videofilm/arahan-vanilla-dvd/90405.html',
-            'trailer'            : False,
+            'trailer'             : False,
             'year'                : 2004,
-            'notes'                : 'Sprachen:\n\
+            'notes'               : 'Sprachen:\n\
 Deutsch DD 5.1\n\
 \n\
 Mehrkanalton:\n\
@@ -414,8 +407,8 @@
 \n\
 EAN:\n\
 4013549871105',
-            'runtime'            : 108,
-            'image'                : True,
-            'rating'            : False
+            'runtime'             : 108,
+            'image'               : True,
+            'rating'              : False
         }
     }



From mikej06 at mail.berlios.de  Sat Dec 20 22:48:05 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sat, 20 Dec 2008 22:48:05 +0100
Subject: [Griffith-svn] r1100 - branches/0.9.x/lib trunk/lib
Message-ID: <200812202148.mBKLm59A026260@sheep.berlios.de>

Author: mikej06
Date: 2008-12-20 22:47:39 +0100 (Sat, 20 Dec 2008)
New Revision: 1100

Modified:
   branches/0.9.x/lib/test_movieplugins.py
   trunk/lib/test_movieplugins.py
Log:
movie plugin test code writes result files
0.10 compatibility fixed for movie plugin test code

Modified: branches/0.9.x/lib/test_movieplugins.py
===================================================================
--- branches/0.9.x/lib/test_movieplugins.py	2008-12-20 21:44:52 UTC (rev 1099)
+++ branches/0.9.x/lib/test_movieplugins.py	2008-12-20 21:47:39 UTC (rev 1100)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2006-2007
+# Copyright (c) 2006-2008
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -75,7 +75,7 @@
 	# simulates the search for a movie title and compares
 	# the count of results with the expected count
 	#
-	def test_search(self, plugin, title, cntOriginal, cntTranslated):
+	def test_search(self, plugin, logFile, title, cntOriginal, cntTranslated):
 		global debug, myconfig
 		result = True
 		plugin.debug = debug
@@ -90,6 +90,11 @@
 		plugin.get_searches()
 		if not len(plugin.ids) - 1 == cntOriginal:	# first entry is always '' (???)
 			print "Title (Translated): %s - expected: %d - found: %d" % (title, cntOriginal, len(plugin.ids) - 1)
+			logFile.write("Title (Translated): %s - expected: %d - found: %d\n\n" % (title, cntOriginal, len(plugin.ids) - 1))
+			for titleFound in plugin.titles:
+				logFile.write(titleFound)
+				logFile.write('\n')
+			logFile.write('\n\n')
 			result = False
 		# plugin.original_url_search
 		plugin.url = plugin.original_url_search
@@ -101,6 +106,11 @@
 		plugin.get_searches()
 		if not len(plugin.ids) - 1 == cntTranslated:	# first entry is always '' (???)
 			print "Title (Original): %s - expected: %d - found: %d" % (title, cntTranslated, len(plugin.ids) - 1)
+			logFile.write("Title (Original): %s - expected: %d - found: %d\n\n" % (title, cntTranslated, len(plugin.ids) - 1))
+			for titleFound in plugin.titles:
+				logFile.write(titleFound)
+				logFile.write('\n')
+			logFile.write('\n\n')
 			result = False
 		return result
 
@@ -118,11 +128,15 @@
 			pluginTestConfig = None
 		
 		if not pluginTestConfig == None:
-			for i in pluginTestConfig.test_configuration:
-				searchPlugin = plugin.SearchPlugin()
-				if not self.test_search(searchPlugin, i, pluginTestConfig.test_configuration[i][0], pluginTestConfig.test_configuration[i][1]):
-					result = False
-				sleep(1) # needed for amazon
+			logFile = open(plugin_name + '-searchtest.txt', 'w+')
+			try:
+				for i in pluginTestConfig.test_configuration:
+					searchPlugin = plugin.SearchPlugin()
+					if not self.test_search(searchPlugin, logFile, i, pluginTestConfig.test_configuration[i][0], pluginTestConfig.test_configuration[i][1]):
+						result = False
+					sleep(1) # needed for amazon
+			finally:
+				logFile.close()
 		
 		if domsgbox:
 			if not result:
@@ -136,7 +150,7 @@
 	# simulates the resolving of movie data for configured movies and
 	# compares the results with the expected once
 	#
-	def test_one_movie(self, movieplugin, results_expected):
+	def test_one_movie(self, movieplugin, logFile, results_expected):
 		global debug, myconfig
 		result = True
 		self.movie = movieplugin
@@ -190,18 +204,22 @@
 				if i_val:
 					if not results.has_key(i) or len(results[i]) < 1:
 						print "Test error: %s: Value expected but nothing returned.\nKey: %s" % (movieplugin.movie_id, i)
+						logFile.write("Test error: %s: Value expected but nothing returned.\nKey: %s\n\n" % (movieplugin.movie_id, i))
 						result = False
 				else:
 					if results.has_key(i) and len(results[i]) > 0:
 						print "Test error: %s: No value expected but something returned.\nKey: %s\nValue: %s" % (movieplugin.movie_id, i, results[i])
+						logFile.write("Test error: %s: No value expected but something returned.\nKey: %s\nValue: %s\n\n" % (movieplugin.movie_id, i, results[i]))
 						result = False
 			else:
 				if not results.has_key(i):
 					print "Test error: %s: Value expected but nothing returned.\nKey: %s" % (movieplugin.movie_id, i)
+					logFile.write("Test error: %s: Value expected but nothing returned.\nKey: %s\n\n" % (movieplugin.movie_id, i))
 					result = False
 				else:
 					if not results[i] == i_val:
 						print "Test error: %s: Wrong value returned.\nKey: %s\nValue expected: %s\nValue returned: %s" % (movieplugin.movie_id, i, i_val, results[i])
+						logFile.write("Test error: %s: Wrong value returned.\nKey: %s\nValue expected: %s\nValue returned: %s\n\n" % (movieplugin.movie_id, i, i_val, results[i]))
 						result = False
 		return result
 	
@@ -219,11 +237,15 @@
 			pluginTestConfig = None
 		
 		if not pluginTestConfig == None:
-			for i in pluginTestConfig.test_configuration:
-				moviePlugin = plugin.Plugin(i)
-				if not self.test_one_movie(moviePlugin, pluginTestConfig.test_configuration[i]):
-					result = False
-				sleep(1) # needed for amazon
+			logFile = open(plugin_name + '-loadtest.txt', 'w+')
+			try:
+				for i in pluginTestConfig.test_configuration:
+					moviePlugin = plugin.Plugin(i)
+					if not self.test_one_movie(moviePlugin, logFile, pluginTestConfig.test_configuration[i]):
+						result = False
+					sleep(1) # needed for amazon
+			finally:
+				logFile.close()
 
 		if domsgbox:
 			if not result:

Modified: trunk/lib/test_movieplugins.py
===================================================================
--- trunk/lib/test_movieplugins.py	2008-12-20 21:44:52 UTC (rev 1099)
+++ trunk/lib/test_movieplugins.py	2008-12-20 21:47:39 UTC (rev 1100)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2006-2007
+# Copyright (c) 2006-2008
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -44,6 +44,7 @@
 import sys
 import initialize
 import gutils
+import gconsole
 import config
 import os
 from time import sleep
@@ -52,7 +53,11 @@
     import gobject
 except:
     pass
-    
+
+import logging
+logging.basicConfig()
+log = logging.getLogger("Griffith")
+
 sys.path.append('plugins/movie')
 
 #
@@ -74,7 +79,7 @@
     # simulates the search for a movie title and compares
     # the count of results with the expected count
     #
-    def test_search(self, plugin, title, cntOriginal, cntTranslated):
+    def test_search(self, plugin, logFile, title, cntOriginal, cntTranslated):
         global myconfig
         result = True
         plugin.config = myconfig
@@ -88,6 +93,11 @@
         plugin.get_searches()
         if not len(plugin.ids) - 1 == cntOriginal:    # first entry is always '' (???)
             print "Title (Translated): %s - expected: %d - found: %d" % (title, cntOriginal, len(plugin.ids) - 1)
+            logFile.write("Title (Translated): %s - expected: %d - found: %d\n\n" % (title, cntOriginal, len(plugin.ids) - 1))
+            for titleFound in plugin.titles:
+                logFile.write(titleFound)
+                logFile.write('\n')
+            logFile.write('\n\n')
             result = False
         # plugin.original_url_search
         plugin.url = plugin.original_url_search
@@ -99,6 +109,11 @@
         plugin.get_searches()
         if not len(plugin.ids) - 1 == cntTranslated:    # first entry is always '' (???)
             print "Title (Original): %s - expected: %d - found: %d" % (title, cntTranslated, len(plugin.ids) - 1)
+            logFile.write("Title (Original): %s - expected: %d - found: %d\n\n" % (title, cntTranslated, len(plugin.ids) - 1))
+            for titleFound in plugin.titles:
+                logFile.write(titleFound)
+                logFile.write('\n')
+            logFile.write('\n\n')
             result = False
         return result
 
@@ -116,11 +131,15 @@
             pluginTestConfig = None
         
         if not pluginTestConfig == None:
-            for i in pluginTestConfig.test_configuration:
-                searchPlugin = plugin.SearchPlugin()
-                if not self.test_search(searchPlugin, i, pluginTestConfig.test_configuration[i][0], pluginTestConfig.test_configuration[i][1]):
-                    result = False
-                sleep(1) # needed for amazon
+            logFile = open(plugin_name + '-searchtest.txt', 'w+')
+            try:
+                for i in pluginTestConfig.test_configuration:
+                    searchPlugin = plugin.SearchPlugin()
+                    if not self.test_search(searchPlugin, logFile, i, pluginTestConfig.test_configuration[i][0], pluginTestConfig.test_configuration[i][1]):
+                        result = False
+                    sleep(1) # needed for amazon
+            finally:
+                logFile.close()
         
         if domsgbox:
             if not result:
@@ -134,7 +153,7 @@
     # simulates the resolving of movie data for configured movies and
     # compares the results with the expected once
     #
-    def test_one_movie(self, movieplugin, results_expected):
+    def test_one_movie(self, movieplugin, logFile, results_expected):
         global myconfig
         result = True
         self.movie = movieplugin
@@ -187,18 +206,22 @@
                 if i_val:
                     if not results.has_key(i) or len(results[i]) < 1:
                         print "Test error: %s: Value expected but nothing returned.\nKey: %s" % (movieplugin.movie_id, i)
+                        logFile.write("Test error: %s: Value expected but nothing returned.\nKey: %s\n\n" % (movieplugin.movie_id, i))
                         result = False
                 else:
                     if results.has_key(i) and len(results[i]) > 0:
                         print "Test error: %s: No value expected but something returned.\nKey: %s\nValue: %s" % (movieplugin.movie_id, i, results[i])
+                        logFile.write("Test error: %s: No value expected but something returned.\nKey: %s\nValue: %s\n\n" % (movieplugin.movie_id, i, results[i]))
                         result = False
             else:
                 if not results.has_key(i):
                     print "Test error: %s: Value expected but nothing returned.\nKey: %s" % (movieplugin.movie_id, i)
+                    logFile.write("Test error: %s: Value expected but nothing returned.\nKey: %s\n\n" % (movieplugin.movie_id, i))
                     result = False
                 else:
                     if not results[i] == i_val:
                         print "Test error: %s: Wrong value returned.\nKey: %s\nValue expected: %s\nValue returned: %s" % (movieplugin.movie_id, i, i_val, results[i])
+                        logFile.write("Test error: %s: Wrong value returned.\nKey: %s\nValue expected: %s\nValue returned: %s\n\n" % (movieplugin.movie_id, i, i_val, results[i]))
                         result = False
         return result
     
@@ -216,11 +239,15 @@
             pluginTestConfig = None
         
         if not pluginTestConfig == None:
-            for i in pluginTestConfig.test_configuration:
-                moviePlugin = plugin.Plugin(i)
-                if not self.test_one_movie(moviePlugin, pluginTestConfig.test_configuration[i]):
-                    result = False
-                sleep(1) # needed for amazon
+            logFile = open(plugin_name + '-loadtest.txt', 'w+')
+            try:
+                for i in pluginTestConfig.test_configuration:
+                    moviePlugin = plugin.Plugin(i)
+                    if not self.test_one_movie(moviePlugin, logFile, pluginTestConfig.test_configuration[i]):
+                        result = False
+                    sleep(1) # needed for amazon
+            finally:
+                logFile.close()
         
         if domsgbox:
             if not result:
@@ -238,11 +265,13 @@
     def do_test(self, domsgbox=True):
         global myconfig
         self._tmp_home = None
-        self._tmp_config = 'griffith.cfg'
-        initialize.locations(self)
+        home_dir, config_name = gconsole.check_args()
+        if not (config_name.find('/') >= 0 or config_name.find('\\') >= 0):
+            config_name = os.path.join(home_dir, config_name)
+        log.debug("config file used: %s", config_name)
+        myconfig = config.Config(file=config_name)
+        initialize.locations(self, home_dir)
         gettext.install('griffith', self.locations['i18n'], unicode=1)
-        configFileName = os.path.join(self.locations['home'], self._tmp_config)
-        myconfig = self.config = config.Config(file=configFileName)
         search_successful = ''
         search_unsuccessful = ''
         get_successful = ''



From mikej06 at mail.berlios.de  Thu Dec 25 21:59:27 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 25 Dec 2008 21:59:27 +0100
Subject: [Griffith-svn] r1101 - branches/0.9.x
	branches/0.9.x/lib/plugins/export trunk trunk/lib/plugins/export
Message-ID: <200812252059.mBPKxR2Z029013@sheep.berlios.de>

Author: mikej06
Date: 2008-12-25 21:59:08 +0100 (Thu, 25 Dec 2008)
New Revision: 1101

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/export/PluginExportPDF.py
   trunk/ChangeLog
   trunk/lib/plugins/export/PluginExportPDF.py
Log:
[#309373] export to pdf

Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-20 21:47:39 UTC (rev 1100)
+++ branches/0.9.x/ChangeLog	2008-12-25 20:59:08 UTC (rev 1101)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-25  Michael Jahn
+	* [#309373] export to pdf
+
 2008-12-19  Michael Jahn
 	* OFDb, IMDB-de movie plugin updated
 

Modified: branches/0.9.x/lib/plugins/export/PluginExportPDF.py
===================================================================
--- branches/0.9.x/lib/plugins/export/PluginExportPDF.py	2008-12-20 21:47:39 UTC (rev 1100)
+++ branches/0.9.x/lib/plugins/export/PluginExportPDF.py	2008-12-25 20:59:08 UTC (rev 1101)
@@ -127,13 +127,17 @@
                     number = movie.number
                     original_title = str(movie.o_title).encode(defaultEnc)
                     title = str(movie.title).encode(defaultEnc)
+                    grouping_title = movie.title
+                    if grouping_title is None:
+                        grouping_title = u'None'
                     if movie.director:
                         director = ' - ' + str(movie.director).encode(defaultEnc)
                     else:
                         director = ""
                     # group by first letter
-                    if do_grouping and title[0] != first_letter:
-                        if title[0] in '0123456789':
+                    # use movie.title/grouping_title for grouping because of encoding problems !!!
+                    if do_grouping and grouping_title[0] != first_letter:
+                        if grouping_title[0] in '0123456789':
                             # Group Numbers
                             if first_letter != '0-9':
                                 first_letter = '0-9'
@@ -141,7 +145,7 @@
                                 p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Heading2'])
                                 Story.append(p)
                         else:
-                            first_letter = title[0]
+                            first_letter = grouping_title[0]
                             paragraph_text = '<font name=' + self.fontName + ' size="15">' + saxutils.escape(first_letter) + '</fonts>'
                             p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Heading2'])
                             Story.append(p)

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-20 21:47:39 UTC (rev 1100)
+++ trunk/ChangeLog	2008-12-25 20:59:08 UTC (rev 1101)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-25  Michael Jahn
+	* [#309373] export to pdf
+
 2008-12-19  Michael Jahn
 	* OFDb, IMDB-de movie plugin updated
 

Modified: trunk/lib/plugins/export/PluginExportPDF.py
===================================================================
--- trunk/lib/plugins/export/PluginExportPDF.py	2008-12-20 21:47:39 UTC (rev 1100)
+++ trunk/lib/plugins/export/PluginExportPDF.py	2008-12-25 20:59:08 UTC (rev 1101)
@@ -125,13 +125,17 @@
                     number = movie.number
                     original_title = movie.o_title.encode(defaultEnc)
                     title = movie.title.encode(defaultEnc)
+                    grouping_title = movie.title
+                    if grouping_title is None:
+                        grouping_title = u'None'
                     if movie.director:
                         director = ' - ' + movie.director.encode(defaultEnc)
                     else:
                         director = ""
                     # group by first letter
-                    if do_grouping and title[0] != first_letter:
-                        if title[0] in '0123456789':
+                    # use movie.title/grouping_title for grouping because of encoding problems !!!
+                    if do_grouping and grouping_title[0] != first_letter:
+                        if grouping_title[0] in '0123456789':
                             # Group Numbers
                             if first_letter != '0-9':
                                 first_letter = '0-9'
@@ -139,7 +143,7 @@
                                 p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Heading2'])
                                 Story.append(p)
                         else:
-                            first_letter = title[0]
+                            first_letter = grouping_title[0]
                             paragraph_text = '<font name=' + self.fontName + ' size="15">' + saxutils.escape(first_letter) + '</fonts>'
                             p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Heading2'])
                             Story.append(p)



From mikej06 at mail.berlios.de  Thu Dec 25 22:32:39 2008
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 25 Dec 2008 22:32:39 +0100
Subject: [Griffith-svn] r1102 - branches/0.9.x
	branches/0.9.x/lib/plugins/movie trunk trunk/lib/plugins/movie
Message-ID: <200812252132.mBPLWd9H032537@sheep.berlios.de>

Author: mikej06
Date: 2008-12-25 22:32:03 +0100 (Thu, 25 Dec 2008)
New Revision: 1102

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieCinematografo.py
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieCinematografo.py
Log:
Cinematografo movie plugin updated

Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-25 20:59:08 UTC (rev 1101)
+++ branches/0.9.x/ChangeLog	2008-12-25 21:32:03 UTC (rev 1102)
@@ -7,6 +7,7 @@
 
 2008-12-25  Michael Jahn
 	* [#309373] export to pdf
+	* Cinematografo movie plugin updated
 
 2008-12-19  Michael Jahn
 	* OFDb, IMDB-de movie plugin updated

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieCinematografo.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-25 20:59:08 UTC (rev 1101)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-25 21:32:03 UTC (rev 1102)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2007 Vasco Nunes, Piotr O?arowski
+# Copyright (c) 2005-2008 Vasco Nunes, Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -21,7 +21,7 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import gutils, movie, string
+import gutils, movie, string, re
 
 plugin_name = "Cinematografo"
 plugin_description = "Rivista del Cinematografo dal 1928"
@@ -29,124 +29,249 @@
 plugin_language = _("Italian")
 plugin_author = "Vasco Nunes, Piotr O?arowski"
 plugin_author_email = "<vasco.m.nunes at gmail.com>"
-plugin_version = "1.1"
+plugin_version = "1.2"
 
 class Plugin(movie.Movie):
 	def __init__(self, id):
 		self.encode='iso-8859-1'
 		self.movie_id = id
-		self.url = "http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?codice=%s" % str(self.movie_id)
+		self.url = "http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=%s" % str(self.movie_id)
 
 	def get_image(self):
-		"Find the film's poster image"
-		tmp_poster = gutils.trim(self.page, "../images_locandine/%s/"%self.movie_id, ".JPG\"")
+		# Find the film's poster image
+		tmp_poster = self.regextrim(self.page, "../images_locandine/%s/" % self.movie_id, ".(JPG|jpg)\"")
 		if tmp_poster != "":
-			self.image_url = "http://www.cinematografo.it/bancadati/images_locandine/%s/%s.JPG" % (self.movie_id, tmp_poster)
+			self.image_url = "http://www.cinematografo.it/bancadati/images_locandine/%s/%s.jpg" % (self.movie_id, tmp_poster)
 		else:
 			self.image_url=""
 
 	def get_o_title(self):
-		"Find the film's original title"
+		# Find the film's original title
 		self.o_title = gutils.trim(self.page, ">Titolo Originale</font>", "</tr>")
 		self.o_title = string.capwords(self.o_title)
+		# if nothing found, use the title
+		if self.o_title == '':
+			self.o_title = gutils.trim(self.page, "<!--TITOLO-->", "<!--FINE TITOLO-->")
+			self.o_title = gutils.trim(self.o_title, "<b>", "</b>")
 
 	def get_title(self):
-		"""Find the film's local title.
-		Probably the original title translation"""
+		# Find the film's local title.
+		# Probably the original title translation
 		self.title = gutils.trim(self.page, "<!--TITOLO-->", "<!--FINE TITOLO-->")
 		self.title = gutils.trim(self.title, "<b>", "</b>")
-		self.title = string.capwords(self.title)
 
 	def get_director(self):
-		"Find the film's director"
+		# Find the film's director
 		self.director = gutils.trim(self.page, ">Regia", "Attori<")
 		self.director = self.director.replace("&nbsp;&nbsp;", "&nbsp;")
 		self.director = gutils.strip_tags(self.director)
 		self.director = string.strip(self.director)
 
 	def get_plot(self):
-		"Find the film's plot"
+		# Find the film's plot
 		self.plot = gutils.trim(self.page, "\"fontYellowB\">Trama</font>", "\n")
 
 	def get_year(self):
-		"Find the film's year"
+		# Find the film's year
 		self.year = gutils.trim(self.page, ">Anno</font>", "</tr>")
-		self.year = gutils.after(self.year, "\n                  ")
-		self.year = gutils.before(self.year, "\n")
+		self.year = gutils.digits_only(gutils.clean(self.year))
 
 	def get_runtime(self):
-		"Find the film's running time"
+		# Find the film's running time
 		self.runtime = gutils.trim(self.page, ">Durata</font>", "</tr>")
-		self.runtime = gutils.after(self.runtime, "\n                  ")
-		self.runtime = gutils.before(self.runtime, "\n")
+		self.runtime = gutils.digits_only(gutils.clean(self.runtime))
 
 	def get_genre(self):
-		"Find the film's genre"
+		# Find the film's genre
 		self.genre = gutils.trim(self.page, ">Genere</font>", "</tr>").lower()
 
 	def get_cast(self):
-		"Find the actors. Try to make it comma separated."
-		self.cast = gutils.trim(self.page, ">Attori</font>", "\n")
+		# Find the actors. Try to make it comma separated.
+		self.cast = self.regextrim(self.page, ">Attori</font>", '(<font class="fontViolaB">|\n)')
 		self.cast = string.replace(self.cast, "target='_self'>", "\n>")
-		self.cast = string.replace(self.cast, "&nbsp;&nbsp;", ' ')
-		self.cast = string.replace(self.cast, "<a>",_(" as "))
+		self.cast = string.replace(self.cast, "<a>",_(" as ").encode('utf8'))
 		self.cast = string.replace(self.cast, "</tr><tr>", '\n')
 		self.cast = string.replace(self.cast, "...vedi il resto del cast", '')
+		self.cast = gutils.clean(self.cast)
+		self.cast = string.replace(self.cast, "&nbsp;&nbsp;", ' ')
+		self.cast = re.sub('[ ]+', ' ', self.cast)
+		self.cast = re.sub('\n[ ]+', '\n', self.cast)
 
 	def get_classification(self):
-		"Find the film's classification"
-		self.classification = ""
+		# Find the film's classification
+		self.classification = ''
 
 	def get_studio(self):
-		"Find the studio"
-		self.studio = string.capwords(gutils.trim(self.page, ">Distribuzione</font>", "</tr>"))
+		# Find the studio
+		self.studio = string.capwords(gutils.clean(gutils.trim(self.page, ">Distribuzione</font>", "</tr>")))
 
 	def get_o_site(self):
-		"Find the film's oficial site"
-		self.o_site = ""
+		# Find the film's oficial site
+		self.o_site = ''
 
 	def get_site(self):
-		"Find the film's imdb details page"
+		# Find the film's imdb details page
 		self.site = self.url
 
 	def get_trailer(self):
-		"Find the film's trailer page or location"
+		# Find the film's trailer page or location
 		self.trailer = ""
 
 	def get_country(self):
-		"Find the film's country"
+		# Find the film's country
 		self.country = gutils.trim(self.page, ">Origine</font>", "</tr>")
 
 	def get_rating(self):
-		"""Find the film's rating. From 0 to 10.
-		Convert if needed when assigning."""
+		# Find the film's rating. From 0 to 10.
+		# Convert if needed when assigning.
 		self.rating = 0
 
+	def regextrim(self,text,key1,key2):
+		obj = re.search(key1, text)
+		if obj is None:
+			return ''
+		else:
+			p1 = obj.end()
+		obj = re.search(key2, text[p1:])
+		if obj is None:
+			return ''
+		else:
+			p2 = p1 + obj.start()
+		return text[p1:p2]
+
 class SearchPlugin(movie.SearchMovie):
-	"A movie search object"
+	# A movie search object
 	def __init__(self):
 		self.encode='iso-8859-1'
-		self.original_url_search = "http://www.cinematografo.it/bancadati/consultazione/trovatitoli.jsp?tipo=CONTIENEPAROLE&word="
+		self.original_url_search   = "http://www.cinematografo.it/bancadati/consultazione/trovatitoli.jsp?tipo=CONTIENEPAROLE&word="
 		self.translated_url_search = self.original_url_search
 
 	def search(self, parent_window):
-		"Perform the web search"
+		# Perform the web search
 		self.open_search(parent_window)
 		self.sub_search()
 		return self.page
 
 	def sub_search(self):
-		"Isolating just a portion (with the data we want) of the results"
-		self.page = gutils.trim(self.page, "<td valign=\"top\" width=\"73%\" bgcolor=\"#4d4d4d\">", "</td>")
+		# Isolating just a portion (with the data we want) of the results
+		self.page = gutils.trim(self.page, '<td valign="top" width="73%" bgcolor="#4d4d4d">', '</td>')
 
 	def get_searches(self):
-		"Try to find both id and film title for each search result"
+		# Try to find both id and film title for each search result
 		elements = string.split(self.page, "<li>")
 		self.number_results = elements[-1]
 
 		if (elements[0] != ''):
 			for element in elements:
-				self.ids.append(gutils.trim(element, "?codice=", "\">"))
-				self.titles.append(gutils.convert_entities(gutils.trim(element, "<b>", "</b>")))
+				id = gutils.trim(element, "?codice=", "\">")
+				if id <> '':
+					self.ids.append(id)
+					self.titles.append(gutils.convert_entities(gutils.trim(element, "<b>", "</b>")))
 		else:
 			self.number_results = 0
+
+
+#
+# Plugin Test
+#
+class SearchPluginTest(SearchPlugin):
+	#
+	# Configuration for automated tests:
+	# dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
+	#
+	test_configuration = {
+		'Rocky'	: [ 12, 12 ],
+		'per?'	: [  6,  6 ]
+	}
+
+class PluginTest:
+	#
+	# Configuration for automated tests:
+	# dict { movie_id -> dict { arribute -> value } }
+	#
+	# value: * True/False if attribute only should be tested for any value
+	#        * or the expected value
+	#
+	test_configuration = {
+		'47931' : { 
+			'title' 			: 'Rocky Balboa',
+			'o_title' 			: 'Rocky Balboa',
+			'director'			: 'Sylvester Stallone',
+			'plot' 				: True,
+			'cast'				: 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
+Burt Young' + _(' as ') + 'Paulie\n\
+Milo Ventimiglia' + _(' as ') + 'Rocky Balboa Jr.\n\
+Geraldine Hughes' + _(' as ') + 'Marie\n\
+Antonio Tarver' + _(' as ') + 'Mason \'The Line\' Dixon\n\
+James Francis Kelly III' + _(' as ') + 'Steps\n\
+Tony Burton' + _(' as ') + 'Duke\n\
+Henry G. Sanders' + _(' as ') + 'Martin\n\
+Tim Carr' + _(' as ') + 'Buddy\n\
+James Binns' + _(' as ') + 'Procuratore\n\
+Rick Collum' + _(' as ') + 'Impiegato nell\'ufficio\n\
+Michael Ahl' + _(' as ') + 'Proprietario del ristorante\n\
+Nancy de Zutter' + _(' as ') + 'Proprietaria del ristorante\n\
+Peter Defeo' + _(' as ') + 'Venditore\n\
+Angela Boyd' + _(' as ') + 'Ragazza ubriaca al banco del bar\n\
+Ron Borges' + _(' as ') + 'Reporter\n\
+A.J. Benza' + _(' as ') + 'L.C. Luco\n\
+Frank Bednarz' + _(' as ') + 'Tifoso al bordo del ring\n\
+Marvin Beck' + _(' as ') + 'Uomo d\'affari nel pub irlandese\n\
+Frank Hansen' + _(' as ') + 'Proprietario del bar\n\
+Tony Devon' + _(' as ') + 'Vicino di casa\n\
+Michael Buffer' + _(' as ') + 'Se stesso',
+			'country'			: 'USA',
+			'genre'				: 'drammatico, sportivo',
+			'classification'	: False,
+			'studio'			: '20th Century Fox Italia',
+			'o_site'			: False,
+			'site'				: 'http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=47931',
+			'trailer'			: False,
+			'year'				: 2006,
+			'notes'				: False,
+			'runtime'			: 102,
+			'image'				: True,
+			'rating'			: False
+		},
+		'3996' : { 
+			'title' 			: 'Amor non ho, per?... per?...',
+			'o_title' 			: 'Amor non ho, per?... per?...',
+			'director'			: 'Giorgio Bianchi',
+			'plot' 				: True,
+			'cast'				: 'Renato Rascel' + _(' as ') + 'Teodoro\n\
+Gina Lollobrigida' + _(' as ') + 'Gina\n\
+Luigi Pavese' + _(' as ') + 'Antonio Scutipizzo\n\
+Aroldo Tieri' + _(' as ') + 'Giuliano\n\
+Carlo Ninchi' + _(' as ') + 'Maurizio\n\
+Kiki Urbani' + _(' as ') + 'Kiki, la ballerina\n\
+Adriana Danieli' + _(' as ') + 'Olga\n\
+Strelsa Brown' + _(' as ') + 'Mabel\n\
+Virgilio Riento' + _(' as ') + 'Il contadino\n\
+Gabriele Tinti' + _(' as ') + '(Gastone Tinti) Un componente dell\'orchestra\n\
+Guglielmo Barnab?' + _(' as ') + '\n\
+Giuseppe De Martino' + _(' as ') + '\n\
+Raimondo Vianello' + _(' as ') + '(Riccardo Vianello) \n\
+Maria Carla Vittone' + _(' as ') + '\n\
+Marco Tulli' + _(' as ') + '\n\
+Giuseppe Ricagno' + _(' as ') + '\n\
+Luciano Rebeggiani' + _(' as ') + '\n\
+Kurt Lary' + _(' as ') + '\n\
+Giovanni Lesa' + _(' as ') + '\n\
+Riccardo Ferri' + _(' as ') + '\n\
+Pia De Doses' + _(' as ') + '\n\
+Guido Barbarisi' + _(' as ') + '\n\
+Galeazzo Benti as',
+			'country'			: 'ITALIA',
+			'genre'				: 'commedia',
+			'classification'	: False,
+			'studio'			: 'Minervafilm - Mfd Home Video',
+			'o_site'			: False,
+			'site'				: 'http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=3996',
+			'trailer'			: False,
+			'year'				: 1951,
+			'notes'				: False,
+			'runtime'			: 90,
+			'image'				: False,
+			'rating'			: False
+		},
+	}

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2008-12-25 20:59:08 UTC (rev 1101)
+++ trunk/ChangeLog	2008-12-25 21:32:03 UTC (rev 1102)
@@ -7,6 +7,7 @@
 
 2008-12-25  Michael Jahn
 	* [#309373] export to pdf
+	* Cinematografo movie plugin updated
 
 2008-12-19  Michael Jahn
 	* OFDb, IMDB-de movie plugin updated

Modified: trunk/lib/plugins/movie/PluginMovieCinematografo.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-25 20:59:08 UTC (rev 1101)
+++ trunk/lib/plugins/movie/PluginMovieCinematografo.py	2008-12-25 21:32:03 UTC (rev 1102)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2007 Vasco Nunes, Piotr O?arowski
+# Copyright (c) 2005-2008 Vasco Nunes, Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -21,133 +21,244 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import gutils, movie, string
+import gutils, movie, string, re
 
-plugin_name = "Cinematografo"
-plugin_description = "Rivista del Cinematografo dal 1928"
-plugin_url = "www.cinematografo.it"
-plugin_language = _("Italian")
-plugin_author = "Vasco Nunes, Piotr O?arowski"
+plugin_name         = "Cinematografo"
+plugin_description  = "Rivista del Cinematografo dal 1928"
+plugin_url          = "www.cinematografo.it"
+plugin_language     = _("Italian")
+plugin_author       = "Vasco Nunes, Piotr O?arowski"
 plugin_author_email = "<vasco.m.nunes at gmail.com>"
-plugin_version = "1.1"
+plugin_version      = "1.2"
 
 class Plugin(movie.Movie):
     def __init__(self, id):
         self.encode='iso-8859-1'
         self.movie_id = id
-        self.url = "http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?codice=%s" % str(self.movie_id)
+        self.url = "http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=%s" % str(self.movie_id)
 
     def get_image(self):
-        "Find the film's poster image"
-        tmp_poster = gutils.trim(self.page, "../images_locandine/%s/"%self.movie_id, ".JPG\"")
+        # Find the film's poster image
+        tmp_poster = gutils.regextrim(self.page, "../images_locandine/%s/" % self.movie_id, ".(JPG|jpg)\"")
         if tmp_poster != "":
-            self.image_url = "http://www.cinematografo.it/bancadati/images_locandine/%s/%s.JPG" % (self.movie_id, tmp_poster)
+            self.image_url = "http://www.cinematografo.it/bancadati/images_locandine/%s/%s.jpg" % (self.movie_id, tmp_poster)
         else:
             self.image_url=""
 
     def get_o_title(self):
-        "Find the film's original title"
+        # Find the film's original title
         self.o_title = gutils.trim(self.page, ">Titolo Originale</font>", "</tr>")
         self.o_title = string.capwords(self.o_title)
+        # if nothing found, use the title
+        if self.o_title == '':
+            self.o_title = gutils.trim(self.page, "<!--TITOLO-->", "<!--FINE TITOLO-->")
+            self.o_title = gutils.trim(self.o_title, "<b>", "</b>")
 
     def get_title(self):
-        """Find the film's local title.
-        Probably the original title translation"""
+        # Find the film's local title.
+        # Probably the original title translation
         self.title = gutils.trim(self.page, "<!--TITOLO-->", "<!--FINE TITOLO-->")
         self.title = gutils.trim(self.title, "<b>", "</b>")
-        self.title = string.capwords(self.title)
 
     def get_director(self):
-        "Find the film's director"
+        # Find the film's director
         self.director = gutils.trim(self.page, ">Regia", "Attori<")
         self.director = self.director.replace("&nbsp;&nbsp;", "&nbsp;")
         self.director = gutils.strip_tags(self.director)
         self.director = string.strip(self.director)
 
     def get_plot(self):
-        "Find the film's plot"
+        # Find the film's plot
         self.plot = gutils.trim(self.page, "\"fontYellowB\">Trama</font>", "\n")
 
     def get_year(self):
-        "Find the film's year"
+        # Find the film's year
         self.year = gutils.trim(self.page, ">Anno</font>", "</tr>")
-        self.year = gutils.after(self.year, "\n                  ")
-        self.year = gutils.before(self.year, "\n")
+        self.year = gutils.digits_only(gutils.clean(self.year))
 
     def get_runtime(self):
-        "Find the film's running time"
+        # Find the film's running time
         self.runtime = gutils.trim(self.page, ">Durata</font>", "</tr>")
-        self.runtime = gutils.after(self.runtime, "\n                  ")
-        self.runtime = gutils.before(self.runtime, "\n")
+        self.runtime = gutils.digits_only(gutils.clean(self.runtime))
 
     def get_genre(self):
-        "Find the film's genre"
+        # Find the film's genre
         self.genre = gutils.trim(self.page, ">Genere</font>", "</tr>").lower()
 
     def get_cast(self):
-        "Find the actors. Try to make it comma separated."
-        self.cast = gutils.trim(self.page, ">Attori</font>", "\n")
+        # Find the actors. Try to make it comma separated.
+        self.cast = gutils.regextrim(self.page, ">Attori</font>", '(<font class="fontViolaB">|\n)')
         self.cast = string.replace(self.cast, "target='_self'>", "\n>")
-        self.cast = string.replace(self.cast, "&nbsp;&nbsp;", ' ')
-        self.cast = string.replace(self.cast, "<a>",_(" as "))
+        self.cast = string.replace(self.cast, "<a>",_(" as ").encode('utf8'))
         self.cast = string.replace(self.cast, "</tr><tr>", '\n')
         self.cast = string.replace(self.cast, "...vedi il resto del cast", '')
+        self.cast = gutils.clean(self.cast)
+        self.cast = string.replace(self.cast, "&nbsp;&nbsp;", ' ')
+        self.cast = re.sub('[ ]+', ' ', self.cast)
+        self.cast = re.sub('\n[ ]+', '\n', self.cast)
 
     def get_classification(self):
-        "Find the film's classification"
-        self.classification = ""
+        # Find the film's classification
+        self.classification = ''
 
     def get_studio(self):
-        "Find the studio"
-        self.studio = string.capwords(gutils.trim(self.page, ">Distribuzione</font>", "</tr>"))
+        # Find the studio
+        self.studio = string.capwords(gutils.clean(gutils.trim(self.page, ">Distribuzione</font>", "</tr>")))
 
     def get_o_site(self):
-        "Find the film's oficial site"
-        self.o_site = ""
+        # Find the film's oficial site
+        self.o_site = ''
 
     def get_site(self):
-        "Find the film's imdb details page"
+        # Find the film's imdb details page
         self.site = self.url
 
     def get_trailer(self):
-        "Find the film's trailer page or location"
+        # Find the film's trailer page or location
         self.trailer = ""
 
     def get_country(self):
-        "Find the film's country"
+        # Find the film's country
         self.country = gutils.trim(self.page, ">Origine</font>", "</tr>")
 
     def get_rating(self):
-        """Find the film's rating. From 0 to 10.
-        Convert if needed when assigning."""
+        # Find the film's rating. From 0 to 10.
+        # Convert if needed when assigning.
         self.rating = 0
 
 class SearchPlugin(movie.SearchMovie):
-    "A movie search object"
+    # A movie search object
     def __init__(self):
         self.encode='iso-8859-1'
         self.original_url_search = "http://www.cinematografo.it/bancadati/consultazione/trovatitoli.jsp?tipo=CONTIENEPAROLE&word="
         self.translated_url_search = self.original_url_search
 
     def search(self, parent_window):
-        "Perform the web search"
-        if not self.open_search(parent_window):
-            return None
+        # Perform the web search
+        self.open_search(parent_window)
         self.sub_search()
         return self.page
 
     def sub_search(self):
-        "Isolating just a portion (with the data we want) of the results"
-        self.page = gutils.trim(self.page, "<td valign=\"top\" width=\"73%\" bgcolor=\"#4d4d4d\">", "</td>")
+        # Isolating just a portion (with the data we want) of the results
+        self.page = gutils.trim(self.page, '<td valign="top" width="73%" bgcolor="#4d4d4d">', '</td>')
 
     def get_searches(self):
-        "Try to find both id and film title for each search result"
+        # Try to find both id and film title for each search result
         elements = string.split(self.page, "<li>")
         self.number_results = elements[-1]
 
         if (elements[0] != ''):
             for element in elements:
-                self.ids.append(gutils.trim(element, "?codice=", "\">"))
-                self.titles.append(gutils.convert_entities(gutils.trim(element, "<b>", "</b>")))
+                id = gutils.trim(element, "?codice=", "\">")
+                if id <> '':
+                    self.ids.append(id)
+                    self.titles.append(gutils.convert_entities(gutils.trim(element, "<b>", "</b>")))
         else:
             self.number_results = 0
+
+
+#
+# Plugin Test
+#
+class SearchPluginTest(SearchPlugin):
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
+    #
+    test_configuration = {
+        'Rocky' : [ 12, 12 ],
+        'per?'  : [  6,  6 ]
+    }
+
+class PluginTest:
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> dict { arribute -> value } }
+    #
+    # value: * True/False if attribute only should be tested for any value
+    #        * or the expected value
+    #
+    test_configuration = {
+        '47931' : { 
+            'title'             : 'Rocky Balboa',
+            'o_title'           : 'Rocky Balboa',
+            'director'          : 'Sylvester Stallone',
+            'plot'              : True,
+            'cast'              : 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
+Burt Young' + _(' as ') + 'Paulie\n\
+Milo Ventimiglia' + _(' as ') + 'Rocky Balboa Jr.\n\
+Geraldine Hughes' + _(' as ') + 'Marie\n\
+Antonio Tarver' + _(' as ') + 'Mason \'The Line\' Dixon\n\
+James Francis Kelly III' + _(' as ') + 'Steps\n\
+Tony Burton' + _(' as ') + 'Duke\n\
+Henry G. Sanders' + _(' as ') + 'Martin\n\
+Tim Carr' + _(' as ') + 'Buddy\n\
+James Binns' + _(' as ') + 'Procuratore\n\
+Rick Collum' + _(' as ') + 'Impiegato nell\'ufficio\n\
+Michael Ahl' + _(' as ') + 'Proprietario del ristorante\n\
+Nancy de Zutter' + _(' as ') + 'Proprietaria del ristorante\n\
+Peter Defeo' + _(' as ') + 'Venditore\n\
+Angela Boyd' + _(' as ') + 'Ragazza ubriaca al banco del bar\n\
+Ron Borges' + _(' as ') + 'Reporter\n\
+A.J. Benza' + _(' as ') + 'L.C. Luco\n\
+Frank Bednarz' + _(' as ') + 'Tifoso al bordo del ring\n\
+Marvin Beck' + _(' as ') + 'Uomo d\'affari nel pub irlandese\n\
+Frank Hansen' + _(' as ') + 'Proprietario del bar\n\
+Tony Devon' + _(' as ') + 'Vicino di casa\n\
+Michael Buffer' + _(' as ') + 'Se stesso',
+            'country'           : 'USA',
+            'genre'             : 'drammatico, sportivo',
+            'classification'    : False,
+            'studio'            : '20th Century Fox Italia',
+            'o_site'            : False,
+            'site'              : 'http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=47931',
+            'trailer'           : False,
+            'year'              : 2006,
+            'notes'             : False,
+            'runtime'           : 102,
+            'image'             : True,
+            'rating'            : False
+        },
+        '3996' : { 
+            'title'             : 'Amor non ho, per?... per?...',
+            'o_title'           : 'Amor non ho, per?... per?...',
+            'director'          : 'Giorgio Bianchi',
+            'plot'              : True,
+            'cast'              : 'Renato Rascel' + _(' as ') + 'Teodoro\n\
+Gina Lollobrigida' + _(' as ') + 'Gina\n\
+Luigi Pavese' + _(' as ') + 'Antonio Scutipizzo\n\
+Aroldo Tieri' + _(' as ') + 'Giuliano\n\
+Carlo Ninchi' + _(' as ') + 'Maurizio\n\
+Kiki Urbani' + _(' as ') + 'Kiki, la ballerina\n\
+Adriana Danieli' + _(' as ') + 'Olga\n\
+Strelsa Brown' + _(' as ') + 'Mabel\n\
+Virgilio Riento' + _(' as ') + 'Il contadino\n\
+Gabriele Tinti' + _(' as ') + '(Gastone Tinti) Un componente dell\'orchestra\n\
+Guglielmo Barnab?' + _(' as ') + '\n\
+Giuseppe De Martino' + _(' as ') + '\n\
+Raimondo Vianello' + _(' as ') + '(Riccardo Vianello) \n\
+Maria Carla Vittone' + _(' as ') + '\n\
+Marco Tulli' + _(' as ') + '\n\
+Giuseppe Ricagno' + _(' as ') + '\n\
+Luciano Rebeggiani' + _(' as ') + '\n\
+Kurt Lary' + _(' as ') + '\n\
+Giovanni Lesa' + _(' as ') + '\n\
+Riccardo Ferri' + _(' as ') + '\n\
+Pia De Doses' + _(' as ') + '\n\
+Guido Barbarisi' + _(' as ') + '\n\
+Galeazzo Benti as',
+            'country'           : 'ITALIA',
+            'genre'             : 'commedia',
+            'classification'    : False,
+            'studio'            : 'Minervafilm - Mfd Home Video',
+            'o_site'            : False,
+            'site'              : 'http://www.cinematografo.it/bancadati/consultazione/schedafilm.jsp?completa=si&codice=3996',
+            'trailer'           : False,
+            'year'              : 1951,
+            'notes'             : False,
+            'runtime'           : 90,
+            'image'             : False,
+            'rating'            : False
+        },
+    }



From piotrek at mail.berlios.de  Fri Dec 26 16:41:59 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Fri, 26 Dec 2008 16:41:59 +0100
Subject: [Griffith-svn] r1103 - in branches/0.9.x: . lib/plugins/movie
Message-ID: <200812261541.mBQFfxIT028685@sheep.berlios.de>

Author: piotrek
Date: 2008-12-26 16:41:59 +0100 (Fri, 26 Dec 2008)
New Revision: 1103

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieFDb.py
   branches/0.9.x/lib/plugins/movie/PluginMovieOnet.py
   branches/0.9.x/lib/plugins/movie/PluginMovieStopklatka.py
Log:
Sync FDb, Onet and Stopklatka movie plugins with trunk


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-25 21:32:03 UTC (rev 1102)
+++ branches/0.9.x/ChangeLog	2008-12-26 15:41:59 UTC (rev 1103)
@@ -5,6 +5,9 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+2008-12-26  Piotr O?arowski
+	* Sync FDb, Onet and Stopklatka movie plugins with trunk
+
 2008-12-25  Michael Jahn
 	* [#309373] export to pdf
 	* Cinematografo movie plugin updated

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieFDb.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieFDb.py	2008-12-25 21:32:03 UTC (rev 1102)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieFDb.py	2008-12-26 15:41:59 UTC (rev 1103)
@@ -32,7 +32,7 @@
 plugin_language        = _('Polish')
 plugin_author        = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email    = '<bartosz.kurczewski at gmail.com>'
-plugin_version        = '1.11'
+plugin_version        = '1.12'
 
 class Plugin(movie.Movie):
     TRAILER_PATTERN = re.compile('/film/.*/zwiastuny/odtwarzaj/[0-9]*')
@@ -49,7 +49,7 @@
     def get_image(self):
         self.image_url = gutils.trim(self.page, 'class="poster"', '/></a>')
         self.image_url = gutils.trim(self.image_url,'src="','"')
-        if self.image_url.endswith('no_picture.png'):
+        if self.image_url.endswith('http://fdb.pl/images/fdb2/add_poster.png?1214306282'):
             self.image_url = ''
 
     def get_o_title(self):
@@ -96,8 +96,11 @@
         self.genre = string.replace(self.genre, ' / ', ' | ')
 
     def get_cast(self):
-        self.cast = gutils.trim(self.page,'<h2 class="category-header">\n    Obsada','</div>')
-        self.cast = gutils.trim(self.cast,"<table>\n",'  </table>')
+        self.cast = gutils.trim(self.page,'<div class="cast">',"</div>")
+        tmpcast = gutils.trim(self.cast,"<table>\n",'</table>')
+        if tmpcast == '':
+            tmpcast = tmpcast = gutils.trim(self.cast,"<table>\n",'<div class="line">')
+        self.cast = tmpcast   
         if self.cast != '':
             self.cast = gutils.strip_tags(self.cast)
             self.cast = self.cast.replace("      ","")
@@ -136,16 +139,16 @@
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
         self.encode = 'utf-8'
-        self.original_url_search    = 'http://fdb.pl/szukaj.php?t=f&s='
-        self.translated_url_search    = 'http://fdb.pl/szukaj.php?t=f&s='
+        self.original_url_search    = 'http://fdb.pl/szukaj/movies?query='
+        self.translated_url_search    = 'http://fdb.pl/szukaj/movies?query='
 
     def search(self,parent_window):
         self.open_search(parent_window)
-        tmp = string.find(self.page,'<div>Wyniki wyszukiwania dla')
+        tmp = string.find(self.page,'<h1>Wyniki wyszukiwania dla')
         if tmp == -1:        # already a movie page
             self.page = ''
         else:            # multiple matches
-            self.page = gutils.before(self.page[tmp:],'<div id="mapaSerwisu">');
+            self.page = gutils.before(self.page[tmp:],'>Mapa strony</h3>');
         return self.page
 
     def get_searches(self):
@@ -154,11 +157,11 @@
             self.ids.append(self.url)
             self.titles.append(self.title)
         else:            # multiple matches
-            elements = string.split(self.page,'<div class="searchItem">')
-            if len(elements)>0:
+            elements = string.split(self.page,'<div class="content">')
+            if len(elements)>1:
                 for element in elements:
                     tmpId = gutils.trim(element, '<a href="', '"')
-                    if tmpId.endswith('dodajNowy.php'):
+                    if tmpId.endswith('http://fdb.pl'):
                         continue
                     self.ids.append(tmpId)
                     element = gutils.strip_tags(

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieOnet.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieOnet.py	2008-12-25 21:32:03 UTC (rev 1102)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieOnet.py	2008-12-26 15:41:59 UTC (rev 1103)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2006 Piotr O?arowski
+# Copyright (c) 2005-2006 Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -28,134 +28,132 @@
 plugin_description  = 'Onet Film'
 plugin_url          = 'film.onet.pl'
 plugin_language     = _('Polish')
-plugin_author       = 'Piotr O?arowski'
-plugin_author_email = '<ozarow+griffith at gmail.com>'
-plugin_version      = '1.7'
+plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
+plugin_author_email = '<bartosz.kurczewski at gmail.com>'
+plugin_version      = '1.8'
 
 class Plugin(movie.Movie):
-	def __init__(self, id):
-		self.encode = 'iso-8859-2'
-		self.movie_id = id
-		self.url = "http://film.onet.pl/%s" % str(self.movie_id)
+    def __init__(self, id):
+        self.encode = 'iso-8859-2'
+        self.movie_id = id
+        self.url = "http://film.onet.pl/%s" % str(self.movie_id)
 
-	def get_image(self):
-		self.movie_id = '' # problems with decoding polish characters in UTF8 => forget ID
+    def get_image(self):
+        self.movie_id = '' # problems with decoding polish characters in UTF8 => forget ID
 
-		self.image_url = ''
-		pos = string.find(self.page, 'alt="Galeria" border=1 src="')
-		if pos > 0:
-			self.image_url = "http://film.onet.pl/%s" % gutils.trim(self.page[pos:], 'src="', '"')
-			return
-		pos = string.find(self.page, 'IMG class=pic alt=\"Plakat"')
-		if pos > 0:
-			self.image_url = "http://film.onet.pl/%s" % gutils.trim(self.page[pos:], 'src="', '">')
+        self.image_url = ''
+        pos = string.find(self.page, 'alt="Galeria" border=1 src="')
+        if pos > 0:
+            self.image_url = "http://film.onet.pl/%s" % gutils.trim(self.page[pos:], 'src="', '"')
+            return
+        pos = string.find(self.page, 'IMG class=pic alt=\"Plakat"')
+        if pos > 0:
+            self.image_url = "http://film.onet.pl/%s" % gutils.trim(self.page[pos:], 'src="', '">')
 
-	def get_o_title(self):
-		self.o_title = gutils.trim(self.page, 'class=a2 valign=top width="100%"><B>', '</B>')
-		if self.o_title == '':
-			self.o_title = self.get_title(True)
+    def get_o_title(self):
+        self.o_title = gutils.trim(self.page, 'class=a2 valign=top width="100%"><B>', '</B>')
+        if self.o_title == '':
+            self.o_title = self.get_title(True)
 
-	def get_title(self, ret=False):
-		data = gutils.trim(self.page, '<TITLE>', ' - Onet.pl Film</TITLE>')
-		if ret is True:
-			return data
-		else:
-			self.title = data
+    def get_title(self, ret=False):
+        data = gutils.trim(self.page, '<TITLE>', ' - Onet.pl Film</TITLE>')
+        if ret is True:
+            return data
+        else:
+            self.title = data
 
-	def get_director(self):
-		self.director = gutils.trim(self.page, '<BR>Re\xbfyseria:&nbsp;&nbsp;', '<BR>')
-		if string.find(self.director, '-->') <> -1:
-			self.director = gutils.after(self.director, '-->')
-			self.director = gutils.before(self.director,"<!--")
-		else:
-			self.director = gutils.after(self.director, '<B>')
-			self.director = gutils.before(self.director, '</B>')
+    def get_director(self):
+        self.director = gutils.trim(self.page, '<BR>Re\xbfyseria:&nbsp;&nbsp;', '<BR>')
+        if string.find(self.director, '-->') <> -1:
+            self.director = gutils.after(self.director, '-->')
+            self.director = gutils.before(self.director,"<!--")
+        else:
+            self.director = gutils.after(self.director, '<B>')
+            self.director = gutils.before(self.director, '</B>')
 
-	def get_plot(self):
-		pos = string.find(self.page, '<TD class=tym>Tre\xb7\xe6</TD>')
-		if pos > 0:
-			self.plot = self.page[pos:]
-			self.plot = gutils.trim(self.plot, '<DIV class=a2>', '</DIV>')
-			return
-		pos = string.find(self.page, '>Recenzje</FONT>&nbsp;')
-		if pos > 0:
-			self.plot = self.page[pos:]
-			self.plot = gutils.trim(self.plot, '<TD class=a1 colspan=3>', '<A class="ar" ')
-		else:
-			self.plot = ''
+    def get_plot(self):
+        pos = string.find(self.page, '<TD class=tym>')
+        if pos > 0:
+            self.plot = self.page[pos:]
+            self.plot = gutils.trim(self.plot, '<BR><DIV class=a2>', '</DIV>')
+            return
+        pos = string.find(self.page, '>Recenzje</font>&nbsp;')
+        if pos > 0:
+            self.plot = self.page[pos:]
+            self.plot = gutils.trim(self.plot, '<td class=a1 colspan=3>', '<a class="ar" ')
+        else:
+            self.plot = ''
 
-	def get_year(self):
-		self.year = gutils.trim(self.page, 'class=a2 valign=top width="100%">',')<BR>')
-		self.year = gutils.after(self.year, '</B> (')
-		self.year = gutils.after(self.year, ', ')
+    def get_year(self):
+        self.year = gutils.trim(self.page, 'class=a2 valign=top width="100%">',')<BR>')
+        self.year = gutils.after(self.year, '</B> (')
+        self.year = gutils.after(self.year, ', ')
 
-	def get_runtime(self):
-		self.runtime = gutils.trim(self.page, 'color="#666666">czas ',' min.')
+    def get_runtime(self):
+        self.runtime = gutils.trim(self.page, 'color="#666666">czas ',' min.')
 
-	def get_genre(self):
-		self.genre = gutils.trim(self.page, 'class=a2 valign=top width="100%">', '<BR><SPAN class=a1>')
-		self.genre = gutils.after(self.genre, '<BR>')
+    def get_genre(self):
+        self.genre = gutils.trim(self.page, 'class=a2 valign=top width="100%">', '<BR><SPAN class=a1>')
+        self.genre = gutils.after(self.genre, '<BR>')
 
-	def get_cast(self):
-		self.cast = "<%s" % gutils.trim(self.page,'#FF7902">Obsada<', '<DIV ')
-		self.cast = string.replace(self.cast, '</A> - ', _(' as '))
-		self.cast = string.replace(self.cast, '<A class=u ', "\n<a ")
-		self.cast = string.strip(gutils.strip_tags(self.cast))
-		self.cast = self.cast[18:]
+    def get_cast(self):
+        self.cast = "<%s" % gutils.trim(self.page,'#FF7902">Obsada<', '<DIV ')
+        self.cast = string.replace(self.cast, '</A> - ', _(' as '))
+        self.cast = string.replace(self.cast, '<A class=u ', "\n<a ")
+        self.cast = string.strip(gutils.strip_tags(self.cast))
+        self.cast = self.cast[18:]
 
-	def get_classification(self):
-		self.classification = ''
+    def get_classification(self):
+        self.classification = ''
 
-	def get_studio(self):
-		self.studio = ''
+    def get_studio(self):
+        self.studio = ''
 
-	def get_o_site(self):
-		self.o_site = ''
+    def get_o_site(self):
+        self.o_site = ''
 
-	def get_site(self):
-		self.site = self.url
+    def get_site(self):
+        self.site = self.url
 
-	def get_trailer(self):
-		self.trailer = ''
+    def get_trailer(self):
+        self.trailer = ''
 
-	def get_country(self):
-		self.country = gutils.trim(self.page, 'class=a2 valign=top width="100%">', ')<BR>')
-		self.country = gutils.after(self.country,"(")
-		self.country = gutils.before(self.country,",")
+    def get_country(self):
+        self.country = gutils.trim(self.page, 'class=a2 valign=top width="100%">', ')<BR>')
+        self.country = gutils.after(self.country,"(")
+        self.country = gutils.before(self.country,",")
 
-	def get_rating(self):
-		self.rating = gutils.trim(self.page, '>Ocena filmu</TD>', 'g\xb3os\xf3w)')
-		self.rating = gutils.after(self.rating, '<BR><B>')
-		self.rating = gutils.before(self.rating, '/5</B>')
-		if self.rating != '':
-			self.rating = str( float(self.rating)*2 )
+    def get_rating(self):
+        self.rating = gutils.trim(self.page, '>Ocena filmu</TD>', 'g\xb3os\xf3w)')
+        self.rating = gutils.after(self.rating, '<BR><B>')
+        self.rating = gutils.before(self.rating, '/5</B>')
+        if self.rating != '':
+            self.rating = str( float(self.rating)*2 )
 
-	def get_notes(self):
-		self.notes = ''
+    def get_notes(self):
+        self.notes = ''
 
 class SearchPlugin(movie.SearchMovie):
-	def __init__(self):
-		self.encode = 'iso-8859-2'
-		self.original_url_search	= 'http://film.onet.pl/filmoteka.html?O=0&S='
-		self.translated_url_search	= 'http://film.onet.pl/filmoteka.html?O=1&S='
+    def __init__(self):
+        self.encode = 'iso-8859-2'
+        self.original_url_search    = 'http://film.onet.pl/filmoteka.html?O=0&S='
+        self.translated_url_search    = 'http://film.onet.pl/filmoteka.html?O=1&S='
 
-	def search(self,parent_window):
-		self.open_search(parent_window)
-		self.page = gutils.trim(self.page, '>Wynik wyszukiwania<', '<TABLE border=0 cellpadding=0');
-		self.page = gutils.after(self.page, '</SPAN></DIV><BR>');
-		return self.page
+    def search(self,parent_window):
+        self.open_search(parent_window)
+        self.page = gutils.trim(self.page, '>Wynik wyszukiwania<', '<TABLE border=0 cellpadding=0');
+        self.page = gutils.after(self.page, '</SPAN></DIV><BR>');
+        return self.page
 
-	def get_searches(self):
-		elements = string.split(self.page, ' class=pic')
-		self.number_results = elements[-1]
+    def get_searches(self):
+        elements = string.split(self.page, ' class=pic')
+        self.number_results = elements[-1]
 
-		if (elements[0]<>''):
-			for element in elements:
-				self.ids.append(gutils.trim(element, 'class=a2 width="100%"><A href="','" class=u'))
-				element = gutils.trim(element, 'class=u><B>', '</B>')
-				element = gutils.strip_tags(element)
-				self.titles.append(element)
-		else:
-			self.number_results = 0
-
-# vim: fenc=iso-8859-2
+        if (elements[0]<>''):
+            for element in elements:
+                self.ids.append(gutils.trim(element, 'class=a2 width="100%"><A href="','" class=u'))
+                element = gutils.trim(element, 'class=u><B>', '</B>')
+                element = gutils.strip_tags(element)
+                self.titles.append(element)
+        else:
+            self.number_results = 0

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieStopklatka.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-25 21:32:03 UTC (rev 1102)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieStopklatka.py	2008-12-26 15:41:59 UTC (rev 1103)
@@ -30,7 +30,7 @@
 plugin_language     = _('Polish')
 plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email = '<bartosz.kurczewski at gmail.com>'
-plugin_version      = '1.10'
+plugin_version      = '1.11'
 
 class Plugin(movie.Movie):
     IMAGE_PATTERN = re.compile('(http://img.stopklatka.pl/film/.*?)"')
@@ -38,18 +38,18 @@
     def __init__(self, id):
         self.movie_id = id
         self.url = "http://www.stopklatka.pl/film/film.asp?fi=%s" % str(self.movie_id)
-        self.encode = 'iso-8859-2' # with some cp-1250 data (sic!)
+        self.encode = 'utf-8' 
 
     def initialize(self):
         self.page = self.page.replace('\x9c','?')
         self.page = self.page.replace('?','?')
-        self.res = re.findall("""</td><td class="middle_cell"><span class="bold">(.*?)</span>, <span class="bold">(.*?)</span>, <span class="bold">(.*?)</span>, <span class="bold">(.*?) min</span>""", self.page)
+        self.res = re.findall("""<td class="middle_cell"><span class="bold">(.*?)</span>, (.*?), (.*?), (.*?) min</td>""", self.page)
         if len(self.res) == 0:
             self.res = [( '','','','' )]
 
     def get_image(self):
         image = self.IMAGE_PATTERN.findall(self.page)
-        if len(image):
+        if len(image) and image[0] != 'http://img.stopklatka.pl/film/0.jpg':
             self.image_url = image[0]
 
     def get_o_title(self):
@@ -65,12 +65,12 @@
             self.title = data
 
     def get_director(self):
-        self.director = gutils.trim(self.page, '>re\xbfyseria:<', '</td></tr>')
+        self.director = gutils.trim(self.page, '>re?yseria: <', '</span></a>')
         self.director = gutils.after(self.director, '>')
 
     def get_plot(self):
         self.plot = gutils.trim(self.page, '<p>', '</p>')
-        self.plot = gutils.before(self.plot, '<b>Wi\xEAcej ')
+        self.plot = gutils.before(self.plot, '<b>Wi?cej ')
 
     def get_year(self):
         self.year = self.res[0][2]
@@ -85,7 +85,7 @@
         self.cast = gutils.trim(self.page, '>obsada:<', '</td></tr>')
         self.cast = gutils.after(self.cast, '>')
         self.cast = string.replace(self.cast, ', ', "\n")
-        self.cast = gutils.before(self.cast, '<b>Wi\xEAcej ')
+        self.cast = gutils.before(self.cast, '<b>Wi?cej')
 
     def get_classification(self):
         self.classification = ''
@@ -114,7 +114,7 @@
 
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
-        self.encode='iso-8859-2'
+        self.encode='utf-8'
         self.original_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
         self.translated_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
 



From piotrek at mail.berlios.de  Fri Dec 26 16:51:26 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Fri, 26 Dec 2008 16:51:26 +0100
Subject: [Griffith-svn] r1104 - in branches/0.9.x: . lib
Message-ID: <200812261551.mBQFpQeR029600@sheep.berlios.de>

Author: piotrek
Date: 2008-12-26 16:51:26 +0100 (Fri, 26 Dec 2008)
New Revision: 1104

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/NEWS
   branches/0.9.x/README
   branches/0.9.x/lib/version.py
   branches/0.9.x/winpackage.iss
   branches/0.9.x/winsetup.py
Log:
* NEWS updated
* Version changed to 0.9.9


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/ChangeLog	2008-12-26 15:51:26 UTC (rev 1104)
@@ -5,8 +5,12 @@
 (c) 2005-2008  Vasco Nunes, Piotr O?arowski
 
 
+---- 0.9.9 ----
+
 2008-12-26  Piotr O?arowski
 	* Sync FDb, Onet and Stopklatka movie plugins with trunk
+	* NEWS updated
+	* Version changed to 0.9.9
 
 2008-12-25  Michael Jahn
 	* [#309373] export to pdf
@@ -34,7 +38,7 @@
 2008-11-10  Michael Jahn
 	* optimized windows setup related code, added links to documentation files, forum and wiki to the installer
 
----- 0.9.8 ---
+---- 0.9.8 ----
 
 2008-11-16  Piotr O?arowski
 	* fail if database requires newer Griffith version
@@ -89,7 +93,7 @@
 	* [#253272] extra information columns not loaded on startup
 	* extended debug support on windows platforms
 
----- 0.9.7.1 ---
+---- 0.9.7.1 ----
 
 2008-07-26  Piotr O?arowski
 	* Links to Griffith's homepage and bug tracker updated
@@ -103,7 +107,7 @@
 	* updated INSTALL file to new versions (GTK, Glade, PyGTK, py2exe, pywin32, Inno Setup)
 	* fixed URL creation in setup script; added removing of .pyo files if deinstalled
 
----- 0.9.7 ---
+---- 0.9.7 ----
 
 2008-07-21  Piotr O?arowski
 	* Fixed HTML export plugin (sorting issue)
@@ -178,7 +182,7 @@
 	* hit enter key in title/original title box starts retrieving data from web for a new entry
 	* HTML export: replace linebreaks with <br /> in the data if "XHTML 1.0" is found in the template header
 
----- 0.9.6 ---
+---- 0.9.6 ----
 
 2008-01-27  Michael Jahn
 	* Zelluloid plugin updated
@@ -256,7 +260,7 @@
 2007-09-03  Vasco Nunes
 	* Some documentations updates
 
----- 0.9.5 ---
+---- 0.9.5 ----
 
 2007-09-02  Piotr O?arowski
 	* Translation files synchronized with Rosetta
@@ -298,7 +302,7 @@
 2007-08-16  Michael Jahn
 	* IMDB-de plugin updated
 
----- 0.9.4 ---
+---- 0.9.4 ----
 
 2007-08-05  Piotr O?arowski
 	* FDb movie plugin updated
@@ -338,12 +342,12 @@
 2007-07-03  Michael Jahn
 	* DVD-Palace and IMDB-de movie plugin updated
 
----- 0.9.3.1 ---
+---- 0.9.3.1 ----
 
 2007-07-01  Piotr O?arowski
 	* Problem with saving database preferences in config file fixed
 
----- 0.9.3 ---
+---- 0.9.3 ----
 
 2007-06-30  Piotr O?arowski
 	* Use python2.5's sqlite3 module if available (no need to install pysqlite2)
@@ -441,7 +445,7 @@
 	* Version changed to 0.9.2+svn
 	* New configuration file format (human readable) - please delete old one manually
 
----- 0.9.2 ---
+---- 0.9.2 ----
 
 2007-02-20  Piotr O?arowski
 	* IMDB movie plugin updated
@@ -455,7 +459,7 @@
 2007-02-14  Piotr O?arowski
 	* KinoDe and FilmeVonAZ movie plugins updated (thanks to Michael Jahn)
 
----- 0.9.1 ---
+---- 0.9.1 ----
 
 2007-02-13  Piotr O?arowski
 	* KinoDe movie plugin updated (thanks to Michael Jahn)
@@ -473,7 +477,7 @@
 2007-01-27  Piotr O?arowski
 	* English translation fixes (thanks Frijolie)
 
----- 0.9 ---
+---- 0.9 ----
 
 2007-01-26  Piotr O?arowski
 	* WP and Filmweb movie plugins updated
@@ -502,7 +506,7 @@
 2007-01-10  Vasco Nunes
 	* PTGate movie plugin updated
 
----- 0.9-rc3 ---
+---- 0.9-rc3 ----
 
 2007-01-09  Piotr O?arowski
 	* Catch some more bad cases while upgrading database
@@ -517,7 +521,7 @@
 2007-01-08  Vasco Nunes
 	* Italian translation updated (Thanks to Diego)
 
----- 0.9-rc2 ---
+---- 0.9-rc2 ----
 
 2007-01-07  Piotr O?arowski
 	* Copy title if original title is not available in FDb.pl movie plugin
@@ -581,7 +585,7 @@
 2006-12-30  Vasco Nunes
 	* Under MacOSX Preview.app is used for pdfs now
 
----- 0.9~rc1 ---
+---- 0.9~rc1 ----
 
 2006-12-24  Vasco Nunes
 	* Added some gtk dialogs when converting old db format
@@ -786,7 +790,7 @@
 2006-04-20  Piotr O?arowski
 	* ADOdb transition started
 
----- 0.6.2 ---
+---- 0.6.2 ----
 
 2006-08-08  Piotr O?arowski
 	* IMDb movie plugin updated.
@@ -840,7 +844,7 @@
 	* Minor fixes in doc files
 	* Added watch file for Debian package
 
----- 0.6.1 ---
+---- 0.6.1 ----
 
 2006-04-14  Piotr O?arowski
 	* Updated some docs (translation README and INSTALL notes)

Modified: branches/0.9.x/NEWS
===================================================================
--- branches/0.9.x/NEWS	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/NEWS	2008-12-26 15:51:26 UTC (rev 1104)
@@ -1,3 +1,10 @@
+Griffith 0.9.9
+==============
+* Updated movie plugins: CSFD, Cinematografo, FDb, Filmweb IMDB-de, IMDb, OFDb, Onet, Stopklatka
+* Few MySQL issues fixed
+* Amazon and unicode errors fixed
+
+
 Griffith 0.9.8
 ==============
 * New movie plugin: Amazon

Modified: branches/0.9.x/README
===================================================================
--- branches/0.9.x/README	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/README	2008-12-26 15:51:26 UTC (rev 1104)
@@ -1,4 +1,4 @@
-Griffith 0.9.8 README
+Griffith 0.9.9 README
 =====================
 
 This document was last updated on Thu Sep 02 2007.
@@ -32,7 +32,7 @@
   * Python		2.3 or higher		http://www.python.org/
   * GTK+		tested on 2.6.4		http://www.gtk.org/
   * PyGTK (with glade2)	tested on 2.6.1		http://www.pygtk.org/
-  * SQLAlchemy		0.3.10			http://www.sqlalchemy.org/			0.4 is not supported yet (0.3.11 is included in Griffith 0.9.8)
+  * SQLAlchemy		0.3.10			http://www.sqlalchemy.org/			0.4 is not supported yet (0.3.11 is included in Griffith 0.9.9)
   * pysqlite2		2			http://initd.org/tracker/pysqlite		Python 2.5's sqlite3 module will be used if available
   * PIL						http://www.pythonware.com/products/pil/
   * PyXML					http://pyxml.sf.net/

Modified: branches/0.9.x/lib/version.py
===================================================================
--- branches/0.9.x/lib/version.py	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/lib/version.py	2008-12-26 15:51:26 UTC (rev 1104)
@@ -22,7 +22,7 @@
 # GNU General Public License, version 2 or later
 
 pname        = "Griffith"
-pversion     = "0.9.8"
+pversion     = "0.9.9"
 pauthor      = "Vasco Nunes, Piotr O?arowski <griffith-private at lists.berlios.de>"
 pyear        = "2005-2008"
 pwebsite     = "http://www.griffith.cc/"

Modified: branches/0.9.x/winpackage.iss
===================================================================
--- branches/0.9.x/winpackage.iss	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/winpackage.iss	2008-12-26 15:51:26 UTC (rev 1104)
@@ -3,7 +3,7 @@
 
 [Setup]
 AppName=Griffith
-AppVerName=Griffith 0.9.8
+AppVerName=Griffith 0.9.9
 AppPublisher=Vasco Nunes, Piotr O?arowski
 AppPublisherURL=http://griffith.cc/
 AppSupportURL=http://griffith.cc/
@@ -14,7 +14,7 @@
 LicenseFile=COPYING
 InfoAfterFile=README
 OutputDir=installer
-OutputBaseFilename=griffith-0.9.8-win32
+OutputBaseFilename=griffith-0.9.9-win32
 SetupIconFile=images\griffith.ico
 Compression=lzma
 SolidCompression=true
@@ -22,8 +22,8 @@
 InternalCompressLevel=ultra
 AppCopyright=Vasco Nunes/Piotr Ozarowski
 DisableStartupPrompt=false
-AppVersion=0.9.8
-VersionInfoVersion=0.9.8
+AppVersion=0.9.9
+VersionInfoVersion=0.9.9
 
 [Languages]
 Name: eng; MessagesFile: compiler:Default.isl

Modified: branches/0.9.x/winsetup.py
===================================================================
--- branches/0.9.x/winsetup.py	2008-12-26 15:41:59 UTC (rev 1103)
+++ branches/0.9.x/winsetup.py	2008-12-26 15:51:26 UTC (rev 1104)
@@ -54,10 +54,10 @@
 
 setup(
     name = "Griffith",
-    version = "0.9.8",
+    version = "0.9.9",
 	description = 'Griffith - A film manager',
     author = 'Vasco Nunes/Piotr Ozarowski',
-    author_email = 'vasco.m.nunes at gmail.com',
+    author_email = 'griffith at griffith.cc',
     url = 'http://www.griffith.cc/',
     license = 'GPL',
     windows = [



From piotrek at mail.berlios.de  Fri Dec 26 16:59:49 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Fri, 26 Dec 2008 16:59:49 +0100
Subject: [Griffith-svn] r1105 - in branches/0.9.x: . lib/plugins/movie
Message-ID: <200812261559.mBQFxnMh030401@sheep.berlios.de>

Author: piotrek
Date: 2008-12-26 16:59:49 +0100 (Fri, 26 Dec 2008)
New Revision: 1105

Modified:
   branches/0.9.x/ChangeLog
   branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
Log:
Switch back the default search query in IMDb plugin ("words" search is now accesible under "title" field)


Modified: branches/0.9.x/ChangeLog
===================================================================
--- branches/0.9.x/ChangeLog	2008-12-26 15:51:26 UTC (rev 1104)
+++ branches/0.9.x/ChangeLog	2008-12-26 15:59:49 UTC (rev 1105)
@@ -9,6 +9,7 @@
 
 2008-12-26  Piotr O?arowski
 	* Sync FDb, Onet and Stopklatka movie plugins with trunk
+	* Switch back the default search query in IMDb plugin ("words" search is now accesible under "title" field)
 	* NEWS updated
 	* Version changed to 0.9.9
 

Modified: branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-26 15:51:26 UTC (rev 1104)
+++ branches/0.9.x/lib/plugins/movie/PluginMovieIMDB.py	2008-12-26 15:59:49 UTC (rev 1105)
@@ -188,8 +188,8 @@
 	PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""")
 
 	def __init__(self):
-		self.original_url_search	= 'http://www.imdb.com/List?words='
-		self.translated_url_search	= 'http://www.imdb.com/find?more=tt;q='
+		self.translated_url_search = 'http://www.imdb.com/List?words='
+		self.original_url_search = 'http://www.imdb.com/find?more=tt;q='
 		self.encode = 'utf-8'
 
 	def search(self,parent_window):



From piotrek at mail.berlios.de  Sat Dec 27 22:53:29 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 27 Dec 2008 22:53:29 +0100
Subject: [Griffith-svn] r1107 - in branches/0.9.x: i18n/pl/LC_MESSAGES po
Message-ID: <200812272153.mBRLrTEw000058@sheep.berlios.de>

Author: piotrek
Date: 2008-12-27 22:53:29 +0100 (Sat, 27 Dec 2008)
New Revision: 1107

Modified:
   branches/0.9.x/i18n/pl/LC_MESSAGES/griffith.mo
   branches/0.9.x/po/pl.po
Log:
polish translation updated


Modified: branches/0.9.x/i18n/pl/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: branches/0.9.x/po/pl.po
===================================================================
--- branches/0.9.x/po/pl.po	2008-12-27 21:51:14 UTC (rev 1106)
+++ branches/0.9.x/po/pl.po	2008-12-27 21:53:29 UTC (rev 1107)
@@ -863,7 +863,7 @@
 
 #: ../lib/sql.py:506
 msgid "This database requires newer version of Griffith."
-msgstr ""
+msgstr "Ta baza film?w wymaga nowszej wersji programu Griffith"
 
 #: ../lib/version.py:29
 msgid "Griffith is a film collection manager."
@@ -944,7 +944,7 @@
 
 #: ../lib/plugins/movie/PluginMovieAmazon.py:38
 msgid "International"
-msgstr ""
+msgstr "mi?dzynarodowy"
 
 #: ../lib/plugins/movie/PluginMovieCinematografo.py:92
 #: ../lib/plugins/movie/PluginMovieCinematografo.py:201



From piotrek at mail.berlios.de  Sat Dec 27 23:32:45 2008
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 27 Dec 2008 23:32:45 +0100
Subject: [Griffith-svn] r1108 - in tags: . 0.9.9
Message-ID: <200812272232.mBRMWj40006586@sheep.berlios.de>

Author: piotrek
Date: 2008-12-27 23:32:44 +0100 (Sat, 27 Dec 2008)
New Revision: 1108

Added:
   tags/0.9.9/
Log:
tagging 0.9.9


Copied: tags/0.9.9 (from rev 1107, branches/0.9.x)


Property changes on: tags/0.9.9
___________________________________________________________________
Name: svn:mergeinfo
   + 



