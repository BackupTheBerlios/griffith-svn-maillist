From mikej06 at mail.berlios.de  Fri Jan  1 20:37:42 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 1 Jan 2010 20:37:42 +0100
Subject: [Griffith-svn] r1353 - in trunk: . lib/plugins/export
	lib/plugins/extensions
Message-ID: <201001011937.o01JbgPr007172@sheep.berlios.de>

Author: mikej06
Date: 2010-01-01 20:37:30 +0100 (Fri, 01 Jan 2010)
New Revision: 1353

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/export/PluginExportAMC.py
   trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py
   trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py
   trunk/lib/plugins/export/PluginExportGCstar.py
   trunk/lib/plugins/extensions/amazon.py
   trunk/winsetup.py
Log:
[#501526] Error in export GCStar/DVDProfilerXMLExportV2/3
completely removed all unused import xml.dom.ext

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/ChangeLog	2010-01-01 19:37:30 UTC (rev 1353)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-01  Michael Jahn
+	* [#501526] Error in export GCStar/DVDProfilerXMLExportV2/3
+
 2009-12-28  Michael Jahn
 	* updated movie plugin Allocine, Amazon, FilmDb
 	* updated import plugin CSV

Modified: trunk/lib/plugins/export/PluginExportAMC.py
===================================================================
--- trunk/lib/plugins/export/PluginExportAMC.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/lib/plugins/export/PluginExportAMC.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -22,7 +22,6 @@
 # GNU General Public License, version 2 or later
 
 import xml.dom.minidom
-import xml.dom.ext
 import datetime
 from plugins.export import XmlExportBase
 

Modified: trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py
===================================================================
--- trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -22,7 +22,6 @@
 # GNU General Public License, version 2 or later
 
 import xml.dom.minidom
-import xml.dom.ext
 from plugins.export import XmlExportBase
 
 class ExportPlugin(XmlExportBase):

Modified: trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py
===================================================================
--- trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -22,7 +22,6 @@
 # GNU General Public License, version 2 or later
 
 import xml.dom.minidom
-import xml.dom.ext
 from plugins.export import XmlExportBase
 
 class ExportPlugin(XmlExportBase):

Modified: trunk/lib/plugins/export/PluginExportGCstar.py
===================================================================
--- trunk/lib/plugins/export/PluginExportGCstar.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/lib/plugins/export/PluginExportGCstar.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -22,7 +22,6 @@
 # GNU General Public License, version 2 or later
 
 import xml.dom.minidom
-import xml.dom.ext
 import gutils
 from plugins.export import XmlExportBase
 

Modified: trunk/lib/plugins/extensions/amazon.py
===================================================================
--- trunk/lib/plugins/extensions/amazon.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/lib/plugins/extensions/amazon.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -373,9 +373,6 @@
     usock = u.open(url)
     xmldoc = minidom.parse(usock)
 
-#     from xml.dom.ext import PrettyPrint
-#     PrettyPrint(xmldoc)
-
     usock.close()
     data = unmarshal(xmldoc)
     if search_type == "BlendedSearch":

Modified: trunk/winsetup.py
===================================================================
--- trunk/winsetup.py	2009-12-28 21:46:53 UTC (rev 1352)
+++ trunk/winsetup.py	2010-01-01 19:37:30 UTC (rev 1353)
@@ -45,7 +45,7 @@
 
 opts = {
     "py2exe": {
-        "includes": "pygtk,cairo,pangocairo,gobject,cgi,PIL,pysqlite2,pysqlite2.*,pango,atk,gobject,tempfile,csv,xml.dom,xml.dom.ext,xml.dom.minidom,xml.sax,threading,htmlentitydefs,sqlalchemy,sqlalchemy.*,sqlalchemy.databases.*,sqlalchemy.engine.*,sqlalchemy.ext.*,sqlalchemy.orm.*,sqlalchemy.sql.*,zipfile,webbrowser,shutil,reportlab,reportlab.pdfgen,reportlab.pdfgen.canvas,reportlab.platypus,reportlab.pdfbase.ttfonts,smtplib,win32com,platform,winshell,psycopg2,MySQLdb,chardet,gzip,commands,encodings,encodings.*,ConfigParser,gtk.glade,xmlrpclib",
+        "includes": "pygtk,cairo,pangocairo,gobject,cgi,PIL,pysqlite2,pysqlite2.*,pango,atk,gobject,tempfile,csv,xml.dom,xml.dom.minidom,xml.sax,threading,htmlentitydefs,sqlalchemy,sqlalchemy.*,sqlalchemy.databases.*,sqlalchemy.engine.*,sqlalchemy.ext.*,sqlalchemy.orm.*,sqlalchemy.sql.*,zipfile,webbrowser,shutil,reportlab,reportlab.pdfgen,reportlab.pdfgen.canvas,reportlab.platypus,reportlab.pdfbase.ttfonts,smtplib,win32com,platform,winshell,psycopg2,MySQLdb,chardet,gzip,commands,encodings,encodings.*,ConfigParser,gtk.glade,xmlrpclib",
         "optimize": 2,
         "dist_dir": "dist",
     }



From mikej06 at mail.berlios.de  Fri Jan  1 22:33:49 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Fri, 1 Jan 2010 22:33:49 +0100
Subject: [Griffith-svn] r1354 - in trunk: . lib/plugins/movie
Message-ID: <201001012133.o01LXn11015460@sheep.berlios.de>

Author: mikej06
Date: 2010-01-01 22:33:39 +0100 (Fri, 01 Jan 2010)
New Revision: 1354

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieAllocine.py
Log:
updated movie plugin Allocine

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-01 19:37:30 UTC (rev 1353)
+++ trunk/ChangeLog	2010-01-01 21:33:39 UTC (rev 1354)
@@ -7,6 +7,7 @@
 
 2010-01-01  Michael Jahn
 	* [#501526] Error in export GCStar/DVDProfilerXMLExportV2/3
+	* updated movie plugin Allocine
 
 2009-12-28  Michael Jahn
 	* updated movie plugin Allocine, Amazon, FilmDb

Modified: trunk/lib/plugins/movie/PluginMovieAllocine.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAllocine.py	2010-01-01 19:37:30 UTC (rev 1353)
+++ trunk/lib/plugins/movie/PluginMovieAllocine.py	2010-01-01 21:33:39 UTC (rev 1354)
@@ -25,6 +25,8 @@
 import movie
 import string
 import re
+import logging
+log = logging.getLogger("Griffith")
 
 plugin_name         = "Allocine"
 plugin_description  = "Internet Movie Database"
@@ -133,18 +135,41 @@
 class SearchPlugin(movie.SearchMovie):
 
     def __init__(self):
-        self.original_url_search   = "http://www.allocine.fr/recherche/?q="
-        self.translated_url_search = "http://www.allocine.fr/recherche/?q="
+        self.original_url_search   = "http://www.allocine.fr/recherche/1/?q="
+        self.translated_url_search = "http://www.allocine.fr/recherche/1/?q="
         self.encode                = 'utf-8'
+        self.remove_accents        = True
 
     def search(self, parent_window):
         if not self.open_search(parent_window):
             return None
+        # try to find next pages if more than 20 results
+        match = re.search('<span class="navcurrpage">1</span> / ([0-9])+</li>', self.page)
         self.sub_search()
+        if match:
+            saved_url = self.url
+            saved_title = self.title
+            self.title = ''
+            try:
+                maxpages = int(match.group(1))
+                if maxpages > 1:
+                    currpage = 2
+                    while currpage <= maxpages and currpage < 5:
+                        oldpage = self.page
+                        self.url = string.replace(saved_url, '/?q=', '/?p=%s&q=' % currpage)
+                        if not self.open_search(parent_window):
+                            return None
+                        self.sub_search()
+                        self.page = oldpage + self.page
+                        currpage = currpage + 1
+            except:
+                log.exception('')
+            self.url = saved_url
+            self.title = saved_title
         return self.page
 
     def sub_search(self):
-        self.page = gutils.trim(self.page, 'r?sultats trouv?s', '<div class="spacer"')
+        self.page = gutils.regextrim(self.page, u'r?sultat[s]* trouv?[s]*', '<form method=')
 
     def get_searches(self):
         elements = string.split(self.page, '<a href=\'/film/fichefilm_gen_cfilm=')



From mikej06 at mail.berlios.de  Sat Jan  2 21:19:07 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sat, 2 Jan 2010 21:19:07 +0100
Subject: [Griffith-svn] r1355 - trunk/lib/plugins/export
Message-ID: <201001022019.o02KJ7Ov010301@sheep.berlios.de>

Author: mikej06
Date: 2010-01-02 21:18:58 +0100 (Sat, 02 Jan 2010)
New Revision: 1355

Modified:
   trunk/lib/plugins/export/PluginExportPDF.py
   trunk/lib/plugins/export/PluginExportiPod.py
Log:
removed unsupported argument from gutils.question call

Modified: trunk/lib/plugins/export/PluginExportPDF.py
===================================================================
--- trunk/lib/plugins/export/PluginExportPDF.py	2010-01-01 21:33:39 UTC (rev 1354)
+++ trunk/lib/plugins/export/PluginExportPDF.py	2010-01-02 20:18:58 UTC (rev 1355)
@@ -79,7 +79,7 @@
             overwrite = None
             pdffilename = filename[0].decode('utf-8')
             if os.path.isfile(pdffilename):
-                if gutils.question(_("File exists. Do you want to overwrite it?"), True, self.parent_window):
+                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
                     overwrite = True
                 else:
                     overwrite = False

Modified: trunk/lib/plugins/export/PluginExportiPod.py
===================================================================
--- trunk/lib/plugins/export/PluginExportiPod.py	2010-01-01 21:33:39 UTC (rev 1354)
+++ trunk/lib/plugins/export/PluginExportiPod.py	2010-01-02 20:18:58 UTC (rev 1355)
@@ -102,7 +102,7 @@
             if filename and filename[0]:
                 overwrite = None
                 if os.path.isfile(filename[0]):
-                    if gutils.question(_("File exists. Do you want to overwrite it?"), True, self.parent_window):
+                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
                         overwrite = True
                     else:
                         overwrite = False



From mikej06 at mail.berlios.de  Sat Jan  2 21:21:36 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sat, 2 Jan 2010 21:21:36 +0100
Subject: [Griffith-svn] r1356 - trunk/lib
Message-ID: <201001022021.o02KLaC2010747@sheep.berlios.de>

Author: mikej06
Date: 2010-01-02 21:21:28 +0100 (Sat, 02 Jan 2010)
New Revision: 1356

Modified:
   trunk/lib/add.py
Log:
fixed typo/copy&paste error

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2010-01-02 20:18:58 UTC (rev 1355)
+++ trunk/lib/add.py	2010-01-02 20:21:28 UTC (rev 1356)
@@ -590,7 +590,7 @@
     if pos is not None:
         w['collection'].set_active(int(pos))
     else:
-        w['volume'].set_active(0)
+        w['collection'].set_active(0)
     # tags
     for tag in self.am_tags:
         self.am_tags[tag].set_active(False)



From mikej06 at mail.berlios.de  Sun Jan  3 21:33:06 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 3 Jan 2010 21:33:06 +0100
Subject: [Griffith-svn] r1357 - trunk/lib/plugins/imp
Message-ID: <201001032033.o03KX6X0028774@sheep.berlios.de>

Author: mikej06
Date: 2010-01-03 21:32:50 +0100 (Sun, 03 Jan 2010)
New Revision: 1357

Modified:
   trunk/lib/plugins/imp/AMC.py
   trunk/lib/plugins/imp/AllMyMovies.py
   trunk/lib/plugins/imp/BESTheMovieLibrary.py
   trunk/lib/plugins/imp/DVDProfiler.py
   trunk/lib/plugins/imp/FoxMovieManager.py
   trunk/lib/plugins/imp/GCstar.py
   trunk/lib/plugins/imp/MovieTrack.py
   trunk/lib/plugins/imp/MyDVDs.py
   trunk/lib/plugins/imp/PersonalVideoDatabase.py
   trunk/lib/plugins/imp/TheMovieLibrary.py
   trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
   trunk/lib/plugins/imp/eXtremeMovieManager.py
Log:
pep8ify (import plugins)

Modified: trunk/lib/plugins/imp/AMC.py
===================================================================
--- trunk/lib/plugins/imp/AMC.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/AMC.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -90,6 +90,7 @@
 # LFFNR             4
 # PictureData       LFFNR
 
+
 class ImportPlugin(IP):
     description  = _('Ant Movie Catalog (version 3.5)')
     author       = 'Michael Jahn'
@@ -111,7 +112,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -191,7 +192,7 @@
                 details['poster'] = posterdata
             elif posterfilename and len(posterfilename) > 4:
                 details['poster'] = posterfilename
-            
+
             if details['title'] == None:
                 details['title'] = details['o_title']
             if details['o_title'] == None:
@@ -235,7 +236,7 @@
             version = 3.3
         elif header == self.fileHeader31:
             version = 3.1
-        return version;
+        return version
 
     def seekfield(self, ifile):
         lenStr = ifile.read(4)
@@ -279,4 +280,4 @@
         lenTuple = struct.unpack('i', lenStr)
         if lenTuple[0]:
             field = ifile.read(lenTuple[0])
-        return field
\ No newline at end of file
+        return field

Modified: trunk/lib/plugins/imp/AllMyMovies.py
===================================================================
--- trunk/lib/plugins/imp/AllMyMovies.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/AllMyMovies.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -33,6 +33,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('All My Movies 5.7')
     author       = 'Michael Jahn'
@@ -50,7 +51,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -83,11 +84,11 @@
                 'SELECT MovieID, barcode, comments, description, length, mediacount, MediaTypeName, \
                         mpaa, Name, originaltitle, rating, seen, studio, url, year, Trailer \
                  FROM movies LEFT OUTER JOIN MediaType ON movies.MediaTypeID=MediaType.MediaTypeID;')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             movieID = currentrow[0]
@@ -140,7 +141,7 @@
                         cast = cast + '\n' + currentrow[0]
                     currentrow = curs.fetchone()
                 details['cast'] = cast
-            
+
             curs.execute('SELECT Countries.Name \
                           FROM Countries INNER JOIN CountryLink ON Countries.CountryID=CountryLink.CountryID \
                           WHERE CountryLink.MovieID=' + str(movieID))
@@ -152,7 +153,7 @@
                     country = country + ', ' + currentrow[0]
                     currentrow = curs.fetchone()
                 details['country'] = country
-            
+
             curs.execute('SELECT Actors.Name \
                           FROM Actors INNER JOIN DirectorLink ON Actors.ActorID=DirectorLink.ActorID \
                           WHERE DirectorLink.MovieID=' + str(movieID))
@@ -164,7 +165,7 @@
                     director = director + ', ' + currentrow[0]
                     currentrow = curs.fetchone()
                 details['director'] = director
-            
+
             curs.execute('SELECT Genres.Name \
                           FROM Genres INNER JOIN GenresLink ON Genres.GenreID=GenresLink.GenreID \
                           WHERE GenresLink.MovieID=' + str(movieID))
@@ -176,14 +177,14 @@
                     genre = genre + ', ' + currentrow[0]
                     currentrow = curs.fetchone()
                 details['genre'] = genre
-            
+
             curs.execute('SELECT images.image \
                           FROM images \
                           WHERE cover=-1 AND images.MovieID=' + str(movieID))
             currentrow = curs.fetchone()
             if currentrow:
                 details['poster'] = currentrow[0]
-            
+
             curs.close()
         except Exception, e:
             log.exception('')
@@ -219,5 +220,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('AllMyMovies Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/BESTheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -33,6 +33,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('Barrett Enterprise Software The Movie Library 1.9.x')
     author       = 'Michael Jahn'
@@ -50,7 +51,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -83,11 +84,11 @@
             self.cursor.execute( \
                 'SELECT Title, Category, Rating, Rated, Actor1, Actor2, Description, MediaType \
                  FROM Main')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             if currentrow[0]:
@@ -112,7 +113,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        
+
         return details
 
     def clear(self):
@@ -143,5 +144,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('BES The Movie Library Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/DVDProfiler.py
===================================================================
--- trunk/lib/plugins/imp/DVDProfiler.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/DVDProfiler.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -29,6 +29,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('DVD Profiler (version 3.x)')
     author       = 'Michael Jahn'
@@ -47,7 +48,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -115,12 +116,12 @@
                     elif node.nodeName == 'Overview' and len(node.childNodes) > 0:
                         details['plot'] = node.childNodes[0].data.strip()
                     elif node.nodeName == 'Rating' and len(node.childNodes) > 0:
-                        if details.has_key('classification') and details['classification']:
+                        if 'classification' in details and details['classification']:
                             details['classification'] = node.childNodes[0].data.strip() + '-' + details['classification']
                         else:
                             details['classification'] = node.childNodes[0].data.strip()
                     elif node.nodeName == 'RatingAge' and len(node.childNodes) > 0:
-                        if details.has_key('classification') and details['classification']:
+                        if 'classification' in details and details['classification']:
                             details['classification'] = details['classification'] + '-' + node.childNodes[0].data.strip()
                         else:
                             details['classification'] = node.childNodes[0].data.strip()
@@ -301,7 +302,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        self.itemindex = self.itemindex +  1
+        self.itemindex = self.itemindex + 1
         return details
 
     def clear(self):
@@ -339,5 +340,4 @@
             log.error(str(e))
             self.filedom.unlink()
             self.filedom = None
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/FoxMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -33,6 +33,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('Fox Movie Manager 1.4')
     author       = 'Michael Jahn'
@@ -50,7 +51,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -86,11 +87,11 @@
                         fldPicPath, fldWatched, fldUserRating, fldRating, fldMedia, \
                         fldMoviePath, fldTrailerPath \
                  FROM tblMovie')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             details['number'] = currentrow[0]
@@ -158,7 +159,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        
+
         return details
 
     def clear(self):
@@ -189,5 +190,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('Fox Movie Manager Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/GCstar.py
===================================================================
--- trunk/lib/plugins/imp/GCstar.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/GCstar.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -30,6 +30,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('GCstar (version 1.4.x)')
     author       = 'Michael Jahn'
@@ -48,7 +49,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -82,11 +83,11 @@
             return None
         if len(self.items) <= self.itemindex:
             return None
-        
+
         details = {}
         try:
             item = self.items[self.itemindex]
-            
+
             details['title']          = item.getAttribute('title')
             details['o_title']        = item.getAttribute('original')
             details['year']           = item.getAttribute('date')
@@ -159,7 +160,7 @@
         except Exception, e:
             log.error(str(e))
             details = None
-        self.itemindex = self.itemindex +  1
+        self.itemindex = self.itemindex + 1
         return details
 
     def clear(self):
@@ -188,5 +189,4 @@
             log.error(str(e))
             self.filedom.unlink()
             self.filedom = None
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/MovieTrack.py
===================================================================
--- trunk/lib/plugins/imp/MovieTrack.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/MovieTrack.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -29,6 +29,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('MovieTrack (version 3.4x)')
     author       = 'Michael Jahn'
@@ -46,7 +47,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -63,7 +64,7 @@
     def count_movies(self):
         """Returns number of movies in file which is about to be imported"""
         count = 0
-        fileforcount= open(self.filename)
+        fileforcount = open(self.filename)
         try:
             for line in fileforcount:
                 count = count + 1
@@ -120,7 +121,7 @@
                 details['notes'] = unicode(fields[10])  # Comments
             movieid = fields[11]                        # AGN
             #details[''] = fields[12]   # UGN
-            
+
             # try to get some more details from imdb-file
             try:
                 if self.imdbfilename:
@@ -167,13 +168,13 @@
                 log.exception('')
             finally:
                 openedimdb.close()
-            
+
         except EOFError:
             details = None
         except Exception, e:
             log.exception('')
             details = None
-        
+
         return details
 
     def clear(self):
@@ -203,5 +204,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('MovieTrack Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/MyDVDs.py
===================================================================
--- trunk/lib/plugins/imp/MyDVDs.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/MyDVDs.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -33,6 +33,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('MyDVDs 1.6x')
     author       = 'Michael Jahn'
@@ -50,7 +51,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -83,11 +84,11 @@
                 'SELECT id, title, year, rating, stars, director, synop, \
                         cover, runtime, genre, notes, trailer, star5 \
                  FROM dvd;')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             if currentrow[1]:
@@ -122,7 +123,6 @@
         except Exception, e:
             log.exception('')
             details = None
-        #print details
         return details
 
     def clear(self):
@@ -153,5 +153,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('MyDVDs Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/PersonalVideoDatabase.py
===================================================================
--- trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -29,6 +29,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('Personal Video Database (version 0.9.9.x)')
     author       = 'Michael Jahn'
@@ -47,7 +48,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -159,7 +160,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        self.itemindex = self.itemindex +  1
+        self.itemindex = self.itemindex + 1
         return details
 
     def clear(self):
@@ -188,5 +189,4 @@
             self.filedom.unlink()
             self.filedom = None
         log.info('Personal Video Database Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/TheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -33,6 +33,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('WenSoftware The Movie Library 1.4.x')
     author       = 'Michael Jahn'
@@ -50,7 +51,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -86,11 +87,11 @@
                         Length, Director, Writer, Photographer, Plot, \
                         FrontCover, Seen, Comment, Actor, Trailer, Color, Rating \
                  FROM Movie')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             if currentrow[1]:
@@ -164,7 +165,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        
+
         return details
 
     def clear(self):
@@ -195,5 +196,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('The Movie Library Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
===================================================================
--- trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -32,6 +32,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('wintoolz Filmdatenbank (version 1.0.0.x)')
     author       = 'Michael Jahn'
@@ -49,7 +50,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -83,11 +84,11 @@
                  Mediendatei, BewertungHandlung, BewertungDarsteller, BewertungMusik,\
                  BewertungEmotionen, BewertungSpecialEffects, GesehenZahl, Farbdarstellung \
                  FROM Main')
-        
+
         currentrow = self.cursor.fetchone()
         if not currentrow:
             return None
-        
+
         details = {}
         try:
             if currentrow[0]:
@@ -157,7 +158,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        
+
         return details
 
     def clear(self):
@@ -180,5 +181,4 @@
         except Exception, e:
             log.error(str(e))
         log.info('wintoolz Filmdatenbank Import: Found file version %s' % version)
-        return version;
-
+        return version

Modified: trunk/lib/plugins/imp/eXtremeMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-02 20:21:28 UTC (rev 1356)
+++ trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-03 20:32:50 UTC (rev 1357)
@@ -29,6 +29,7 @@
 import logging
 log = logging.getLogger("Griffith")
 
+
 class ImportPlugin(IP):
     description  = _('eXtreme Movie Manager (version 6.x / 7.x)')
     author       = 'Michael Jahn'
@@ -47,7 +48,7 @@
             return False
         self.edit = False
         return True
-    
+
     def set_source(self, name):
         IP.set_source(self, name)
         self.filename = name
@@ -176,7 +177,7 @@
                         except:
                             pass
                     elif node.nodeName == 'Media' and len(node.childNodes) > 0:
-                        details['vcodec_id'] = node.childNodes[0].data
+                        details['medium_id'] = node.childNodes[0].data
                     elif node.nodeName == 'Color' and len(node.childNodes) > 0:
                         if node.childNodes[0].data == 'False':
                             details['color'] = 2
@@ -187,7 +188,7 @@
         except Exception, e:
             log.exception('')
             details = None
-        self.itemindex = self.itemindex +  1
+        self.itemindex = self.itemindex + 1
         return details
 
     def clear(self):
@@ -225,5 +226,4 @@
             self.filedom.unlink()
             self.filedom = None
         log.info('eXtreme Movie Manager Import: Found file version %s' % version)
-        return version;
-
+        return version



From mikej06 at mail.berlios.de  Sun Jan  3 21:35:13 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 3 Jan 2010 21:35:13 +0100
Subject: [Griffith-svn] r1358 - trunk/lib/plugins/export
Message-ID: <201001032035.o03KZDek028930@sheep.berlios.de>

Author: mikej06
Date: 2010-01-03 21:35:05 +0100 (Sun, 03 Jan 2010)
New Revision: 1358

Modified:
   trunk/lib/plugins/export/PluginExportCSV.py
Log:
added column header row and some more columns to the basic CSV export

Modified: trunk/lib/plugins/export/PluginExportCSV.py
===================================================================
--- trunk/lib/plugins/export/PluginExportCSV.py	2010-01-03 20:32:50 UTC (rev 1357)
+++ trunk/lib/plugins/export/PluginExportCSV.py	2010-01-03 20:35:05 UTC (rev 1358)
@@ -28,6 +28,7 @@
 import db
 from plugins.export import Base
 
+
 class ExportPlugin(Base):
     name = "CSV"
     description = _("Full CSV list export plugin")
@@ -37,7 +38,9 @@
 
     fields_to_export = ('number', 'o_title', 'title', 'director', 'year', 'classification', 'country',
                         'genre', 'rating', 'runtime', 'studio', 'seen', 'loaned', 'o_site', 'site', 'trailer',
-                        'plot', 'cast', 'notes', 'image', 'volumes.name', 'collections.name', 'media.name')
+                        'plot', 'cast', 'notes', 'image', 'volumes.name', 'collections.name', 'media.name',
+                        'screenplay', 'cameraman', 'barcode', 'color', 'cond', 'layers', 'region',
+                        'media_num', 'vcodecs.name')
 
     def run(self):
         basedir = None
@@ -64,6 +67,9 @@
                 movies = self.get_query().execute()
 
                 writer = csv.writer(file(filename[0], 'w'), dialect=csv.excel)
+                # write column header row
+                writer.writerow(self.fields_to_export)
+                # write data rows
                 for movie in movies:
                     t = []
                     for s in self.exported_columns:



From mikej06 at mail.berlios.de  Sun Jan  3 21:38:52 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 3 Jan 2010 21:38:52 +0100
Subject: [Griffith-svn] r1359 - in trunk: . lib
Message-ID: <201001032038.o03KcqVh029352@sheep.berlios.de>

Author: mikej06
Date: 2010-01-03 21:38:41 +0100 (Sun, 03 Jan 2010)
New Revision: 1359

Modified:
   trunk/griffith
   trunk/lib/add.py
Log:
moved adding of new volumes, collections, medium and vcodec to the add modul because of re-using the functions within the import process

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2010-01-03 20:35:05 UTC (rev 1358)
+++ trunk/griffith	2010-01-03 20:38:41 UTC (rev 1359)
@@ -421,32 +421,12 @@
             self._selected_volume = self.volume_combo_ids[widget.get_active()]
 
     def add_volume(self, widget):
-        session = self.db.Session()
         name = self.widgets['add']['volume'].get_active_text().decode('utf-8')
-        vol = db.Volume(name=name)
-        session.add(vol)
-        try:
-            session.commit()
-        except Exception, e:
-            session.rollback()
-            log.warn("Cannot add volume: %s", e.message)
-        else:
-            initialize.update_volume_combo_ids(self)
-            initialize.fill_volumes_combo(self, id)
+        add.add_volume(self, name)
 
     def add_collection(self, widget):
-        session = self.db.Session()
         name = self.widgets['add']['collection'].get_active_text().decode('utf-8')
-        col = db.Collection(name=name)
-        session.add(col)
-        try:
-            session.commit()
-        except Exception, e:
-            session.rollback()
-            log.warn("Cannot add collection: %s", e.message)
-        else:
-            initialize.update_collection_combo_ids(self)
-            initialize.fill_collections_combo(self, id)
+        add.add_collection(self, name)
 
     def remove_volume(self, widget):
         session = self.db.Session()
@@ -892,17 +872,8 @@
 
     # media ------------------------------------------------------------{{{
     def on_medium_add_clicked(self, widget):
-        session = self.db.Session()
-        medium = db.Medium()
-        medium.name = self.widgets['preferences']['medium_name'].get_active_text().decode('utf-8')
-        session.add(medium)
-        try:
-            session.commit()
-        except Exception, e:
-            session.rollback()
-            log.warn("Cannot add medium entry: %s", e.message)
-        else:
-            initialize.media_combos(self)
+        name = self.widgets['preferences']['medium_name'].get_active_text().decode('utf-8')
+        add.add_medium(self, name)
 
     def on_medium_remove_clicked(self, widget):
         session = self.db.Session()
@@ -950,17 +921,8 @@
 
     # vcodecs -------------------------------------------------------------{{{
     def on_vcodec_add_clicked(self, widget):
-        session = self.db.Session()
-        vcodec = db.VCodec()
-        vcodec.name = self.widgets['preferences']['vcodec_name'].get_active_text().decode('utf-8')
-        session.add(vcodec)
-        try:
-            session.commit()
-        except Exception, e:
-            session.rollback()
-            log.warn("Cannot add video codec entry: %s", e.message)
-        else:
-            initialize.vcodec_combos(self)
+        name = self.widgets['preferences']['vcodec_name'].get_active_text().decode('utf-8')
+        add.add_vcodec(self, name)
 
     def on_vcodec_remove_clicked(self, widget):
         session = self.db.Session()

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2010-01-03 20:35:05 UTC (rev 1358)
+++ trunk/lib/add.py	2010-01-03 20:38:41 UTC (rev 1359)
@@ -31,6 +31,7 @@
 import quick_filter
 import db
 import gutils
+import initialize
 
 log = logging.getLogger("Griffith")
 
@@ -869,3 +870,61 @@
         log.error("Unexpected problem: %s", e)
         return False
     return True
+
+
+def add_medium(self, name):
+    session = self.db.Session()
+    medium = db.Medium(name = name)
+    session.add(medium)
+    try:
+        session.commit()
+    except Exception, e:
+        session.rollback()
+        log.warn("Cannot add medium entry: %s", e.message)
+    else:
+        initialize.media_combos(self)
+    return medium.medium_id
+
+
+def add_vcodec(self, name):
+    session = self.db.Session()
+    vcodec = db.VCodec(name = name)
+    session.add(vcodec)
+    try:
+        session.commit()
+    except Exception, e:
+        session.rollback()
+        log.warn("Cannot add video codec entry: %s", e.message)
+    else:
+        initialize.vcodec_combos(self)
+    return vcodec.vcodec_id
+
+
+def add_volume(self, name):
+    session = self.db.Session()
+    vol = db.Volume(name = name)
+    session.add(vol)
+    try:
+        session.commit()
+    except Exception, e:
+        session.rollback()
+        log.warn("Cannot add volume: %s", e.message)
+    else:
+        initialize.update_volume_combo_ids(self)
+        initialize.fill_volumes_combo(self, vol.volume_id)
+    return vol.volume_id
+
+
+def add_collection(self, name):
+    session = self.db.Session()
+    col = db.Collection(name = name)
+    session.add(col)
+    try:
+        session.commit()
+    except Exception, e:
+        session.rollback()
+        log.warn("Cannot add collection: %s", e.message)
+    else:
+        initialize.update_collection_combo_ids(self)
+        initialize.fill_collections_combo(self, col.collection_id)
+    return col.collection_id



From mikej06 at mail.berlios.de  Sun Jan  3 21:41:47 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 3 Jan 2010 21:41:47 +0100
Subject: [Griffith-svn] r1360 - trunk/lib/plugins/imp
Message-ID: <201001032041.o03Kflsj029659@sheep.berlios.de>

Author: mikej06
Date: 2010-01-03 21:41:40 +0100 (Sun, 03 Jan 2010)
New Revision: 1360

Modified:
   trunk/lib/plugins/imp/__init__.py
Log:
added support of adding new collections, volumes, medium and vcodecs while importing data
generalized mapping of lookup data

Modified: trunk/lib/plugins/imp/__init__.py
===================================================================
--- trunk/lib/plugins/imp/__init__.py	2010-01-03 20:38:41 UTC (rev 1359)
+++ trunk/lib/plugins/imp/__init__.py	2010-01-03 20:41:40 UTC (rev 1360)
@@ -28,6 +28,7 @@
 import gc
 import struct
 from tempfile import mkstemp
+import add
 import logging
 log = logging.getLogger("Griffith")
 
@@ -55,10 +56,10 @@
 
     previous_dir = None
 
-    # mapping dicts name to id
-    mediummap = None
+    # maps foreign key column names to mappings dicts name to id
+    foreignkeymaps = None
+    # mappings tag names to id
     tagmap = None
-    vcodecsmap = None
 
     def __init__(self, parent, fields_to_import):
         self.parent = parent
@@ -74,32 +75,6 @@
         self.fields_to_import = fields_to_import
         self._continue = True
 
-    def loadmappings(self):
-        self.mediummap = {}
-        self.tagmap = {}
-        self.vcodecsmap = {}
-        # medium
-        for medium in self.db.session.query(db.Medium.medium_id, db.Medium.name).all():
-            # original name
-            mediumname = medium.name.lower()
-            if not mediumname in self.mediummap:
-                self.mediummap[mediumname] = medium.medium_id
-            # normalized name
-            mediumname = mediumname.replace('-', '')
-            mediumname = mediumname.replace(' ', '')
-            if not mediumname in self.mediummap:
-                self.mediummap[mediumname] = medium.medium_id
-        # tags
-        for tag in self.db.session.query(db.Tag.tag_id, db.Tag.name).all():
-            tagname = tag.name.lower()
-            if not tagname in self.tagmap:
-                self.tagmap[tagname] = tag.tag_id
-        # vcodecs
-        for vcodec in self.db.session.query(db.VCodec.vcodec_id, db.VCodec.name).all():
-            vcodecname = vcodec.name.lower()
-            if not vcodecname in self.vcodecsmap:
-                self.vcodecsmap[vcodecname] = vcodec.vcodec_id
-
     def initialize(self):
         """Initializes plugin (get all parameters from user, etc.)"""
         self.imported = 0
@@ -191,8 +166,8 @@
                     elif title_lower and title_lower in titles: # o_title is not available so lets check title only
                         log.info("movie already exists (title=%s)", details['title'])
                         continue
-                    validate_details(details, self.fields_to_import)
                     if self.edit: # XXX: not used for now
+                        validate_details(details, self.fields_to_import)
                         response = edit_movie(self.parent, details)    # FIXME: wait until save or cancel button pressed
                         if response == 1:
                             self.imported += 1
@@ -201,8 +176,6 @@
                         while number in numbers:
                             number += 1
                         details['number'] = number
-                        #movie = db.Movie()
-                        #movie.add_to_db(details)
                         if 'tags' in details:
                             tags = details.pop('tags')
                         else:
@@ -213,35 +186,25 @@
                             poster = None
                         try:
                             # optional: do mapping of lookup data
-                            # (TODO: perhaps adding new lookup values?)
-                            try:
-                                if 'medium_id' in details:
-                                    medium_id = int(details['medium_id'])
-                            except:
+                            if not self.foreignkeymaps:
+                                self._loadmappings()
+                            for fkcolumnname in self.foreignkeymaps:
                                 try:
-                                    if self.mediummap is None:
-                                        self.loadmappings()
-                                    medium_id = details['medium_id'].lower()
-                                    if medium_id in self.mediummap:
-                                        details['medium_id'] = self.mediummap[medium_id]
-                                    else:
-                                        details['medium_id'] = None
+                                    if fkcolumnname in details and details[fkcolumnname]:
+                                        fkcolumn_id = int(details[fkcolumnname])
                                 except:
-                                    details['medium_id'] = None
-                            try:
-                                if 'vcodec_id' in details:
-                                    vcodec_id = int(details['vcodec_id'])
-                            except:
-                                try:
-                                    if self.vcodecsmap is None:
-                                        self.loadmappings()
-                                    vcodec_id = details['vcodec_id'].lower()
-                                    if vcodec_id in self.vcodecsmap:
-                                        details['vcodec_id'] = self.vcodecsmap[vcodec_id]
-                                    else:
-                                        details['vcodec_id'] = None
-                                except:
-                                    details['vcodec_id'] = None
+                                    try:
+                                        fkcolumn_id = self.normalizename(details[fkcolumnname])
+                                        currentmap = self.foreignkeymaps[fkcolumnname]
+                                        if fkcolumn_id in currentmap:
+                                            details[fkcolumnname] = currentmap[fkcolumn_id]
+                                        else:
+                                            details[fkcolumnname] = self._addmappingvalue(fkcolumnname, details[fkcolumnname])
+                                    except:
+                                        log.exception(fkcolumnname)
+                                        details[fkcolumnname] = None
+                            # validation before insertion
+                            validate_details(details, self.fields_to_import)
                             # insert the movie in the database
                             movie = db.tables.movies.insert(bind=self.db.session.bind).execute(details)
                             self.imported += 1
@@ -279,7 +242,7 @@
                                                 os.remove(posterfilename)
                                     else:
                                         edit.update_image(self.parent, number, poster)
-                        except Exception, e:
+                        except Exception:
                             log.exception("movie details are not unique, skipping")
                         numbers.add(number)
                 else:
@@ -304,7 +267,77 @@
         """close all resources"""
         pass
 
+    def _loadmappings(self):
+        # add all lookup mapping lists to a list which maps by foreign key column name
+        self.foreignkeymaps = {}
+        self.foreignkeymaps['medium_id'] = self._loadmappingmedium()
+        self.foreignkeymaps['vcodec_id'] = self._loadmappingvcodecs()
+        self.foreignkeymaps['collection_id'] = self._loadmappingcollections()
+        self.foreignkeymaps['volume_id'] = self._loadmappingvolumes()
+        # tags are no foreign key lookup data; it's an intersection
+        self.tagmap = {}
+        for tag in self.db.session.query(db.Tag.tag_id, db.Tag.name).all():
+            tagname = self.normalizename(tag.name)
+            if not tagname in self.tagmap:
+                self.tagmap[tagname] = tag.tag_id
 
+    def _loadmappingmedium(self):
+        mediummap = {}
+        for medium in self.db.session.query(db.Medium.medium_id, db.Medium.name).all():
+            mediumname = self.normalizename(medium.name)
+            if not mediumname in mediummap:
+                mediummap[mediumname] = medium.medium_id
+        return mediummap
+
+    def _loadmappingvcodecs(self):
+        vcodecsmap = {}
+        for vcodec in self.db.session.query(db.VCodec.vcodec_id, db.VCodec.name).all():
+            vcodecname = self.normalizename(vcodec.name)
+            if not vcodecname in vcodecsmap:
+                vcodecsmap[vcodecname] = vcodec.vcodec_id
+        return vcodecsmap
+
+    def _loadmappingcollections(self):
+        collectionsmap = {}
+        for collection in self.db.session.query(db.Collection.collection_id, db.Collection.name).all():
+            collectionname = self.normalizename(collection.name)
+            if not collectionname in collectionsmap:
+                collectionsmap[collectionname] = collection.collection_id
+        return collectionsmap
+
+    def _loadmappingvolumes(self):
+        volumesmap = {}
+        for volume in self.db.session.query(db.Volume.volume_id, db.Volume.name).all():
+            volumename = self.normalizename(volume.name)
+            if not volumename in volumesmap:
+                volumesmap[volumename] = volume.volume_id
+        return volumesmap
+
+    def _addmappingvalue(self, fkcolumnname, newname):
+        id = None
+        log.debug("Adding <%s> for <%s>", newname, fkcolumnname)
+        if fkcolumnname == 'medium_id':
+            id = add.add_medium(self.parent, newname)
+            self.foreignkeymaps['medium_id'] = self._loadmappingmedium()
+        elif fkcolumnname == 'vcodec_id':
+            id = add.add_vcodec(self.parent, newname)
+            self.foreignkeymaps['vcodec_id'] = self._loadmappingvcodecs()
+        elif fkcolumnname == 'collection_id':
+            id = add.add_collection(self.parent, newname)
+            self.foreignkeymaps['collection_id'] = self._loadmappingcollections()
+        elif fkcolumnname == 'volume_id':
+            id = add.add_volume(self.parent, newname)
+            self.foreignkeymaps['volume_id'] = self._loadmappingvolumes()
+        return id
+
+    def normalizename(self, name):
+        name = name.replace('-', '')
+        name = name.replace('_', '')
+        name = name.replace(' ', '')
+        name = name.replace(u'\xa0', '') # unicode whitespace from XML data (&x160;)
+        return name.lower().strip()
+
+
 def on_import_plugin_changed(combobox, widgets, *args):
     from gtk import FileFilter
     import plugins.imp



From mikej06 at mail.berlios.de  Sun Jan  3 21:48:56 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 3 Jan 2010 21:48:56 +0100
Subject: [Griffith-svn] r1361 - in trunk: . lib/plugins/imp
Message-ID: <201001032048.o03KmuLm030298@sheep.berlios.de>

Author: mikej06
Date: 2010-01-03 21:48:47 +0100 (Sun, 03 Jan 2010)
New Revision: 1361

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/imp/CSV.py
Log:
CSV import: added support for fields screenplay, cameraman and barcode
CSV import: added support for lookup mapping of collection, volume, medium and vcodec entries
CSV import: skipping empty lines in files


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-03 20:41:40 UTC (rev 1360)
+++ trunk/ChangeLog	2010-01-03 20:48:47 UTC (rev 1361)
@@ -5,6 +5,12 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-03  Michael Jahn
+	* added column header row and some more columns to the basic CSV export
+	* added support of adding new collections, volumes, medium and vcodecs while importing data
+	  (regards different import plugins)
+	* added support for fields screenplay, cameraman and barcode to the CSV import plugin
+
 2010-01-01  Michael Jahn
 	* [#501526] Error in export GCStar/DVDProfilerXMLExportV2/3
 	* updated movie plugin Allocine

Modified: trunk/lib/plugins/imp/CSV.py
===================================================================
--- trunk/lib/plugins/imp/CSV.py	2010-01-03 20:41:40 UTC (rev 1360)
+++ trunk/lib/plugins/imp/CSV.py	2010-01-03 20:48:47 UTC (rev 1361)
@@ -145,7 +145,8 @@
                 "cast", "studio", "plot", "runtime", "genre", "classification",
                 "site", "o_site", "trailer", "image", "seen", "loaned", "notes",
                 "rating", "movie_id", "collection_id", "volume_id", "medium_id",
-                "vcodec_id", "color", "cond", "layers", "region", "media_num")
+                "vcodec_id", "color", "cond", "layers", "region", "media_num",
+                "screenplay", "cameraman", "barcode")
         # sort the list and add field and translated field-name
         for sorted in sorted_list:
             for name in self.fields_to_import:
@@ -385,6 +386,9 @@
     def get_movie_details(self):
         try:
             item = self.data.next()
+            # skip possible empty lines
+            while not len(item):
+                item = self.data.next()
         except:
             return None
         if item is None:
@@ -402,8 +406,16 @@
         for field in self.import_table:
             try:
                 # some minor fixes to the import so it fits the griffith variable types
-                if field == 'year' or field == 'runtime' or field == 'media_num' or field == 'number'  or field == 'volume_id':
+                if field == 'year':
                     t_movies[field] = int(digits_only(item[int(self.import_table[field])]))
+                    if t_movies[field] == 0:
+                        t_movies[field] = None
+                elif field == 'runtime' or field == 'media_num' or field == 'number':
+                    t_movies[field] = int(digits_only(item[int(self.import_table[field])]))
+                elif field == 'volume_id' or field == 'medium_id' or field == 'collection_id' or field == 'vcodec_id':
+                    # foreign key fields are mapped in the base class; can be an integer value
+                    # for a direct assignment or a string for a lookup in the database table
+                    t_movies[field] = unicode(item[int(self.import_table[field])])
                 elif field == 'seen' or field == 'loaned':
                     t_movies[field] = bool(item[int(self.import_table[field])])
                 elif field == 'country':
@@ -420,7 +432,7 @@
                     t_movies[field] = unicode(item[int(self.import_table[field])])
             except:
                 # error field can't be imported
-                log.debug("field %s cannot be imported (%s)", field, e)
+                log.exception("field %s cannot be imported", field)
                 t_movies.pop(field)
 
         return t_movies



From mikej06 at mail.berlios.de  Mon Jan  4 14:52:12 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Mon, 4 Jan 2010 14:52:12 +0100
Subject: [Griffith-svn] r1362 - trunk/lib
Message-ID: <201001041352.o04DqCtT027966@sheep.berlios.de>

Author: mikej06
Date: 2010-01-04 14:51:59 +0100 (Mon, 04 Jan 2010)
New Revision: 1362

Modified:
   trunk/lib/gutils.py
Log:
extend md5sum method for support of calculating md5 from in-memory objects

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2010-01-03 20:48:47 UTC (rev 1361)
+++ trunk/lib/gutils.py	2010-01-04 13:51:59 UTC (rev 1362)
@@ -276,6 +276,9 @@
                 window = gtk.Window()
                 window.set_title('Griffith info')
                 window.set_position(gtk.WIN_POS_CENTER)
+                window.set_keep_above(True)
+                window.stick()
+                window.set_default_size(200, 50)
                 label = gtk.Label()
                 label.set_markup("""<big><b>Griffith:</b>
 %s</big>""" % message)
@@ -624,11 +627,14 @@
     except ImportError:
         import md5
         m = md5.new()
-    while True:
-        d = fobj.read(8096)
-        if not d:
-            break
-        m.update(d)
+    if hasattr(fobj, 'read'):
+        while True:
+            d = fobj.read(8096)
+            if not d:
+                break
+            m.update(d)
+    else:
+        m.update(fobj)
     return unicode(m.hexdigest())
 
 def create_image_cache(md5sum, gsql):



From mikej06 at mail.berlios.de  Mon Jan  4 14:54:19 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Mon, 4 Jan 2010 14:54:19 +0100
Subject: [Griffith-svn] r1363 - trunk/lib
Message-ID: <201001041354.o04DsJkH028157@sheep.berlios.de>

Author: mikej06
Date: 2010-01-04 14:54:02 +0100 (Mon, 04 Jan 2010)
New Revision: 1363

Modified:
   trunk/lib/edit.py
Log:
new method for updating movie posters from memory without the need for temp. files on disk

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2010-01-04 13:51:59 UTC (rev 1362)
+++ trunk/lib/edit.py	2010-01-04 13:54:02 UTC (rev 1363)
@@ -48,22 +48,29 @@
         update_image(self, number, filename)
 
 def update_image(self, number, filename):
+    imagedata = file(filename, 'rb').read()
+    update_image_from_memory(number, imagedata)
+
+def update_image_from_memory(self, number, data):
     session = self.db.Session()
     try:
+        loader = gtk.gdk.PixbufLoader()
+        loader.write(data, len(data))
+        loader.close()
         self.widgets['movie']['picture'].set_from_pixbuf(\
-                gtk.gdk.pixbuf_new_from_file(filename).scale_simple(100, 140, gtk.gdk.INTERP_BILINEAR))
+                loader.get_pixbuf().scale_simple(100, 140, gtk.gdk.INTERP_BILINEAR))
     except Exception, e:
         log.error(str(e))
         gutils.error(self, _("Image is not valid."), self.widgets['window'])
         return False
 
-    poster_md5 = gutils.md5sum(file(filename, 'rb'))
+    poster_md5 = gutils.md5sum(data)
 
     movie = session.query(db.Movie).filter_by(number=number).one()
     old_poster_md5 = movie.poster_md5
 
     if session.query(db.Poster).filter_by(md5sum=poster_md5).count() == 0:
-        poster = db.Poster(md5sum=poster_md5, data=file(filename, 'rb').read())
+        poster = db.Poster(md5sum=poster_md5, data=data)
         session.add(poster)
 
     # update the md5 *after* all other queries (so that UPDATE will not be invoked)



From mikej06 at mail.berlios.de  Mon Jan  4 14:55:20 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Mon, 4 Jan 2010 14:55:20 +0100
Subject: [Griffith-svn] r1364 - in trunk: . lib/plugins/extensions
Message-ID: <201001041355.o04DtK1O028243@sheep.berlios.de>

Author: mikej06
Date: 2010-01-04 14:55:09 +0100 (Mon, 04 Jan 2010)
New Revision: 1364

Added:
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Modified:
   trunk/ChangeLog
   trunk/NEWS
Log:
add MoviePosterDB extension (supports fetching posters)

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-04 13:54:02 UTC (rev 1363)
+++ trunk/ChangeLog	2010-01-04 13:55:09 UTC (rev 1364)
@@ -5,6 +5,9 @@
 (c) 2005-2009  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-04  Michael Jahn
+	* add MoviePosterDB extension (supports fetching posters)
+
 2010-01-03  Michael Jahn
 	* added column header row and some more columns to the basic CSV export
 	* added support of adding new collections, volumes, medium and vcodecs while importing data

Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2010-01-04 13:54:02 UTC (rev 1363)
+++ trunk/NEWS	2010-01-04 13:55:09 UTC (rev 1364)
@@ -7,6 +7,7 @@
    - Mark as seen
    - Player
    - Remover
+   - MoviePosterDB
 * New import plugins:
    - All My Movies
    - Barret Enterprise Software The Movie Library

Added: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-04 13:54:02 UTC (rev 1363)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-04 13:55:09 UTC (rev 1364)
@@ -0,0 +1,166 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright ? 20010 Michael Jahn
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published byp
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import os
+from urllib import urlcleanup, FancyURLopener, urlretrieve
+import gtk
+import gutils
+from plugins.extensions import GriffithExtensionBase as Base
+from edit import update_image_from_memory
+from movie import Progress, Retriever
+import logging
+log = logging.getLogger('Griffith')
+
+
+class GriffithExtension(Base):
+    name = 'MoviePosterDB'
+    description = _('Fetch posters from MoviePosterDB.com')
+    author = 'Michael Jahn'
+    email = 'mike at griffith.cc'
+    version = 1
+    api = 1
+    enabled = False # disabled by default
+
+    preferences = {}
+    toolbar_icon = 'gtk-network'
+
+    baseurltitle = 'http://www.movieposterdb.com/embed.inc.php?movie_title=%s'
+    baseurltitleyear = 'http://www.movieposterdb.com/embed.inc.php?movie_title=%s[%s]'
+
+    progress = None
+    encode = 'iso8859-1'
+
+    def toolbar_icon_clicked(self, widget, movie):
+        log.info('fetching poster from MoviePosterDB.com...')
+        self.movie = movie
+
+        # try to get an url to the large version of a poster for the movie
+        # (requests are in the order:
+        #  original title + year, original title only, title + year, title only)
+        try:
+            largeurl = None
+            result = False
+            self.encode = 'iso8859-1'
+            if movie.o_title:
+                if movie.year:
+                    url = self.baseurltitleyear % (movie.o_title, movie.year)
+                    result = self.search(url, self.widgets['window'])
+                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
+                if not result or not largeurl:
+                    url = self.baseurltitle % movie.o_title
+                    result = self.search(url, self.widgets['window'])
+                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
+            if not result or not largeurl and movie.title and not movie.title == movie.o_title:
+                if movie.year:
+                    url = self.baseurltitleyear % (movie.title, movie.year)
+                    result = self.search(url, self.widgets['window'])
+                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
+                if not result or not largeurl:
+                    url = self.baseurltitle % movie.title
+                    result = self.search(url, self.widgets['window'])
+                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
+        except:
+            log.exception('')
+            gutils.warning(_('No posters found for this movie.'))
+            return
+
+        if not result or not largeurl:
+            gutils.warning(_('No posters found for this movie.'))
+            return
+
+        # got the url for a large poster, fetch the data, show preview and update the
+        # movie entry if the user want it
+        self.encode = None
+        if not self.search(largeurl, self.widgets['window']):
+            gutils.warning(_('No posters found for this movie.'))
+            return
+
+        if self.show_preview():
+            update_image_from_memory(self.app, movie.number, self.data)
+
+    def show_preview(self):
+        loader = gtk.gdk.PixbufLoader()
+        loader.write(self.data, len(self.data))
+        loader.close()
+        handler = self.widgets['big_poster'].set_from_pixbuf(loader.get_pixbuf())
+        self.widgets['poster_window'].show()
+        self.widgets['poster_window'].move(0, 0)
+        result = gutils.question(_("Do you want to use this poster instead?"), self.widgets['window'])
+        self.widgets['poster_window'].hide()
+        return result
+
+    def search(self, url, parent_window):
+        try:
+            #
+            # initialize the progress dialog once for the following search process
+            #
+            if self.progress is None:
+                self.progress = Progress(parent_window)
+            self.progress.set_data(parent_window, _("Searching"), _("Wait a moment"), True)
+            #
+            # call the plugin specific search method
+            #
+            return self._search(url, parent_window)
+        finally:
+            # dont forget to hide the progress dialog
+            if self.progress:
+                self.progress.hide()
+
+    def _search(self, url, parent_window):
+        result = False
+        url = url.replace(' ', '%20')
+        try:
+            if self.encode:
+                url = url.encode(self.encode)
+            else:
+                url = url.encode('iso8859-1')
+        except UnicodeEncodeError:
+            url = url.encode('utf-8')
+        log.debug('Using url <%s>' % url)
+        self.progress.set_data(parent_window, _("Searching"), _("Wait a moment"), False)
+        retriever = Retriever(url, parent_window, self.progress)
+        retriever.start()
+        while retriever.isAlive():
+            self.progress.pulse()
+            if self.progress.status:
+                retriever.join()
+            while gtk.events_pending():
+                gtk.main_iteration()
+        try:
+            if retriever.html:
+                ifile = file(retriever.html[0], 'rb')
+                try:
+                    self.data = ifile.read()
+                finally:
+                    ifile.close()
+                # check for gzip compressed pages before decoding to unicode
+                if len(self.data) > 2 and self.data[0:2] == '\037\213':
+                    self.data = gutils.decompress(self.data)
+                if self.encode:
+                    self.data = self.data.decode(self.encode, 'replace')
+                result = True
+                os.remove(retriever.html[0])
+        except IOError:
+            log.exception('')
+        urlcleanup()
+        return result


Property changes on: trunk/lib/plugins/extensions/ge_movieposterdb.py
___________________________________________________________________
Name: svn:keywords
   + Id



From mikej06 at mail.berlios.de  Mon Jan  4 21:01:48 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Mon, 4 Jan 2010 21:01:48 +0100
Subject: [Griffith-svn] r1365 - trunk/lib/plugins/extensions
Message-ID: <201001042001.o04K1m85015926@sheep.berlios.de>

Author: mikej06
Date: 2010-01-04 21:01:33 +0100 (Mon, 04 Jan 2010)
New Revision: 1365

Modified:
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
back from the future ;)

Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-04 13:55:09 UTC (rev 1364)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-04 20:01:33 UTC (rev 1365)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright ? 20010 Michael Jahn
+# Copyright ? 2010 Michael Jahn
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published byp



From piotrek at mail.berlios.de  Mon Jan  4 21:25:58 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 21:25:58 +0100
Subject: [Griffith-svn] r1366 - trunk/lib/plugins/extensions
Message-ID: <201001042025.o04KPwci018915@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 21:25:58 +0100 (Mon, 04 Jan 2010)
New Revision: 1366

Modified:
   trunk/lib/plugins/extensions/ge_amazon.py
Log:
* s/you/your/
* pep8ify


Modified: trunk/lib/plugins/extensions/ge_amazon.py
===================================================================
--- trunk/lib/plugins/extensions/ge_amazon.py	2010-01-04 20:01:33 UTC (rev 1365)
+++ trunk/lib/plugins/extensions/ge_amazon.py	2010-01-04 20:25:58 UTC (rev 1366)
@@ -38,6 +38,7 @@
 
 log = logging.getLogger('Griffith')
 
+
 class GriffithExtension(Base):
     name = 'Amazon'
     description = _('Fetch from Amazon')
@@ -68,7 +69,7 @@
         secretkey = self.get_config_value('secretkey')
 
         if not accesskey or not secretkey:
-            gutils.error(self.app, _('Please configure you Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+            gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
             return False
 
         if movie is None:
@@ -181,7 +182,7 @@
             try:
                 os.remove(file_to_copy)
             except:
-                log.error("no permission for %s"%file_to_copy)
+                log.error("no permission for %s" % file_to_copy)
 
         if not canceled:
             if os.path.isfile(file_to_copy):
@@ -189,9 +190,9 @@
                 try:
                     im = Image.open(file_to_copy)
                 except IOError:
-                    log.warn("failed to identify %s"%file_to_copy)
+                    log.warn("failed to identify %s" % file_to_copy)
 
-                if im and im.size == (1,1):
+                if im and im.size == (1, 1):
                     url = FancyURLopener().open("http://www.amazon.com/gp/product/images/%s" % item.ASIN).read()
                     if url.find('no-img-sm._V47056216_.gif') > 0:
                         log.warn('No image available')
@@ -220,7 +221,7 @@
                 handler = self.widgets['big_poster'].set_from_file(file_to_copy)
 
                 self.widgets['poster_window'].show()
-                self.widgets['poster_window'].move(0,0)
+                self.widgets['poster_window'].move(0, 0)
                 if gutils.question(_("Do you want to use this poster instead?"), self.widgets['window']):
                     return file_to_copy
                 else:



From piotrek at mail.berlios.de  Mon Jan  4 21:33:03 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 21:33:03 +0100
Subject: [Griffith-svn] r1367 - trunk/lib/plugins/movie
Message-ID: <201001042033.o04KX3x3019471@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 21:33:03 +0100 (Mon, 04 Jan 2010)
New Revision: 1367

Modified:
   trunk/lib/plugins/movie/PluginMovieAmazon.py
Log:
s/you/your/


Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-04 20:25:58 UTC (rev 1366)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-04 20:33:03 UTC (rev 1367)
@@ -57,7 +57,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(self.app, _('Please configure you Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 



From piotrek at mail.berlios.de  Mon Jan  4 21:34:31 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 21:34:31 +0100
Subject: [Griffith-svn] r1368 - trunk/lib/plugins/movie
Message-ID: <201001042034.o04KYVEJ019566@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 21:34:31 +0100 (Mon, 04 Jan 2010)
New Revision: 1368

Modified:
   trunk/lib/plugins/movie/PluginMovieAmazon.py
Log:
s/you/your (last time ;)


Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-04 20:33:03 UTC (rev 1367)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-04 20:34:31 UTC (rev 1368)
@@ -252,7 +252,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(self.app, _('Please configure you Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 



From piotrek at mail.berlios.de  Mon Jan  4 22:01:02 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 22:01:02 +0100
Subject: [Griffith-svn] r1369 - in trunk: . i18n i18n/hr i18n/hr/LC_MESSAGES
Message-ID: <201001042101.o04L12A2022353@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 22:01:02 +0100 (Mon, 04 Jan 2010)
New Revision: 1369

Added:
   trunk/i18n/hr/
   trunk/i18n/hr/LC_MESSAGES/
   trunk/i18n/hr/LC_MESSAGES/griffith.mo
Modified:
   trunk/ChangeLog
   trunk/TRANSLATORS
   trunk/winsetup.py
Log:
Add Croatian translation (thanks to Davor I and nafterburner)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-04 20:34:31 UTC (rev 1368)
+++ trunk/ChangeLog	2010-01-04 21:01:02 UTC (rev 1369)
@@ -2,9 +2,12 @@
 
 Griffith ChangeLog
 ------------------
-(c) 2005-2009  Vasco Nunes, Piotr O?arowski
+(c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-04  Piotr O?arowski
+	* Add Croatian translation (thanks to Davor I and nafterburner)
+
 2010-01-04  Michael Jahn
 	* add MoviePosterDB extension (supports fetching posters)
 

Modified: trunk/TRANSLATORS
===================================================================
--- trunk/TRANSLATORS	2010-01-04 20:34:31 UTC (rev 1368)
+++ trunk/TRANSLATORS	2010-01-04 21:01:02 UTC (rev 1369)
@@ -11,6 +11,10 @@
 * Catalan
 el_libre <el.libre at gmail.com>
 
+* Croatian
+Davor I
+nafterburner <nafterburner at gmail.com>
+
 * Czech
 Blondak <blondak at neser.cz>
 Ondra 'Kepi' Kudl?k <kepi at igloonet.cz>

Added: trunk/i18n/hr/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)


Property changes on: trunk/i18n/hr/LC_MESSAGES/griffith.mo
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/winsetup.py
===================================================================
--- trunk/winsetup.py	2010-01-04 20:34:31 UTC (rev 1368)
+++ trunk/winsetup.py	2010-01-04 21:01:02 UTC (rev 1369)
@@ -3,7 +3,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2007 Vasco Nunes
+# Copyright ? 2005-2010 Vasco Nunes, Piotr O?arowski
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
@@ -52,60 +52,60 @@
 }
 
 setup(
-    name = "Griffith",
-    version = "0.10",
-    description = 'Griffith - A film manager',
-    author = 'Vasco Nunes/Piotr Ozarowski',
-    author_email = 'griffith-private at lists.berlios.de',
-    url = 'http://www.griffith.cc/',
-    license = 'GPL',
-    windows = [
+    name="Griffith",
+    version="0.11",
+    description='Griffith - A film manager',
+    author='Vasco Nunes/Piotr Ozarowski',
+    author_email='griffith-private at lists.berlios.de',
+    url='http://www.griffith.cc/',
+    license='GPL',
+    windows=[
         {
             "script": "griffith",
-            "icon_resources": [(1, "images\griffith.ico")]
-        }],
-    options = opts,
+            "icon_resources": [(1, "images\griffith.ico")]}],
+    options=opts,
         data_files=[
         ("images", glob.glob("data\\*.png")),
         ("images/export_templates", glob.glob("export_templates\\*.dtd")),
-        ("images/export_templates/csv",    glob.glob("export_templates\\csv\\*.*")),
-        ("images/export_templates/xml",    glob.glob("export_templates\\xml\\*.*")),
+        ("images/export_templates/csv", glob.glob("export_templates\\csv\\*.*")),
+        ("images/export_templates/xml", glob.glob("export_templates\\xml\\*.*")),
         ("images/export_templates/latex", glob.glob("export_templates\\latex\\*.*")),
         ("images/export_templates/html_table", glob.glob("export_templates\\html_table\\*.*")),
-        ("images/export_templates/html_tables",    glob.glob("export_templates\\html_tables\\*.*")),
+        ("images/export_templates/html_tables", glob.glob("export_templates\\html_tables\\*.*")),
         ("glade", glob.glob("glade\\*.*")),
         ("i18n/bg/LC_MESSAGES", glob.glob("i18n\\bg\\LC_MESSAGES\\*.mo")),
-        ("i18n/ca/LC_MESSAGES",    glob.glob("i18n\\ca\\LC_MESSAGES\\*.mo")),
-        ("i18n/cs/LC_MESSAGES",    glob.glob("i18n\\cs\\LC_MESSAGES\\*.mo")),
-        ("i18n/da/LC_MESSAGES",    glob.glob("i18n\\da\\LC_MESSAGES\\*.mo")),
-        ("i18n/de/LC_MESSAGES",    glob.glob("i18n\\de\\LC_MESSAGES\\*.mo")),
-        ("i18n/el/LC_MESSAGES",    glob.glob("i18n\\el\\LC_MESSAGES\\*.mo")),
+        ("i18n/ca/LC_MESSAGES", glob.glob("i18n\\ca\\LC_MESSAGES\\*.mo")),
+        ("i18n/cs/LC_MESSAGES", glob.glob("i18n\\cs\\LC_MESSAGES\\*.mo")),
+        ("i18n/da/LC_MESSAGES", glob.glob("i18n\\da\\LC_MESSAGES\\*.mo")),
+        ("i18n/de/LC_MESSAGES", glob.glob("i18n\\de\\LC_MESSAGES\\*.mo")),
+        ("i18n/el/LC_MESSAGES", glob.glob("i18n\\el\\LC_MESSAGES\\*.mo")),
         ("i18n/en_GB/LC_MESSAGES", glob.glob("i18n\\en_GB\\LC_MESSAGES\\*.mo")),
-        ("i18n/es/LC_MESSAGES",    glob.glob("i18n\\es\\LC_MESSAGES\\*.mo")),
-        ("i18n/et/LC_MESSAGES",    glob.glob("i18n\\et\\LC_MESSAGES\\*.mo")),
-        ("i18n/fa/LC_MESSAGES",    glob.glob("i18n\\fa\\LC_MESSAGES\\*.mo")),
-        ("i18n/fi/LC_MESSAGES",    glob.glob("i18n\\fi\\LC_MESSAGES\\*.mo")),
-        ("i18n/fr/LC_MESSAGES",    glob.glob("i18n\\fr\\LC_MESSAGES\\*.mo")),
-        ("i18n/hu/LC_MESSAGES",    glob.glob("i18n\\hu\\LC_MESSAGES\\*.mo")),
-        ("i18n/id/LC_MESSAGES",    glob.glob("i18n\\id\\LC_MESSAGES\\*.mo")),
-        ("i18n/it/LC_MESSAGES",    glob.glob("i18n\\it\\LC_MESSAGES\\*.mo")),
-        ("i18n/ja/LC_MESSAGES",    glob.glob("i18n\\ja\\LC_MESSAGES\\*.mo")),
-        ("i18n/ko/LC_MESSAGES",    glob.glob("i18n\\ko\\LC_MESSAGES\\*.mo")),
-        ("i18n/lv/LC_MESSAGES",    glob.glob("i18n\\lv\\LC_MESSAGES\\*.mo")),
-        ("i18n/nb/LC_MESSAGES",    glob.glob("i18n\\nb\\LC_MESSAGES\\*.mo")),
-        ("i18n/nds/LC_MESSAGES",    glob.glob("i18n\\nds\\LC_MESSAGES\\*.mo")),
-        ("i18n/nl/LC_MESSAGES",    glob.glob("i18n\\nl\\LC_MESSAGES\\*.mo")),
-        ("i18n/oc/LC_MESSAGES",    glob.glob("i18n\\oc\\LC_MESSAGES\\*.mo")),
-        ("i18n/pl/LC_MESSAGES",    glob.glob("i18n\\pl\\LC_MESSAGES\\*.mo")),
-        ("i18n/ps/LC_MESSAGES",    glob.glob("i18n\\ps\\LC_MESSAGES\\*.mo")),
-        ("i18n/pt/LC_MESSAGES",    glob.glob("i18n\\pt\\LC_MESSAGES\\*.mo")),
+        ("i18n/es/LC_MESSAGES", glob.glob("i18n\\es\\LC_MESSAGES\\*.mo")),
+        ("i18n/et/LC_MESSAGES", glob.glob("i18n\\et\\LC_MESSAGES\\*.mo")),
+        ("i18n/fa/LC_MESSAGES", glob.glob("i18n\\fa\\LC_MESSAGES\\*.mo")),
+        ("i18n/fi/LC_MESSAGES", glob.glob("i18n\\fi\\LC_MESSAGES\\*.mo")),
+        ("i18n/fr/LC_MESSAGES", glob.glob("i18n\\fr\\LC_MESSAGES\\*.mo")),
+        ("i18n/hu/LC_MESSAGES", glob.glob("i18n\\hu\\LC_MESSAGES\\*.mo")),
+        ("i18n/hr/LC_MESSAGES", glob.glob("i18n\\hr\\LC_MESSAGES\\*.mo")),
+        ("i18n/id/LC_MESSAGES", glob.glob("i18n\\id\\LC_MESSAGES\\*.mo")),
+        ("i18n/it/LC_MESSAGES", glob.glob("i18n\\it\\LC_MESSAGES\\*.mo")),
+        ("i18n/ja/LC_MESSAGES", glob.glob("i18n\\ja\\LC_MESSAGES\\*.mo")),
+        ("i18n/ko/LC_MESSAGES", glob.glob("i18n\\ko\\LC_MESSAGES\\*.mo")),
+        ("i18n/lv/LC_MESSAGES", glob.glob("i18n\\lv\\LC_MESSAGES\\*.mo")),
+        ("i18n/nb/LC_MESSAGES", glob.glob("i18n\\nb\\LC_MESSAGES\\*.mo")),
+        ("i18n/nds/LC_MESSAGES", glob.glob("i18n\\nds\\LC_MESSAGES\\*.mo")),
+        ("i18n/nl/LC_MESSAGES", glob.glob("i18n\\nl\\LC_MESSAGES\\*.mo")),
+        ("i18n/oc/LC_MESSAGES", glob.glob("i18n\\oc\\LC_MESSAGES\\*.mo")),
+        ("i18n/pl/LC_MESSAGES", glob.glob("i18n\\pl\\LC_MESSAGES\\*.mo")),
+        ("i18n/ps/LC_MESSAGES", glob.glob("i18n\\ps\\LC_MESSAGES\\*.mo")),
+        ("i18n/pt/LC_MESSAGES", glob.glob("i18n\\pt\\LC_MESSAGES\\*.mo")),
         ("i18n/pt_BR/LC_MESSAGES", glob.glob("i18n\\pt_BR\\LC_MESSAGES\\*.mo")),
-        ("i18n/ru/LC_MESSAGES",    glob.glob("i18n\\ru\\LC_MESSAGES\\*.mo")),
-        ("i18n/sk/LC_MESSAGES",    glob.glob("i18n\\sk\\LC_MESSAGES\\*.mo")),
-        ("i18n/sr/LC_MESSAGES",    glob.glob("i18n\\sr\\LC_MESSAGES\\*.mo")),
-        ("i18n/sv/LC_MESSAGES",    glob.glob("i18n\\sv\\LC_MESSAGES\\*.mo")),
-        ("i18n/tr/LC_MESSAGES",    glob.glob("i18n\\tr\\LC_MESSAGES\\*.mo")),
-        ("i18n/uk/LC_MESSAGES",    glob.glob("i18n\\uk\\LC_MESSAGES\\*.mo")),
+        ("i18n/ru/LC_MESSAGES", glob.glob("i18n\\ru\\LC_MESSAGES\\*.mo")),
+        ("i18n/sk/LC_MESSAGES", glob.glob("i18n\\sk\\LC_MESSAGES\\*.mo")),
+        ("i18n/sr/LC_MESSAGES", glob.glob("i18n\\sr\\LC_MESSAGES\\*.mo")),
+        ("i18n/sv/LC_MESSAGES", glob.glob("i18n\\sv\\LC_MESSAGES\\*.mo")),
+        ("i18n/tr/LC_MESSAGES", glob.glob("i18n\\tr\\LC_MESSAGES\\*.mo")),
+        ("i18n/uk/LC_MESSAGES", glob.glob("i18n\\uk\\LC_MESSAGES\\*.mo")),
         ("i18n/zh_CN/LC_MESSAGES", glob.glob("i18n\\zh_CN\\LC_MESSAGES\\*.mo")),
         ("lib/plugins", glob.glob("lib\\plugins\\*.*")),
         ("lib/plugins/export", glob.glob("lib\\plugins\\export\\*.*")),



From piotrek at mail.berlios.de  Mon Jan  4 22:02:40 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 22:02:40 +0100
Subject: [Griffith-svn] r1370 - in trunk: . po
Message-ID: <201001042102.o04L2euV022560@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 22:02:39 +0100 (Mon, 04 Jan 2010)
New Revision: 1370

Added:
   trunk/po/hr.po
Modified:
   trunk/Makefile
   trunk/po/Makefile
   trunk/winpackage.iss
Log:
cleanups


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2010-01-04 21:01:02 UTC (rev 1369)
+++ trunk/Makefile	2010-01-04 21:02:39 UTC (rev 1370)
@@ -9,7 +9,7 @@
 VERSION=$(shell grep "^pversion" lib/version.py | cut -d \"  -f 2)
 TEMPLATES= $(shell cd export_templates >/dev/null; $(FIND) . -maxdepth 1 -mindepth 1 -type d -name "[^\.svn]*" -print)
 
-.PHONY: help clean freshmeat gnomefiles install
+.PHONY: help clean install
 
 INSTALL ?= install
 MAKE ?= make
@@ -47,8 +47,8 @@
 	@echo "make help	- prints this help"
 	@echo "make dist	- makes a distribution tarball"
 	@echo
-	
 
+
 install:
 	@echo
 	@echo "installing Griffith"
@@ -91,7 +91,7 @@
 	ln -s $(LIBDIR)/griffith $(BINDIR)/griffith
 	chmod +x $(BINDIR)/griffith
 	$(MAKE) -C docs install
-	
+
 uninstall:
 	@echo
 	@echo "uninstalling Griffith"
@@ -115,16 +115,10 @@
 	${RM} -r $(BINDIR)/griffith
 	${RM} -r $(BASHCOMPDIR)/griffith
 	$(MAKE) -C docs uninstall
-	
+
 clean:
 	${FIND} . \( -iname '*\.py[co]' -or -iname '*~' -or -iname '*\.bak' \) -exec ${RM} '{}' \;
-	
-freshmeat:
-	firefox http://freshmeat.net/add-release/54772/ &
 
-gnomefiles:
-	firefox http://www.gnomefiles.org/devs/newversion.php?soft_id=965 &
-	
 dist: clean
 	@tar --exclude=*.svn* --exclude=*.tar* --exclude=debian -cf griffith.tar ./
 	@mkdir $(PACKAGE)-$(VERSION)
@@ -133,5 +127,3 @@
 	@tar -czf $(PACKAGE)-$(VERSION).tar.gz $(PACKAGE)-$(VERSION) && echo File ./$(PACKAGE)-$(VERSION).tar.gz generated successfully
 	@${RM} -r $(PACKAGE)-$(VERSION)
 
-lint:
-	pylint --enable-basic=n --indent-string='\t' griffith lib/*.py

Modified: trunk/po/Makefile
===================================================================
--- trunk/po/Makefile	2010-01-04 21:01:02 UTC (rev 1369)
+++ trunk/po/Makefile	2010-01-04 21:02:39 UTC (rev 1370)
@@ -43,5 +43,6 @@
 	$(RM) $(GLADEHFILES)
 	$(RM) $(POFILES:%.po=../i18n/%/LC_MESSAGES/griffith.mo)
 	$(RM) messages.pot
+	$(RM) *~
 
 .PHONY: update dist

Added: trunk/po/hr.po
===================================================================
--- trunk/po/hr.po	2010-01-04 21:01:02 UTC (rev 1369)
+++ trunk/po/hr.po	2010-01-04 21:02:39 UTC (rev 1370)
@@ -0,0 +1,2541 @@
+# Croatian translation for griffith
+# Copyright (c) 2008 Rosetta Contributors and Canonical Ltd 2008
+# This file is distributed under the same license as the griffith package.
+# FIRST AUTHOR <EMAIL at ADDRESS>, 2008.
+#
+msgid ""
+msgstr ""
+"Project-Id-Version: griffith\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2010-01-04 21:40+0100\n"
+"PO-Revision-Date: 2009-12-08 07:29+0000\n"
+"Last-Translator: nafterburner <nafterburner at gmail.com>\n"
+"Language-Team: Croatian <hr at li.org>\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"X-Launchpad-Export-Date: 2010-01-04 20:36+0000\n"
+"X-Generator: Launchpad (build Unknown)\n"
+
+#: ../griffith:235 ../griffith:1021 ../lib/delete.py:35 ../lib/edit.py:43
+msgid "You have no movies in your database"
+msgstr "Nema filmova u bazi podataka"
+
+#: ../griffith:412
+msgid "You have seen all films in your collection!"
+msgstr "Vidjeli ste sve filmove u svojoj kolekciji!"
+
+#: ../griffith:563 ../griffith:568 ../lib/initialize.py:340
+#: ../lib/initialize.py:759
+msgid "subtitles"
+msgstr "titlovi"
+
+#: ../griffith:610 ../griffith:670 ../griffith:729 ../griffith:787
+#: ../griffith:845 ../griffith:894 ../griffith:943
+msgid ""
+"This item is in use.\n"
+"Operation aborted!"
+msgstr ""
+
+#: ../griffith:993
+msgid ""
+"Are you sure you want to restore?\n"
+"Your current movie collection will be replaced.\n"
+"You can't undo this operation."
+msgstr ""
+
+#: ../griffith:1000
+msgid ""
+"Are you sure you want to mix?\n"
+"Your current movie collection will be mixed with a backup.\n"
+"You can't undo this operation."
+msgstr ""
+
+#: ../griffith:1098
+#, python-format
+msgid ""
+"%s movie(s) in collection. %s movie(s) are shown by the filter. %s movie(s) "
+"loaned. You haven't seen %s movie(s)"
+msgstr ""
+
+#: ../griffith:1309
+msgid ""
+"Are you sure you want to create a new database?\n"
+"You will lose ALL your current data!"
+msgstr ""
+
+#: ../griffith:1311
+msgid ""
+"Last chance!\n"
+"Do you confirm that you want\n"
+"to lose your current data?"
+msgstr ""
+
+#: ../griffith:1467
+msgid ""
+"This is development version of Griffith.\n"
+"Upgrade path from dev. versions may not be provided.\n"
+"Please make sure you have a backup!\n"
+"\n"
+"Do you want to proceed?"
+msgstr ""
+
+#: ../lib/about.py:40
+msgid "Main Authors"
+msgstr "Glavni Autori"
+
+#: ../lib/about.py:42
+msgid "Programmers"
+msgstr "Programeri"
+
+#: ../lib/about.py:45
+msgid "Contributors:"
+msgstr "Doprinjeli:"
+
+#: ../lib/about.py:49
+msgid "Logo, icon and general artwork "
+msgstr ""
+
+#: ../lib/about.py:75
+msgid "See TRANSLATORS file"
+msgstr "Pogledajte TRANSLATORS datoteku"
+
+#: ../lib/about.py:83
+msgid "This program is released under the GNU"
+msgstr "Ovaj program je izdan pod GNU"
+
+#: ../lib/add.py:54 ../glade/griffith.glade.h:27
+msgid "Add a new movie"
+msgstr ""
+
+#: ../lib/add.py:66
+msgid "Edit movie"
+msgstr ""
+
+#: ../lib/add.py:138 ../lib/add.py:728 ../lib/cover.py:182
+#: ../lib/main_treeview.py:501
+msgid " min"
+msgstr " min"
+
+#: ../lib/add.py:147
+msgid "Movie information has been updated"
+msgstr ""
+
+#: ../lib/add.py:279
+msgid "No results"
+msgstr "Nema rezultata"
+
+#: ../lib/add.py:323 ../lib/add.py:659
+msgid ""
+"You should fill the original title\n"
+"or the movie title."
+msgstr ""
+
+#: ../lib/add.py:332
+msgid "Url: "
+msgstr "Url: "
+
+#: ../lib/add.py:333
+msgid "Language: "
+msgstr "Jezik: "
+
+#: ../lib/add.py:665 ../lib/add.py:669
+msgid "Movie with that title already exists, are you sure you want to add?"
+msgstr ""
+
+#: ../lib/advfilter.py:65
+msgid "is equal to"
+msgstr "je jednako"
+
+#: ../lib/advfilter.py:66
+msgid "is not equal to"
+msgstr "nije jednako"
+
+#: ../lib/advfilter.py:67
+msgid "starts with"
+msgstr "po?inje sa"
+
+#: ../lib/advfilter.py:68
+msgid "doesn't start with"
+msgstr ""
+
+#: ../lib/advfilter.py:69
+msgid "contains"
+msgstr "sadr?i"
+
+#: ../lib/advfilter.py:70
+msgid "doesn't contain"
+msgstr "ne sadr?i"
+
+#: ../lib/advfilter.py:71
+msgid "like"
+msgstr "poput"
+
+#: ../lib/advfilter.py:72
+msgid "not like"
+msgstr "ne poput"
+
+#: ../lib/advfilter.py:136 ../lib/advfilter.py:144 ../lib/advfilter.py:163
+msgid "ignore"
+msgstr "# ignorirati"
+
+#: ../lib/advfilter.py:136
+msgid "with"
+msgstr "sa"
+
+#: ../lib/advfilter.py:136
+msgid "without"
+msgstr "bez"
+
+#: ../lib/advfilter.py:136
+msgid "require"
+msgstr "zahtijevati"
+
+#: ../lib/advfilter.py:144
+msgid "in"
+msgstr "u"
+
+#: ../lib/advfilter.py:144
+msgid "not in"
+msgstr "nije u"
+
+#: ../lib/advfilter.py:163
+msgid "loaned to "
+msgstr ""
+
+#: ../lib/advfilter.py:163
+msgid "loan history"
+msgstr ""
+
+#: ../lib/advfilter.py:362
+msgid "Name is empty"
+msgstr "Ime je prazno"
+
+#: ../lib/advfilter.py:377
+msgid "Cannot save search conditions"
+msgstr ""
+
+#: ../lib/advfilter.py:379
+msgid "Search conditions saved"
+msgstr ""
+
+#: ../lib/backup.py:52
+msgid "Save Griffith backup"
+msgstr ""
+
+#: ../lib/backup.py:61 ../lib/plugins/export/__init__.py:162
+#: ../lib/plugins/export/PluginExportCSV.py:61
+#: ../lib/plugins/export/PluginExportiPod.py:105
+#: ../lib/plugins/export/PluginExportPDF.py:82
+#: ../lib/plugins/export/PluginExportXML.py:58
+msgid "File exists. Do you want to overwrite it?"
+msgstr "Datoteka ve? postoji. ?elite li zapisati preko nje?"
+
+#: ../lib/backup.py:71
+msgid "Error creating backup"
+msgstr "Pogre?ka pri izradi sigurnosne kopije"
+
+#: ../lib/backup.py:107
+msgid "Backup has been created"
+msgstr ""
+
+#: ../lib/backup.py:184
+msgid "Restore Griffith backup"
+msgstr ""
+
+#: ../lib/backup.py:199
+msgid "Can't read backup file"
+msgstr ""
+
+#: ../lib/backup.py:270
+msgid "Backup restored"
+msgstr ""
+
+#: ../lib/cover.py:43 ../lib/edit.py:45
+msgid "Select image"
+msgstr "Odaberite sliku"
+
+#: ../lib/cover.py:87 ../lib/cover.py:150
+msgid "Cover generated by Griffith v"
+msgstr ""
+
+#: ../lib/cover.py:89 ../lib/cover.py:152
+#: ../lib/plugins/export/PluginExportHTML.py:648
+#: ../lib/plugins/export/PluginExportPDF.py:184
+msgid "Released Under the GNU/GPL License"
+msgstr ""
+
+#: ../lib/cover.py:177 ../lib/initialize.py:188 ../lib/initialize.py:740
+#: ../lib/plugins/export/PluginExportHTML.py:147
+#: ../lib/plugins/export/PluginExportHTML.py:325 ../glade/griffith.glade.h:104
+msgid "Original Title"
+msgstr "Originalni Naslov"
+
+#: ../lib/cover.py:178 ../lib/initialize.py:195 ../lib/initialize.py:752
+#: ../lib/plugins/export/PluginExportHTML.py:153 ../glade/griffith.glade.h:158
+msgid "Title"
+msgstr "Naslov"
+
+#: ../lib/cover.py:180 ../lib/initialize.py:202 ../lib/initialize.py:730
+#: ../lib/plugins/export/PluginExportHTML.py:138 ../glade/griffith.glade.h:53
+msgid "Director"
+msgstr "Direktor"
+
+#: ../lib/cover.py:182
+msgid "Running Time"
+msgstr ""
+
+#: ../lib/cover.py:183 ../lib/initialize.py:729
+#: ../lib/plugins/export/PluginExportHTML.py:137 ../glade/griffith.glade.h:45
+msgid "Country"
+msgstr "Dr?ava"
+
+#: ../lib/cover.py:184 ../lib/initialize.py:209 ../lib/initialize.py:731
+#: ../lib/plugins/export/PluginExportHTML.py:139
+#: ../lib/plugins/export/PluginExportPDF.py:164 ../glade/griffith.glade.h:69
+msgid "Genre"
+msgstr "?anr"
+
+#: ../lib/dbupgrade.py:35
+msgid "Upgrading database..."
+msgstr ""
+
+#: ../lib/dbupgrade.py:87 ../lib/plugins/movie/PluginMovieE-Pipoca.py:33
+msgid "Brazilian Portuguese"
+msgstr "Brazilski Portugalski"
+
+#: ../lib/dbupgrade.py:88
+msgid "Bulgarian"
+msgstr "Bugarski"
+
+#: ../lib/dbupgrade.py:89
+msgid "Catalan"
+msgstr "Katalonski"
+
+#: ../lib/dbupgrade.py:90 ../lib/plugins/movie/PluginMovieCSFD.py:29
+msgid "Czech"
+msgstr "?e?ki"
+
+#: ../lib/dbupgrade.py:91
+msgid "Danish"
+msgstr "Danski"
+
+#: ../lib/dbupgrade.py:92 ../lib/plugins/movie/PluginMovieMovieMeter.py:32
+msgid "Dutch"
+msgstr "Nizozemski"
+
+#: ../lib/dbupgrade.py:93 ../lib/plugins/movie/PluginMovieAllMovie.py:31
+#: ../lib/plugins/movie/PluginMovieAniDB.py:31
+#: ../lib/plugins/movie/PluginMovieDVDEmpire.py:31
+#: ../lib/plugins/movie/PluginMovieIMDB.py:30
+#: ../lib/plugins/movie/PluginMovieMediadis.py:15
+#: ../lib/plugins/movie/PluginMovieMoviefone.py:15
+msgid "English"
+msgstr "Engleski"
+
+#: ../lib/dbupgrade.py:94
+msgid "Estonian"
+msgstr "Estonski"
+
+#: ../lib/dbupgrade.py:95 ../lib/plugins/movie/PluginMovieAllocine.py:34
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:30
+msgid "French"
+msgstr "Francuski"
+
+#: ../lib/dbupgrade.py:96 ../lib/plugins/movie/PluginMovieDVDPalace.py:32
+#: ../lib/plugins/movie/PluginMovieFilmDb.py:31
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:32
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:30
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:32
+#: ../lib/plugins/movie/PluginMovieOFDb.py:16
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:32
+msgid "German"
+msgstr "Njema?ki"
+
+#: ../lib/dbupgrade.py:97
+msgid "Greek"
+msgstr "Gr?ki"
+
+#: ../lib/dbupgrade.py:98
+msgid "Hungarian"
+msgstr "Ma?arski"
+
+#: ../lib/dbupgrade.py:99
+msgid "Indonesian"
+msgstr "Indonezijski"
+
+#: ../lib/dbupgrade.py:100 ../lib/plugins/movie/PluginMovieCinematografo.py:32
+#: ../lib/plugins/movie/PluginMovieMyMoviesIt.py:33
+msgid "Italian"
+msgstr "Talijanski"
+
+#: ../lib/dbupgrade.py:101
+msgid "Japanese"
+msgstr ""
+
+#: ../lib/dbupgrade.py:102
+msgid "Korean"
+msgstr "Korejski"
+
+#: ../lib/dbupgrade.py:103
+msgid "Norwegian Bokmal"
+msgstr "Norve?ki Bokmal"
+
+#: ../lib/dbupgrade.py:104
+msgid "Occitan"
+msgstr "Okcitanski"
+
+#: ../lib/dbupgrade.py:105
+msgid "Pashto"
+msgstr ""
+
+#: ../lib/dbupgrade.py:106 ../lib/plugins/movie/PluginMovieFDb.py:32
+#: ../lib/plugins/movie/PluginMovieFilmweb.py:30
+#: ../lib/plugins/movie/PluginMovieOnet.py:30
+#: ../lib/plugins/movie/PluginMovieStopklatka.py:30
+#: ../lib/plugins/movie/PluginMovieTanukiAnime.py:30
+#: ../lib/plugins/movie/PluginMovieWP.py:31
+msgid "Polish"
+msgstr "Poljski"
+
+#: ../lib/dbupgrade.py:107 ../lib/plugins/movie/PluginMovie7arte.py:31
+#: ../lib/plugins/movie/PluginMovieCineteka.py:31
+#: ../lib/plugins/movie/PluginMoviePTGate.py:32
+msgid "Portuguese"
+msgstr "Portugalski"
+
+#: ../lib/dbupgrade.py:108
+msgid "Russian"
+msgstr "Ruski"
+
+#: ../lib/dbupgrade.py:109
+msgid "Simplified Chinese"
+msgstr "Pojednostavljeni Kineski"
+
+#: ../lib/dbupgrade.py:110
+msgid "Slovak"
+msgstr "Slova?ki"
+
+#: ../lib/dbupgrade.py:111 ../lib/plugins/movie/PluginMovieCulturalia.py:31
+#: ../lib/plugins/movie/PluginMovieFilmAffinity.py:31
+#: ../lib/plugins/movie/PluginMovieIMDB-es.py:31
+msgid "Spanish"
+msgstr "?panjolski"
+
+#: ../lib/dbupgrade.py:112 ../lib/plugins/movie/PluginMovieFilmtipset.py:32
+msgid "Swedish"
+msgstr "?vedski"
+
+#: ../lib/dbupgrade.py:113
+msgid "Turkish"
+msgstr "Turski"
+
+#: ../lib/dbupgrade.py:114
+msgid "Favourite"
+msgstr "Najdra?e"
+
+#: ../lib/dbupgrade.py:115
+msgid "Buy me"
+msgstr "Kupi me"
+
+#: ../lib/dbupgrade.py:253
+msgid ""
+"Griffith will now convert your database to the new format. This can take "
+"several minutes if you have a large database."
+msgstr ""
+
+#: ../lib/dbupgrade.py:271
+msgid "Old DB conversion: please install pysqlite legacy (v1.0)"
+msgstr ""
+
+#: ../lib/dbupgrade.py:298
+msgid ""
+"Your database is most probably in SQLite2 format, please convert it to "
+"SQLite3"
+msgstr ""
+
+#: ../lib/delete.py:39
+msgid "You can't delete movie while it is loaned."
+msgstr "Ne mo?ete izbrisati film, dok je posu?en."
+
+#: ../lib/delete.py:42
+msgid "Are you sure you want to delete this movie?"
+msgstr ""
+
+#: ../lib/edit.py:64
+msgid "Image is not valid."
+msgstr ""
+
+#: ../lib/edit.py:97 ../lib/edit.py:122
+msgid "Image has been updated"
+msgstr ""
+
+#: ../lib/edit.py:105
+msgid "Are you sure you want to delete this poster?"
+msgstr ""
+
+#: ../lib/gconsole.py:182
+msgid "No movie found"
+msgstr "Nikakav film nije prona?en"
+
+#: ../lib/gemail.py:38
+msgid "Connection timed out"
+msgstr "Veza je istekla"
+
+#: ../lib/gemail.py:49 ../lib/gemail.py:59
+#, python-format
+msgid "Error sending e-mail: %s"
+msgstr ""
+
+#: ../lib/gemail.py:49
+msgid "login failure"
+msgstr ""
+
+#: ../lib/gemail.py:56
+msgid "E-mail sent sucessfuly"
+msgstr ""
+
+#: ../lib/gemail.py:76
+msgid "Movie loan reminder"
+msgstr "Podsjetnik posu?enog filma"
+
+#: ../lib/gemail.py:76
+#, python-format
+msgid ""
+"Hi, %s!\n"
+"\n"
+"Just to remind you that I'm really needing the following movie I have loaned "
+"to you recently:\n"
+"\n"
+"%s (%s)\n"
+"\n"
+"Loaned on %s"
+msgstr ""
+
+#: ../lib/gemail.py:80
+msgid "Mail could not be sent. Please check e-mail preferences."
+msgstr ""
+
+#: ../lib/gemail.py:82
+msgid "This person has no e-mail address defined."
+msgstr "Ta osoba nema definirane e-mail adrese."
+
+#: ../lib/gutils.py:314
+msgid "Images"
+msgstr "Slike"
+
+#: ../lib/gutils.py:325
+msgid "backups"
+msgstr "sigurnosne kopije"
+
+#: ../lib/gutils.py:331 ../lib/plugins/imp/__init__.py:370
+msgid "All files"
+msgstr "Sve datoteke"
+
+#: ../lib/initialize.py:175
+msgid "No."
+msgstr ""
+
+#: ../lib/initialize.py:182 ../lib/initialize.py:732
+#: ../lib/plugins/export/PluginExportHTML.py:140 ../glade/griffith.glade.h:75
+msgid "Image"
+msgstr "Slika"
+
+#: ../lib/initialize.py:216 ../lib/initialize.py:748
+#: ../lib/plugins/export/PluginExportHTML.py:152 ../glade/griffith.glade.h:137
+msgid "Seen it"
+msgstr ""
+
+#: ../lib/initialize.py:224 ../lib/initialize.py:756
+#: ../lib/plugins/export/PluginExportHTML.py:154 ../glade/griffith.glade.h:171
+msgid "Year"
+msgstr "Godina"
+
+#: ../lib/initialize.py:233 ../lib/initialize.py:746
+#: ../lib/plugins/export/PluginExportHTML.py:150 ../glade/griffith.glade.h:131
+msgid "Runtime"
+msgstr ""
+
+#: ../lib/initialize.py:242 ../lib/initialize.py:744
+#: ../lib/plugins/export/PluginExportHTML.py:149 ../glade/griffith.glade.h:119
+msgid "Rating"
+msgstr "Rejting"
+
+#: ../lib/initialize.py:295
+msgid "Loan Date"
+msgstr "Datum kad je Posu?en"
+
+#: ../lib/initialize.py:301
+msgid "Return Date"
+msgstr "Datum kad je potrebno Vratiti"
+
+#: ../lib/initialize.py:306
+msgid "Loaned To"
+msgstr "Posu?eno"
+
+#: ../lib/initialize.py:326 ../lib/plugins/movie/PluginMovieIMDB-de.py:207
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:374
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:419
+#: ../lib/plugins/movie/PluginMovieIMDB.py:162
+#: ../lib/plugins/movie/PluginMovieIMDB.py:337
+msgid "Language"
+msgstr "Jezik"
+
+#: ../lib/initialize.py:338 ../lib/initialize.py:759
+msgid "lector"
+msgstr "lektor"
+
+#: ../lib/initialize.py:339 ../lib/initialize.py:759
+msgid "dubbing"
+msgstr "snimanje"
+
+#: ../lib/initialize.py:341 ../lib/initialize.py:759
+msgid "commentary"
+msgstr "komentar"
+
+#: ../lib/initialize.py:348 ../glade/griffith.glade.h:161
+msgid "Type"
+msgstr "Tip"
+
+#: ../lib/initialize.py:363
+msgid "Codec"
+msgstr ""
+
+#: ../lib/initialize.py:378
+msgid "Channels"
+msgstr "Kanali"
+
+#: ../lib/initialize.py:393
+msgid "Subtitle format"
+msgstr "Format podnaslova"
+
+#: ../lib/initialize.py:546
+msgid "enable this extension"
+msgstr ""
+
+#: ../lib/initialize.py:637 ../glade/griffith.glade.h:96
+msgid "Name"
+msgstr "Ime"
+
+#: ../lib/initialize.py:643 ../glade/exporthtml.glade.h:15
+#: ../glade/griffith.glade.h:55 ../glade/import.glade.h:5
+msgid "E-mail"
+msgstr "E-mail"
+
+#: ../lib/initialize.py:692
+msgid "Last added"
+msgstr "Posljednje dodano"
+
+#: ../lib/initialize.py:722 ../glade/griffith.glade.h:34
+msgid "Barcode"
+msgstr ""
+
+#: ../lib/initialize.py:723 ../lib/plugins/export/PluginExportHTML.py:135
+#: ../lib/plugins/export/PluginExportPDF.py:170 ../glade/griffith.glade.h:37
+msgid "Cast"
+msgstr "Glumci"
+
+#: ../lib/initialize.py:724 ../glade/griffith.glade.h:36
+msgid "Cameraman"
+msgstr "Kameraman"
+
+#: ../lib/initialize.py:725 ../lib/plugins/export/PluginExportHTML.py:136
+#: ../glade/griffith.glade.h:39
+msgid "Classification"
+msgstr "Klasifikacija"
+
+#: ../lib/initialize.py:726 ../lib/plugins/export/PluginExportHTML.py:163
+#: ../glade/griffith.glade.h:42
+msgid "Collection"
+msgstr "Kolekcija"
+
+#: ../lib/initialize.py:727 ../lib/initialize.py:758
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:211
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:376
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:421
+#: ../lib/plugins/movie/PluginMovieIMDB.py:166
+#: ../lib/plugins/movie/PluginMovieIMDB.py:339 ../glade/griffith.glade.h:43
+msgid "Color"
+msgstr "Boja"
+
+#: ../lib/initialize.py:728 ../glade/griffith.glade.h:44
+msgid "Condition"
+msgstr "Uvjet"
+
+#: ../lib/initialize.py:733 ../glade/griffith.glade.h:79
+msgid "Layers"
+msgstr "Slojevi"
+
+#: ../lib/initialize.py:734 ../lib/plugins/export/PluginExportHTML.py:144
+msgid "Loaned"
+msgstr "Pose?eno"
+
+#: ../lib/initialize.py:735 ../lib/plugins/export/PluginExportHTML.py:145
+#: ../glade/griffith.glade.h:54
+msgid "Discs"
+msgstr "Diskovi"
+
+#: ../lib/initialize.py:736 ../glade/griffith.glade.h:91
+msgid "Medium"
+msgstr "Srednje"
+
+#: ../lib/initialize.py:737 ../lib/plugins/export/PluginExportHTML.py:155
+#: ../glade/griffith.glade.h:100
+msgid "Notes"
+msgstr "Bilje?ke"
+
+#: ../lib/initialize.py:738 ../lib/plugins/export/PluginExportHTML.py:146
+#: ../glade/griffith.glade.h:101
+msgid "Number"
+msgstr "Broj"
+
+#: ../lib/initialize.py:739 ../lib/plugins/export/PluginExportHTML.py:141
+#: ../glade/griffith.glade.h:102
+msgid "Official site"
+msgstr "Slu?bene stranice"
+
+#: ../lib/initialize.py:741 ../lib/plugins/export/PluginExportHTML.py:148
+#: ../glade/griffith.glade.h:112
+msgid "Plot"
+msgstr ""
+
+#: ../lib/initialize.py:742
+msgid "Poster"
+msgstr ""
+
+#: ../lib/initialize.py:743 ../glade/griffith.glade.h:33
+msgid "Aspect ratio"
+msgstr "Omjer slike"
+
+#: ../lib/initialize.py:745 ../glade/griffith.glade.h:121
+msgid "Region"
+msgstr "Regija"
+
+#: ../lib/initialize.py:747 ../glade/griffith.glade.h:135
+msgid "Screenplay"
+msgstr "Scenarij"
+
+#: ../lib/initialize.py:749 ../lib/plugins/export/PluginExportHTML.py:142
+#: ../glade/griffith.glade.h:147
+msgid "Site"
+msgstr ""
+
+#: ../lib/initialize.py:750 ../lib/plugins/export/PluginExportHTML.py:151
+#: ../glade/griffith.glade.h:153
+msgid "Studio"
+msgstr "Studio"
+
+#: ../lib/initialize.py:751 ../glade/griffith.glade.h:155
+msgid "Tags"
+msgstr ""
+
+#: ../lib/initialize.py:753 ../lib/plugins/export/PluginExportHTML.py:143
+#: ../glade/griffith.glade.h:160
+msgid "Trailer"
+msgstr "Trailer"
+
+#: ../lib/initialize.py:754 ../lib/plugins/export/PluginExportHTML.py:166
+#: ../glade/griffith.glade.h:166
+msgid "Video codec"
+msgstr ""
+
+#: ../lib/initialize.py:755 ../lib/plugins/export/PluginExportHTML.py:164
+#: ../glade/griffith.glade.h:169
+msgid "Volume"
+msgstr "Ja?ina zvuka"
+
+#: ../lib/initialize.py:757 ../lib/initialize.py:758 ../lib/initialize.py:760
+#: ../lib/initialize.py:1003 ../lib/initialize.py:1004
+#: ../lib/initialize.py:1035 ../lib/initialize.py:1036
+msgid "N/A"
+msgstr "Nije Dostupno"
+
+#: ../lib/initialize.py:757
+msgid "Damaged"
+msgstr "O?te?eno"
+
+#: ../lib/initialize.py:757
+msgid "Poor"
+msgstr "Slabo"
+
+#: ../lib/initialize.py:757
+msgid "Fair"
+msgstr "Po?teno"
+
+#: ../lib/initialize.py:757
+msgid "Good"
+msgstr "Dobro"
+
+#: ../lib/initialize.py:757
+msgid "Excellent"
+msgstr "Odli?no"
+
+#: ../lib/initialize.py:758
+msgid "Black and White"
+msgstr "Crno i Bijelo"
+
+#: ../lib/initialize.py:758
+msgid "Mixed"
+msgstr "Mje?ovito"
+
+#: ../lib/initialize.py:760
+msgid "Single Side, Single Layer"
+msgstr ""
+
+#: ../lib/initialize.py:760
+msgid "Single Side, Dual Layer"
+msgstr ""
+
+#: ../lib/initialize.py:760
+msgid "Dual Side, Single Layer"
+msgstr ""
+
+#: ../lib/initialize.py:760
+msgid "Dual Side, Dual Layer"
+msgstr ""
+
+#: ../lib/initialize.py:762
+msgid "Region 0 (No Region Coding)"
+msgstr "Regija 0 (Nema Regijalnog Kodiranja)"
+
+#: ../lib/initialize.py:763
+msgid "Region 1 (United States of America, Canada)"
+msgstr "Regija 1 (Sjedinjene Ameri?ke Dr?ave, Kanada)"
+
+#: ../lib/initialize.py:764
+msgid "Region 2 (Europe, Egypt, Arabia, Japan and South Africa)"
+msgstr ""
+
+#: ../lib/initialize.py:765
+msgid "Region 3 (Korea, Thailand, Vietnam, Borneo and Indonesia)"
+msgstr "Regija 3 (Koreja, Tajland, Vijetnam, Indonezija i Borneo)"
+
+#: ../lib/initialize.py:766
+msgid "Region 4 (Australia and New Zealand, Mexico and South America)"
+msgstr ""
+
+#: ../lib/initialize.py:767
+msgid "Region 5 (India, Africa, Russia and former USSR countries)"
+msgstr "Regija 5 (Indija, Afrika, Rusija i zemlje biv?eg SSSR-a)"
+
+#: ../lib/initialize.py:768
+msgid "Region 6 (Popular Republic of China)"
+msgstr "Regija 6 (Popularna Republika Kina)"
+
+#: ../lib/initialize.py:769
+msgid "Region 7 (Reserved for Unspecified Special Use)"
+msgstr "Regija 7 (Rezervirano za Neodre?ene posebne namjene)"
+
+#: ../lib/initialize.py:770
+msgid "Region 8 (Airlines/Cruise Ships)"
+msgstr ""
+
+#: ../lib/initialize.py:809
+msgid "Dictionary not available. Spellcheck will be disabled. \n"
+msgstr ""
+
+#: ../lib/loan.py:44
+msgid "No person is defined yet."
+msgstr "Nijedna osoba nije jo? definirana."
+
+#: ../lib/loan.py:73
+msgid "Do you want to loan whole collection?"
+msgstr "?elite li posuditi cijelu kolekciju?"
+
+#: ../lib/loan.py:84
+msgid ""
+"Collection contains loaned movie.\n"
+"Loan aborted!"
+msgstr ""
+"Kolekcija sadr?i posu?en film.\n"
+"Posudba prekinuta!"
+
+#: ../lib/loan.py:89
+msgid "Movie loaned"
+msgstr "Film posu?en"
+
+#: ../lib/main_treeview.py:276
+#, python-format
+msgid "This movie has been loaned to %s on %s"
+msgstr ""
+
+#: ../lib/main_treeview.py:287
+msgid "Movie not loaned"
+msgstr "Film nije posu?en"
+
+#: ../lib/movie.py:135 ../lib/movie.py:155
+#: ../lib/plugins/movie/PluginMovieMovieMeter.py:88
+msgid "Fetching data"
+msgstr ""
+
+#: ../lib/movie.py:135 ../lib/movie.py:155 ../lib/movie.py:199
+#: ../lib/movie.py:299 ../lib/movie.py:320
+#: ../lib/plugins/movie/PluginMovieMovieMeter.py:88
+#: ../lib/plugins/movie/PluginMovieMovieMeter.py:188
+msgid "Wait a moment"
+msgstr "Pri?ekajte trenutak"
+
+#: ../lib/movie.py:199
+msgid "Fetching poster"
+msgstr ""
+
+#: ../lib/movie.py:299 ../lib/movie.py:320
+#: ../lib/plugins/movie/PluginMovieMovieMeter.py:188
+msgid "Searching"
+msgstr "Pretra?ivanje"
+
+#: ../lib/movie.py:366
+msgid "Connection error"
+msgstr ""
+
+#: ../lib/movie.py:414
+msgid "Cancel"
+msgstr "Otka?i"
+
+#: ../lib/people.py:74
+msgid "You should fill the person name"
+msgstr "Trebali bi ispuniti ime osobe"
+
+#: ../lib/people.py:114
+msgid "Record updated"
+msgstr ""
+
+#: ../lib/people.py:135
+msgid "This person has loaned films from you. Return them first."
+msgstr ""
+
+#: ../lib/people.py:139
+msgid ""
+"This person has data in the loan history. This data will be erased if you "
+"continue."
+msgstr ""
+
+#: ../lib/people.py:141
+#, python-format
+msgid ""
+"%s\n"
+"Are you sure you want to delete this person?"
+msgstr ""
+"%s\n"
+"Jeste li sigurni da ?elite izbrisati ovu osobu?"
+
+#: ../lib/sql.py:102
+msgid ""
+"Cannot connect to database.\n"
+"Falling back to SQLite."
+msgstr ""
+
+#: ../lib/sql.py:102
+msgid "Please check debug output for more informations."
+msgstr ""
+
+#: ../lib/sql.py:131
+msgid "This database requires newer version of Griffith."
+msgstr ""
+
+#: ../lib/version.py:29
+msgid "Griffith is a film collection manager."
+msgstr ""
+
+#: ../lib/view.py:28
+msgid "Filter activated. Showing only not seen movies."
+msgstr ""
+
+#: ../lib/view.py:32
+msgid "Filter activated. Showing only loaned movies."
+msgstr ""
+
+#: ../lib/view.py:42
+#, python-format
+msgid "Filter activated. Showing only movies from volume: %s"
+msgstr ""
+
+#: ../lib/view.py:49
+#, python-format
+msgid "Filter activated. Showing only movies from collection: %s"
+msgstr ""
+
+#: ../lib/widgets.py:363
+msgid ""
+"Define here the PDF reader you want to use within Griffith. Popular choices "
+"are xpdf, gpdf, evince or kpdf. Make sure you have this program installed "
+"and working first."
+msgstr ""
+
+#: ../lib/widgets.py:364
+msgid ""
+"Here you can define the desired language to use while spell checking some "
+"fields. Use you locale setting. For example, to use european portuguese "
+"spell checking enter 'pt'"
+msgstr ""
+
+#: ../lib/widgets.py:365
+msgid ""
+"Use this entry to define the SMTP server you want to use to send e-mails. On "
+"*nix systems, 'localhost' should work. Alternatively, you can use your "
+"Internet Service Provider's SMTP server address."
+msgstr ""
+
+#: ../lib/widgets.py:366
+msgid ""
+"This is the from e-mail address that should be used to all outgoing e-mail. "
+"You want to include your own e-mail address here probably."
+msgstr ""
+
+#: ../lib/widgets.py:367
+msgid ""
+"Here you can define the smtp server port to use. If you want to use your "
+"gmail account service to send e-mails, try to enter '587' here. Default (and "
+"the most common one) is '25'"
+msgstr ""
+
+#: ../lib/widgets.py:368
+msgid ""
+"If you need TLS support, please check this checkbox. This is needed, for "
+"example, when using gmail service to send your reminder e-mails."
+msgstr ""
+
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:113
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:260
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:261
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:262
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:263
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:264
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:265
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:266
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:267
+#: ../lib/plugins/movie/PluginMovieAllMovie.py:269
+#: ../lib/plugins/movie/PluginMovieAllocine.py:97
+#: ../lib/plugins/movie/PluginMovieAllocine.py:218
+#: ../lib/plugins/movie/PluginMovieAllocine.py:219
+#: ../lib/plugins/movie/PluginMovieAllocine.py:220
+#: ../lib/plugins/movie/PluginMovieAllocine.py:221
+#: ../lib/plugins/movie/PluginMovieAllocine.py:222
+#: ../lib/plugins/movie/PluginMovieAllocine.py:223
+#: ../lib/plugins/movie/PluginMovieAllocine.py:224
+#: ../lib/plugins/movie/PluginMovieAllocine.py:225
+#: ../lib/plugins/movie/PluginMovieAllocine.py:247
+#: ../lib/plugins/movie/PluginMovieAllocine.py:248
+#: ../lib/plugins/movie/PluginMovieAllocine.py:249
+#: ../lib/plugins/movie/PluginMovieAllocine.py:250
+#: ../lib/plugins/movie/PluginMovieAllocine.py:251
+#: ../lib/plugins/movie/PluginMovieAllocine.py:252
+#: ../lib/plugins/movie/PluginMovieAllocine.py:253
+#: ../lib/plugins/movie/PluginMovieAllocine.py:254
+#: ../lib/plugins/movie/PluginMovieAllocine.py:255
+#: ../lib/plugins/movie/PluginMovieAllocine.py:256
+#: ../lib/plugins/movie/PluginMovieAllocine.py:257
+#: ../lib/plugins/movie/PluginMovieAllocine.py:258
+#: ../lib/plugins/movie/PluginMovieAllocine.py:259
+#: ../lib/plugins/movie/PluginMovieAllocine.py:260
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:99
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:247
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:248
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:249
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:250
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:251
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:252
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:253
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:254
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:255
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:256
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:257
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:258
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:259
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:260
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:261
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:262
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:263
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:264
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:265
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:266
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:267
+#: ../lib/plugins/movie/PluginMovieCinematografo.py:268
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:79
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:80
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:161
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:162
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:163
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:164
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:165
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:166
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:167
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:168
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:169
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:170
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:171
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:172
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:173
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:174
+#: ../lib/plugins/movie/PluginMovieCineMovies.py:175
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:91
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:193
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:194
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:195
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:196
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:197
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:198
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:199
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:200
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:201
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:202
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:203
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:204
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:205
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:206
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:207
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:208
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:209
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:210
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:211
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:212
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:213
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:214
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:215
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:216
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:217
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:218
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:219
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:220
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:221
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:222
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:223
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:224
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:225
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:226
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:227
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:228
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:229
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:230
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:231
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:232
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:233
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:234
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:235
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:236
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:237
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:238
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:239
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:240
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:241
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:242
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:243
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:244
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:245
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:246
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:247
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:248
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:249
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:250
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:251
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:252
+#: ../lib/plugins/movie/PluginMovieE-Pipoca.py:253
+#: ../lib/plugins/movie/PluginMovieFDb.py:121
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:84
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:185
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:186
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:187
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:188
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:189
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:190
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:191
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:210
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:211
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:212
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:213
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:214
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:215
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:216
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:217
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:236
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:237
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:238
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:239
+#: ../lib/plugins/movie/PluginMovieFilmeVonAZ.py:240
+#: ../lib/plugins/movie/PluginMovieFilmweb.py:105
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:133
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:134
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:286
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:287
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:288
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:289
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:290
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:291
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:292
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:293
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:294
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:295
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:296
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:297
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:298
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:299
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:300
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:301
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:302
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:303
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:304
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:305
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:306
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:307
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:308
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:309
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:310
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:311
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:312
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:313
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:314
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:315
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:316
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:317
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:318
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:319
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:320
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:321
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:328
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:329
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:330
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:331
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:332
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:333
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:334
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:335
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:336
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:337
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:338
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:339
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:340
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:341
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:342
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:343
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:344
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:345
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:346
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:347
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:348
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:349
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:350
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:351
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:352
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:353
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:354
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:355
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:356
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:357
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:358
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:359
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:360
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:361
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:362
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:363
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:364
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:365
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:386
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:387
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:388
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:389
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:390
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:391
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:392
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:393
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:394
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:395
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:401
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:402
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:407
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:408
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:409
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:410
+#: ../lib/plugins/movie/PluginMovieIMDB-es.py:100
+#: ../lib/plugins/movie/PluginMovieIMDB.py:98
+#: ../lib/plugins/movie/PluginMovieIMDB.py:99
+#: ../lib/plugins/movie/PluginMovieIMDB.py:275
+#: ../lib/plugins/movie/PluginMovieIMDB.py:276
+#: ../lib/plugins/movie/PluginMovieIMDB.py:277
+#: ../lib/plugins/movie/PluginMovieIMDB.py:278
+#: ../lib/plugins/movie/PluginMovieIMDB.py:279
+#: ../lib/plugins/movie/PluginMovieIMDB.py:280
+#: ../lib/plugins/movie/PluginMovieIMDB.py:281
+#: ../lib/plugins/movie/PluginMovieIMDB.py:282
+#: ../lib/plugins/movie/PluginMovieIMDB.py:283
+#: ../lib/plugins/movie/PluginMovieIMDB.py:284
+#: ../lib/plugins/movie/PluginMovieIMDB.py:285
+#: ../lib/plugins/movie/PluginMovieIMDB.py:286
+#: ../lib/plugins/movie/PluginMovieIMDB.py:287
+#: ../lib/plugins/movie/PluginMovieIMDB.py:288
+#: ../lib/plugins/movie/PluginMovieIMDB.py:289
+#: ../lib/plugins/movie/PluginMovieIMDB.py:290
+#: ../lib/plugins/movie/PluginMovieIMDB.py:291
+#: ../lib/plugins/movie/PluginMovieIMDB.py:292
+#: ../lib/plugins/movie/PluginMovieIMDB.py:293
+#: ../lib/plugins/movie/PluginMovieIMDB.py:294
+#: ../lib/plugins/movie/PluginMovieIMDB.py:295
+#: ../lib/plugins/movie/PluginMovieIMDB.py:296
+#: ../lib/plugins/movie/PluginMovieIMDB.py:297
+#: ../lib/plugins/movie/PluginMovieIMDB.py:298
+#: ../lib/plugins/movie/PluginMovieIMDB.py:299
+#: ../lib/plugins/movie/PluginMovieIMDB.py:300
+#: ../lib/plugins/movie/PluginMovieIMDB.py:301
+#: ../lib/plugins/movie/PluginMovieIMDB.py:302
+#: ../lib/plugins/movie/PluginMovieIMDB.py:303
+#: ../lib/plugins/movie/PluginMovieIMDB.py:304
+#: ../lib/plugins/movie/PluginMovieIMDB.py:305
+#: ../lib/plugins/movie/PluginMovieIMDB.py:306
+#: ../lib/plugins/movie/PluginMovieIMDB.py:307
+#: ../lib/plugins/movie/PluginMovieIMDB.py:308
+#: ../lib/plugins/movie/PluginMovieIMDB.py:309
+#: ../lib/plugins/movie/PluginMovieIMDB.py:310
+#: ../lib/plugins/movie/PluginMovieIMDB.py:311
+#: ../lib/plugins/movie/PluginMovieIMDB.py:312
+#: ../lib/plugins/movie/PluginMovieIMDB.py:313
+#: ../lib/plugins/movie/PluginMovieIMDB.py:314
+#: ../lib/plugins/movie/PluginMovieIMDB.py:315
+#: ../lib/plugins/movie/PluginMovieIMDB.py:316
+#: ../lib/plugins/movie/PluginMovieIMDB.py:317
+#: ../lib/plugins/movie/PluginMovieIMDB.py:318
+#: ../lib/plugins/movie/PluginMovieIMDB.py:319
+#: ../lib/plugins/movie/PluginMovieIMDB.py:320
+#: ../lib/plugins/movie/PluginMovieIMDB.py:321
+#: ../lib/plugins/movie/PluginMovieIMDB.py:322
+#: ../lib/plugins/movie/PluginMovieIMDB.py:323
+#: ../lib/plugins/movie/PluginMovieIMDB.py:324
+#: ../lib/plugins/movie/PluginMovieIMDB.py:325
+#: ../lib/plugins/movie/PluginMovieIMDB.py:326
+#: ../lib/plugins/movie/PluginMovieIMDB.py:327
+#: ../lib/plugins/movie/PluginMovieIMDB.py:328
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:163
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:174
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:372
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:373
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:374
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:375
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:376
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:377
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:378
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:379
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:455
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:456
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:457
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:458
+#: ../lib/plugins/movie/PluginMovieKinoDe.py:459
+#: ../lib/plugins/movie/PluginMovieMoviefone.py:72
+#: ../lib/plugins/movie/PluginMovieOFDb.py:88
+#: ../lib/plugins/movie/PluginMovieOFDb.py:176
+#: ../lib/plugins/movie/PluginMovieOFDb.py:177
+#: ../lib/plugins/movie/PluginMovieOFDb.py:178
+#: ../lib/plugins/movie/PluginMovieOFDb.py:179
+#: ../lib/plugins/movie/PluginMovieOFDb.py:180
+#: ../lib/plugins/movie/PluginMovieOFDb.py:183
+#: ../lib/plugins/movie/PluginMovieOFDb.py:184
+#: ../lib/plugins/movie/PluginMovieOFDb.py:193
+#: ../lib/plugins/movie/PluginMovieOFDb.py:194
+#: ../lib/plugins/movie/PluginMovieOFDb.py:203
+#: ../lib/plugins/movie/PluginMovieOFDb.py:205
+#: ../lib/plugins/movie/PluginMovieOFDb.py:228
+#: ../lib/plugins/movie/PluginMovieOFDb.py:250
+#: ../lib/plugins/movie/PluginMovieOFDb.py:251
+#: ../lib/plugins/movie/PluginMovieOFDb.py:252
+#: ../lib/plugins/movie/PluginMovieOFDb.py:253
+#: ../lib/plugins/movie/PluginMovieOFDb.py:291
+#: ../lib/plugins/movie/PluginMovieOFDb.py:292
+#: ../lib/plugins/movie/PluginMovieOFDb.py:293
+#: ../lib/plugins/movie/PluginMovieOFDb.py:294
+#: ../lib/plugins/movie/PluginMovieOFDb.py:304
+#: ../lib/plugins/movie/PluginMovieOFDb.py:305
+#: ../lib/plugins/movie/PluginMovieOFDb.py:307
+#: ../lib/plugins/movie/PluginMovieOnet.py:101
+#: ../lib/plugins/movie/PluginMovieWP.py:95
+#: ../lib/plugins/movie/PluginMovieWP.py:97
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:104
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:206
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:207
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:208
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:209
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:210
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:211
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:212
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:213
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:214
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:215
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:216
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:217
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:237
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:238
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:239
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:240
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:241
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:242
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:243
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:244
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:245
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:246
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:247
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:248
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:249
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:250
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:251
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:252
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:253
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:254
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:255
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:256
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:257
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:258
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:259
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:260
+#: ../lib/plugins/movie/PluginMovieZelluloid.py:261
+#: ../lib/plugins/export/PluginExportAMC.py:115
+#: ../lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py:200
+#: ../lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py:182
+#: ../lib/plugins/export/PluginExportGCstar.py:148
+#: ../lib/plugins/imp/AllMyMovies.py:133 ../lib/plugins/imp/AllMyMovies.py:139
+#: ../lib/plugins/imp/DVDProfiler.py:229 ../lib/plugins/imp/DVDProfiler.py:231
+#: ../lib/plugins/imp/DVDProfiler.py:250 ../lib/plugins/imp/DVDProfiler.py:252
+#: ../lib/plugins/imp/eXtremeMovieManager.py:171
+#: ../lib/plugins/imp/FoxMovieManager.py:109 ../lib/plugins/imp/GCstar.py:150
+#: ../lib/plugins/imp/TheMovieLibrary.py:148
+#: ../lib/plugins/imp/WintoolzFilmdatenbank.py:136
+msgid " as "
+msgstr ""
+
+#: ../lib/plugins/movie/PluginMovieAmazon.py:39
+msgid "International"
+msgstr ""
+
+#: ../lib/plugins/movie/PluginMovieAmazon.py:60
+#: ../lib/plugins/movie/PluginMovieAmazon.py:255
+msgid ""
+"Please configure your Amazon Access Key ID and Secret Key correctly in the "
+"preferences dialog."
+msgstr ""
+
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:209
+#: ../lib/plugins/movie/PluginMovieIMDB.py:164 ../glade/griffith.glade.h:4
+msgid "<b>Audio</b>"
+msgstr ""
+
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:375
+#: ../lib/plugins/movie/PluginMovieIMDB-de.py:420
+#: ../lib/plugins/movie/PluginMovieIMDB.py:338
+msgid "Audio"
+msgstr ""
+
+#: ../lib/plugins/export/__init__.py:136
+#: ../lib/plugins/export/PluginExportCSV.py:78
+#: ../lib/plugins/export/PluginExportXML.py:115
+#, python-format
+msgid "%s file has been created."
+msgstr ""
+
+#: ../lib/plugins/export/__init__.py:145 ../lib/plugins/export/__init__.py:148
+#: ../lib/plugins/export/PluginExportCSV.py:50
+#: ../lib/plugins/export/PluginExportCSV.py:53
+#: ../lib/plugins/export/PluginExportiPod.py:100
+#: ../lib/plugins/export/PluginExportXML.py:47
+#: ../lib/plugins/export/PluginExportXML.py:50
+#, python-format
+msgid "Export a %s document"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportAMC.py:30
+msgid "Full Ant Movie Catalog database xml export plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportCSV.py:34
+msgid "Full CSV list export plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportDVDProfilerXMLExportV2.py:29
+msgid "Full DVD Profiler XML Export V2 plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportDVDProfilerXMLExportV3.py:29
+msgid "Full DVD Profiler XML Export V3 plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportGCstar.py:30
+msgid "Full GCstar database export plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:41
+msgid "Plugin exports data using templates"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:52
+msgid "Griffith's movies list"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:162 ../glade/griffith.glade.h:90
+msgid "Media"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:463
+#: ../lib/plugins/export/PluginExportHTML.py:465
+msgid "previous"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:476
+#: ../lib/plugins/export/PluginExportHTML.py:478
+msgid "next"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:554
+#: ../lib/plugins/export/PluginExportHTML.py:595
+#: ../lib/plugins/export/PluginExportHTML.py:692
+#, python-format
+msgid "Can't create %s!"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:584
+#, python-format
+msgid ""
+"Directory %s already exists.\n"
+"Do you want to overwrite it?"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:588
+#, python-format
+msgid "Can't remove %s!"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:603
+#: ../lib/plugins/export/PluginExportHTML.py:616
+#, python-format
+msgid "Can't copy %s!"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:638
+#, python-format
+msgid "Can't open %s!"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:646
+#: ../lib/plugins/export/PluginExportPDF.py:182
+msgid "Document generated by Griffith v"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:714
+msgid "Yes"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:716
+msgid "No"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportHTML.py:790
+msgid "Document has been generated."
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportiPod.py:63
+msgid "iPod Notes export plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportiPod.py:79
+msgid "My Movies List"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportiPod.py:95
+msgid "List was successful exported to iPod."
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportiPod.py:97
+msgid "iPod is not connected."
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportiPod.py:111
+msgid ""
+"List was successful exported. Now you should move it to the 'Notes' folder "
+"on your iPod."
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:47
+msgid "PDF export plugin"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:72
+#: ../lib/plugins/export/PluginExportPDF.py:74
+msgid "Export a PDF"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:115
+msgid "List of films"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:118
+#, python-format
+msgid "Total Movies: %s"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:175
+msgid "PDF has been created."
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportPDF.py:180
+#, python-format
+msgid "Page %d"
+msgstr ""
+
+#: ../lib/plugins/export/PluginExportXML.py:33
+msgid "Full XML list export plugin"
+msgstr ""
+
+#: ../lib/plugins/imp/AllMyMovies.py:38
+msgid "All My Movies 5.7"
+msgstr ""
+
+#: ../lib/plugins/imp/AllMyMovies.py:60 ../lib/plugins/imp/AMC.py:121
+#: ../lib/plugins/imp/BESTheMovieLibrary.py:60
+#: ../lib/plugins/imp/DVDProfiler.py:57
+#: ../lib/plugins/imp/eXtremeMovieManager.py:57
+#: ../lib/plugins/imp/FoxMovieManager.py:60 ../lib/plugins/imp/GCstar.py:58
+#: ../lib/plugins/imp/MovieTrack.py:56 ../lib/plugins/imp/MyDVDs.py:60
+#: ../lib/plugins/imp/PersonalVideoDatabase.py:57
+#: ../lib/plugins/imp/TheMovieLibrary.py:60
+#: ../lib/plugins/imp/WintoolzFilmdatenbank.py:59
+msgid "The format of the file is not supported."
+msgstr ""
+
+#: ../lib/plugins/imp/AMC.py:95
+msgid "Ant Movie Catalog (version 3.5)"
+msgstr ""
+
+#: ../lib/plugins/imp/BESTheMovieLibrary.py:38
+msgid "Barrett Enterprise Software The Movie Library 1.9.x"
+msgstr ""
+
+#: ../lib/plugins/imp/CSV.py:45
+msgid "Full CSV list import plugin"
+msgstr ""
+
+#: ../lib/plugins/imp/CSV.py:195
+msgid "Please assign at least one field first!"
+msgstr ""
+
+#: ../lib/plugins/imp/CSV.py:311
+#, python-format
+msgid "Can't open the file %s"
+msgstr ""
+
+#: ../lib/plugins/imp/DVDProfiler.py:34
+msgid "DVD Profiler (version 3.x)"
+msgstr ""
+
+#: ../lib/plugins/imp/eXtremeMovieManager.py:34
+msgid "eXtreme Movie Manager (version 6.x / 7.x)"
+msgstr ""
+
+#: ../lib/plugins/imp/FoxMovieManager.py:38
+msgid "Fox Movie Manager 1.4"
+msgstr ""
+
+#: ../lib/plugins/imp/GCstar.py:35
+msgid "GCstar (version 1.4.x)"
+msgstr ""
+
+#: ../lib/plugins/imp/__init__.py:402
+#, python-format
+msgid "%s file has been imported. %s movies added."
+msgstr ""
+
+#: ../lib/plugins/imp/MovieTrack.py:34
+msgid "MovieTrack (version 3.4x)"
+msgstr ""
+
+#: ../lib/plugins/imp/MyDVDs.py:38
+msgid "MyDVDs 1.6x"
+msgstr ""
+
+#: ../lib/plugins/imp/PersonalVideoDatabase.py:34
+msgid "Personal Video Database (version 0.9.9.x)"
+msgstr ""
+
+#: ../lib/plugins/imp/TheMovieLibrary.py:38
+msgid "WenSoftware The Movie Library 1.4.x"
+msgstr ""
+
+#: ../lib/plugins/imp/WintoolzFilmdatenbank.py:37
+msgid "wintoolz Filmdatenbank (version 1.0.0.x)"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:1
+msgid "<b>Example</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:2
+msgid "<b>Export</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:3
+msgid "<b>Header</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:4 ../glade/griffith.glade.h:18
+msgid "<b>Sort by</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:5
+msgid "<b>Split into</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:6
+msgid "<b>Style</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:7
+msgid "<b>Template</b>"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:8 ../glade/import.glade.h:3
+msgid "Author"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:9
+msgid "Black and white"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:10
+msgid "Choose style file"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:11
+msgid "Convert images"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:12
+msgid "Data"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:13 ../glade/import.glade.h:4
+msgid "Description"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:14
+msgid "Destination"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:16
+msgid "Export"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:17
+msgid "Export data"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:18
+msgid "Format"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:19
+msgid "Maximal height"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:20
+msgid "Maximal width"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:21
+msgid "Posters"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:22 ../glade/griffith.glade.h:130
+msgid "Reverse"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:23
+msgid "Template"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:24
+msgid "Use custom file"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:25 ../glade/import.glade.h:10
+msgid "Version"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:26
+msgid "entries per page"
+msgstr ""
+
+#: ../glade/exporthtml.glade.h:27
+msgid "files"
+msgstr ""
+
+#: ../glade/griffith.glade.h:1
+msgid "0 means no limits"
+msgstr ""
+
+#: ../glade/griffith.glade.h:2
+msgid "<b>Audio channels</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:3
+msgid "<b>Audio codecs</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:5
+msgid "<b>Collection</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:6
+msgid "<b>Collections</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:7
+msgid "<b>Defaults</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:8
+msgid "<b>E-mail reminder</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:9
+msgid "<b>Languages</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:10
+msgid "<b>Limits</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:11
+msgid "<b>Loan History</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:12
+msgid "<b>Loans</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:13
+msgid "<b>Media</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:14
+msgid "<b>Search for:</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:15
+msgid "<b>Search results</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:16
+msgid "<b>Select database to use</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:17
+msgid "<b>Show only the following columns</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:19
+msgid "<b>Subtitle formats</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:20
+msgid "<b>Subtitles</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:21
+msgid "<b>Tags</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:22
+msgid "<b>Use spell checking on the following fields:</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:23
+msgid "<b>Video codecs</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:24
+msgid "<b>Volume</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:25
+msgid "<b>Volumes</b>"
+msgstr ""
+
+#: ../glade/griffith.glade.h:26
+msgid "Add"
+msgstr ""
+
+#: ../glade/griffith.glade.h:28
+msgid "Add a new person"
+msgstr ""
+
+#: ../glade/griffith.glade.h:29
+msgid "Add movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:30
+msgid "Add movie and close"
+msgstr ""
+
+#: ../glade/griffith.glade.h:31
+msgid "Adds new movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:32
+msgid "All Movies"
+msgstr ""
+
+#: ../glade/griffith.glade.h:35
+msgid "By Collection"
+msgstr ""
+
+#: ../glade/griffith.glade.h:38
+msgid "Choose Image"
+msgstr ""
+
+#: ../glade/griffith.glade.h:40
+msgid "Clear filter"
+msgstr ""
+
+#: ../glade/griffith.glade.h:41
+msgid "Clone"
+msgstr ""
+
+#: ../glade/griffith.glade.h:46
+msgid "Create backup"
+msgstr ""
+
+#: ../glade/griffith.glade.h:47
+msgid "DVD layers"
+msgstr ""
+
+#: ../glade/griffith.glade.h:48
+msgid "DVD region"
+msgstr ""
+
+#: ../glade/griffith.glade.h:49
+msgid "Database"
+msgstr ""
+
+#: ../glade/griffith.glade.h:50
+msgid "Delete a person"
+msgstr ""
+
+#: ../glade/griffith.glade.h:51
+msgid "Details"
+msgstr ""
+
+#: ../glade/griffith.glade.h:52
+msgid "Dictionaries"
+msgstr ""
+
+#: ../glade/griffith.glade.h:56
+msgid "E-mail reminder"
+msgstr ""
+
+#: ../glade/griffith.glade.h:57
+msgid "E_xport"
+msgstr ""
+
+#: ../glade/griffith.glade.h:58
+msgid "Edit a person"
+msgstr ""
+
+#: ../glade/griffith.glade.h:59
+msgid "Edit movie details"
+msgstr ""
+
+#: ../glade/griffith.glade.h:60
+msgid "Extensions"
+msgstr ""
+
+#: ../glade/griffith.glade.h:61
+msgid "Extensions toolbar"
+msgstr ""
+
+#: ../glade/griffith.glade.h:62
+msgid "Favorite Movie Plugin"
+msgstr ""
+
+#: ../glade/griffith.glade.h:63
+msgid "Fill empty fields only"
+msgstr ""
+
+#: ../glade/griffith.glade.h:64
+msgid "Filter "
+msgstr ""
+
+#: ../glade/griffith.glade.h:65
+msgid "Filter movies"
+msgstr ""
+
+#: ../glade/griffith.glade.h:66
+msgid "Font for reports"
+msgstr ""
+
+#: ../glade/griffith.glade.h:67
+msgid "Forum"
+msgstr ""
+
+#: ../glade/griffith.glade.h:68
+msgid "Found Results"
+msgstr ""
+
+#: ../glade/griffith.glade.h:70
+msgid "Get from web"
+msgstr ""
+
+#: ../glade/griffith.glade.h:71
+msgid "Get movie data from:"
+msgstr ""
+
+#: ../glade/griffith.glade.h:72
+msgid "Homepage"
+msgstr ""
+
+#: ../glade/griffith.glade.h:73
+msgid "Host"
+msgstr ""
+
+#: ../glade/griffith.glade.h:74
+msgid "I_mport"
+msgstr ""
+
+#: ../glade/griffith.glade.h:76
+msgid "Include Front Image"
+msgstr ""
+
+#: ../glade/griffith.glade.h:77
+msgid "Include movie number"
+msgstr ""
+
+#: ../glade/griffith.glade.h:78
+msgid "Languages"
+msgstr ""
+
+#: ../glade/griffith.glade.h:80
+msgid "Limit search results to"
+msgstr ""
+
+#: ../glade/griffith.glade.h:81
+msgid "Load poster from disk"
+msgstr ""
+
+#: ../glade/griffith.glade.h:82
+msgid "Loan"
+msgstr ""
+
+#: ../glade/griffith.glade.h:83
+msgid "Loan Management"
+msgstr ""
+
+#: ../glade/griffith.glade.h:84
+msgid "Loan movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:85
+msgid "Loan to"
+msgstr ""
+
+#: ../glade/griffith.glade.h:86
+msgid "Loaned Movies"
+msgstr ""
+
+#: ../glade/griffith.glade.h:87
+msgid "Loans"
+msgstr ""
+
+#: ../glade/griffith.glade.h:88
+msgid "Main list"
+msgstr ""
+
+#: ../glade/griffith.glade.h:89
+msgid "Manage People"
+msgstr ""
+
+#: ../glade/griffith.glade.h:92
+msgid ""
+"Meter\n"
+"Stars"
+msgstr ""
+
+#: ../glade/griffith.glade.h:94
+msgid "Movie details"
+msgstr ""
+
+#: ../glade/griffith.glade.h:95
+msgid "Movie information"
+msgstr ""
+
+#: ../glade/griffith.glade.h:97
+msgid "Needs authentication"
+msgstr ""
+
+#: ../glade/griffith.glade.h:98
+msgid "New database"
+msgstr ""
+
+#: ../glade/griffith.glade.h:99
+msgid "Not Seen Movies"
+msgstr ""
+
+#: ../glade/griffith.glade.h:103
+msgid "Open search window"
+msgstr ""
+
+#: ../glade/griffith.glade.h:105
+msgid "Original title"
+msgstr ""
+
+#: ../glade/griffith.glade.h:106
+msgid "Other"
+msgstr ""
+
+#: ../glade/griffith.glade.h:107
+msgid "PDF reader"
+msgstr ""
+
+#: ../glade/griffith.glade.h:108
+msgid "Password"
+msgstr ""
+
+#: ../glade/griffith.glade.h:109
+msgid "People"
+msgstr ""
+
+#: ../glade/griffith.glade.h:110
+msgid "Phone"
+msgstr ""
+
+#: ../glade/griffith.glade.h:111
+msgid "Please wait a moment..."
+msgstr ""
+
+#: ../glade/griffith.glade.h:113
+msgid "Plugins"
+msgstr ""
+
+#: ../glade/griffith.glade.h:114
+msgid "Port"
+msgstr ""
+
+#: ../glade/griffith.glade.h:115
+msgid "Poster viewer"
+msgstr ""
+
+#: ../glade/griffith.glade.h:116
+msgid "Preferences"
+msgstr ""
+
+#: ../glade/griffith.glade.h:117
+msgid "Print Cover"
+msgstr ""
+
+#: ../glade/griffith.glade.h:118
+msgid "Print cover"
+msgstr ""
+
+#: ../glade/griffith.glade.h:120
+msgid "Rating image"
+msgstr ""
+
+#: ../glade/griffith.glade.h:122
+msgid "Remove"
+msgstr ""
+
+#: ../glade/griffith.glade.h:123
+msgid "Remove poster"
+msgstr ""
+
+#: ../glade/griffith.glade.h:124
+msgid "Remove selected movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:125
+msgid "Rename"
+msgstr ""
+
+#: ../glade/griffith.glade.h:126
+msgid "Report bug"
+msgstr ""
+
+#: ../glade/griffith.glade.h:127
+msgid "Resolution"
+msgstr ""
+
+#: ../glade/griffith.glade.h:128
+msgid "Restore from backup"
+msgstr ""
+
+#: ../glade/griffith.glade.h:129
+msgid "Return"
+msgstr ""
+
+#: ../glade/griffith.glade.h:132
+msgid "SMTP port"
+msgstr ""
+
+#: ../glade/griffith.glade.h:133
+msgid "SMTP server"
+msgstr ""
+
+#: ../glade/griffith.glade.h:134
+msgid "Saved filters"
+msgstr ""
+
+#: ../glade/griffith.glade.h:136
+msgid "Searching on the web"
+msgstr ""
+
+#: ../glade/griffith.glade.h:138
+msgid "Select database"
+msgstr ""
+
+#: ../glade/griffith.glade.h:139
+msgid "Select first movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:140
+msgid "Select last movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:141
+msgid "Select next movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:142
+msgid "Select previous movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:143
+msgid "Sender E-mail address"
+msgstr ""
+
+#: ../glade/griffith.glade.h:144
+msgid "Show other movies in this collection"
+msgstr ""
+
+#: ../glade/griffith.glade.h:145
+msgid "Show other movies in this volume"
+msgstr ""
+
+#: ../glade/griffith.glade.h:146
+msgid "Simple"
+msgstr ""
+
+#: ../glade/griffith.glade.h:148
+msgid "Size"
+msgstr ""
+
+#: ../glade/griffith.glade.h:149
+msgid "Spell check the following language"
+msgstr ""
+
+#: ../glade/griffith.glade.h:150
+msgid ""
+"Standard\n"
+"Slim\n"
+"Double Slim"
+msgstr ""
+
+#: ../glade/griffith.glade.h:154
+msgid "Suggest an unseen movie"
+msgstr ""
+
+#: ../glade/griffith.glade.h:156
+msgid "Technical information"
+msgstr ""
+
+#: ../glade/griffith.glade.h:157
+msgid "This movie is part of..."
+msgstr ""
+
+#: ../glade/griffith.glade.h:159
+msgid "Toolbar"
+msgstr ""
+
+#: ../glade/griffith.glade.h:162
+msgid ""
+"Type in the original film tile, select source and choose <i>Get from web</"
+"i>. Griffith will try to fetch all the related information from the Web."
+msgstr ""
+
+#: ../glade/griffith.glade.h:163
+msgid "Use Spellchecker"
+msgstr ""
+
+#: ../glade/griffith.glade.h:164
+msgid "Use TLS?"
+msgstr ""
+
+#: ../glade/griffith.glade.h:165
+msgid "Username"
+msgstr ""
+
+#: ../glade/griffith.glade.h:167
+msgid "Visit movie web site"
+msgstr ""
+
+#: ../glade/griffith.glade.h:168
+msgid "Visit the oficial web site"
+msgstr ""
+
+#: ../glade/griffith.glade.h:170
+msgid "Watch the trailer"
+msgstr ""
+
+#: ../glade/griffith.glade.h:172
+msgid "_Edit"
+msgstr ""
+
+#: ../glade/griffith.glade.h:173
+msgid "_File"
+msgstr ""
+
+#: ../glade/griffith.glade.h:174
+msgid "_Help"
+msgstr ""
+
+#: ../glade/griffith.glade.h:175
+msgid "_Loans"
+msgstr ""
+
+#: ../glade/griffith.glade.h:176
+msgid "_Tools"
+msgstr ""
+
+#: ../glade/griffith.glade.h:177
+msgid "_View"
+msgstr ""
+
+#: ../glade/griffith.glade.h:178
+msgid "add entered name to collections list"
+msgstr ""
+
+#: ../glade/griffith.glade.h:179
+msgid "add entered name to volumes list"
+msgstr ""
+
+#: ../glade/griffith.glade.h:180
+msgid "classification"
+msgstr ""
+
+#: ../glade/griffith.glade.h:181
+msgid "click here if movie was returned"
+msgstr ""
+
+#: ../glade/griffith.glade.h:182
+msgid "collection details"
+msgstr ""
+
+#: ../glade/griffith.glade.h:183
+msgid "loaned only"
+msgstr ""
+
+#: ../glade/griffith.glade.h:184
+msgid "loans movie or volume"
+msgstr ""
+
+#: ../glade/griffith.glade.h:185
+msgid "minutes"
+msgstr ""
+
+#: ../glade/griffith.glade.h:186
+msgid "movies"
+msgstr ""
+
+#: ../glade/griffith.glade.h:187
+msgid "none"
+msgstr ""
+
+#: ../glade/griffith.glade.h:188
+msgid "not loaned only"
+msgstr ""
+
+#: ../glade/griffith.glade.h:189
+msgid "remove selected collection"
+msgstr ""
+
+#: ../glade/griffith.glade.h:190
+msgid "remove selected volume"
+msgstr ""
+
+#: ../glade/griffith.glade.h:191
+msgid "seen only"
+msgstr ""
+
+#: ../glade/griffith.glade.h:192
+msgid "tags"
+msgstr ""
+
+#: ../glade/griffith.glade.h:193
+msgid "unseen only"
+msgstr ""
+
+#: ../glade/griffith.glade.h:194
+msgid "volume details"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:1
+msgid ""
+"<b>Some Hints</b>:\n"
+"\n"
+"On the next step you can assign your csv fields with the one in Griffith.\n"
+"One CSV-field can be assigned to multiple griffith-fields, i.e. if you have "
+"only one title.\n"
+"Your cast-list should be comma-seperated to break it apart in multiple lines."
+msgstr ""
+
+#: ../glade/importcsv.glade.h:6
+msgid "Assigned Fields (CSV > Griffith)"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:7
+msgid "CSV Fields"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:8
+msgid "CSV Import"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:9
+msgid "Delimiter"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:10
+msgid "Encoding"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:11 ../glade/import.glade.h:6
+msgid "Fields"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:12
+msgid "File-Options"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:13
+msgid "From Row"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:14
+msgid "Griffith Fields"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:15
+msgid "If your file has no column headers then you should import from row 0."
+msgstr ""
+
+#: ../glade/importcsv.glade.h:16
+msgid "Lineterminator"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:17
+msgid "Quotechar"
+msgstr ""
+
+#: ../glade/importcsv.glade.h:18
+msgid ""
+"ascii (English)\n"
+"big5 (Traditional Chinese)\n"
+"big5hkscs (Traditional Chinese)\n"
+"cp037 (English)\n"
+"cp424 (Hebrew)\n"
+"cp437 (English)\n"
+"cp500 (Western Europe)\n"
+"cp737 (Greek)\n"
+"cp775 (Baltic languages)\n"
+"cp850 (Western Europe)\n"
+"cp852 (Central and Eastern Europe)\n"
+"cp855 (Bulgarian, Byelorussian, Macedonian, Russian, Serbian)\n"
+"cp856 (Hebrew)\n"
+"cp857 (Turkish)\n"
+"cp860 (Portuguese)\n"
+"cp861 (Icelandic)\n"
+"cp862 (Hebrew)\n"
+"cp863 (Canadian)\n"
+"cp864 (Arabic)\n"
+"cp865 (Danish, Norwegian)\n"
+"cp866 (Russian)\n"
+"cp869 (Greek)\n"
+"cp874 (Thai)\n"
+"cp875 (Greek)\n"
+"cp932 (Japanese)\n"
+"cp949 (Korean)\n"
+"cp950 (Traditional Chinese)\n"
+"cp1006 (Urdu)\n"
+"cp1026 (Turkish)\n"
+"cp1140 (Western Europe)\n"
+"cp1250 (Central and Eastern Europe)\n"
+"cp1251 (Bulgarian, Byelorussian, Macedonian, Russian, Serbian)\n"
+"cp1252 (Western Europe)\n"
+"cp1253 (Greek)\n"
+"cp1254 (Turkish)\n"
+"cp1255 (Hebrew)\n"
+"cp1256 (Arabic)\n"
+"cp1257 (Baltic languages)\n"
+"cp1258 (Vietnamese)\n"
+"euc_jp (Japanese)\n"
+"euc_jis_2004 (Japanese)\n"
+"euc_jisx0213 (Japanese)\n"
+"euc_kr (Korean)\n"
+"gb2312 (Simplified Chinese)\n"
+"gbk (Unified Chinese)\n"
+"gb18030 (Unified Chinese)\n"
+"hz (Simplified Chinese)\n"
+"iso2022_jp (Japanese)\n"
+"iso2022_jp_1 (Japanese)\n"
+"iso2022_jp_2 (Japanese, Korean, Simplified Chinese, Western Europe, Greek)\n"
+"iso2022_jp_2004 (Japanese)\n"
+"iso2022_jp_3 (Japanese)\n"
+"iso2022_jp_ext (Japanese)\n"
+"iso2022_kr (Korean)\n"
+"latin_1 (West Europe)\n"
+"iso8859_2 (Central and Eastern Europe)\n"
+"iso8859_3 (Esperanto, Maltese)\n"
+"iso8859_4 (Baltic languagues)\n"
+"iso8859_5 (Bulgarian, Byelorussian, Macedonian, Russian, Serbian)\n"
+"iso8859_6 (Arabic)\n"
+"iso8859_7 (Greek)\n"
+"iso8859_8 (Hebrew)\n"
+"iso8859_9 (Turkish)\n"
+"iso8859_10 (Nordic languages)\n"
+"iso8859_13 (Baltic languages)\n"
+"iso8859_14 (Celtic languages)\n"
+"iso8859_15 (Western Europe)\n"
+"johab (Korean)\n"
+"koi8_r (Russian)\n"
+"koi8_u (Ukrainian)\n"
+"mac_cyrillic (Bulgarian, Byelorussian, Macedonian, Russian, Serbian)\n"
+"mac_greek (Greek)\n"
+"mac_iceland (Icelandic)\n"
+"mac_latin2 (Central and Eastern Europe)\n"
+"mac_roman (Western Europe)\n"
+"mac_turkish (Turkish)\n"
+"ptcp154 (Kazakh)\n"
+"shift_jis (Japanese)\n"
+"shift_jis_2004 (Japanese)\n"
+"shift_jisx0213 (Japanese)\n"
+"utf_16 (all languages)\n"
+"utf_16_be (all languages (BMP only))\n"
+"utf_16_le (all languages (BMP only))\n"
+"utf_7 (all languages)\n"
+"utf_8 (all languages)"
+msgstr ""
+
+#: ../glade/import.glade.h:1
+msgid "<b>Import only fields selected below</b>"
+msgstr ""
+
+#: ../glade/import.glade.h:2
+msgid "<b>Importing...</b>"
+msgstr ""
+
+#: ../glade/import.glade.h:7
+msgid "Import window"
+msgstr ""
+
+#: ../glade/import.glade.h:8
+msgid "Plugin"
+msgstr ""
+
+#: ../glade/import.glade.h:9
+msgid "Source"
+msgstr ""

Modified: trunk/winpackage.iss
===================================================================
--- trunk/winpackage.iss	2010-01-04 21:01:02 UTC (rev 1369)
+++ trunk/winpackage.iss	2010-01-04 21:02:39 UTC (rev 1370)
@@ -3,7 +3,7 @@
 
 [Setup]
 AppName=Griffith
-AppVerName=Griffith 0.10
+AppVerName=Griffith 0.11
 AppPublisher=Vasco Nunes, Piotr O?arowski
 AppPublisherURL=http://griffith.cc/
 AppSupportURL=http://griffith.cc/
@@ -14,7 +14,7 @@
 LicenseFile=COPYING
 InfoAfterFile=README
 OutputDir=installer
-OutputBaseFilename=griffith-0.10-win32
+OutputBaseFilename=griffith-0.11-win32
 SetupIconFile=images\griffith.ico
 Compression=lzma
 SolidCompression=true
@@ -22,8 +22,8 @@
 InternalCompressLevel=ultra
 AppCopyright=Vasco Nunes/Piotr Ozarowski
 DisableStartupPrompt=false
-AppVersion=0.10
-VersionInfoVersion=0.10.3
+AppVersion=0.11
+VersionInfoVersion=0.11
 
 [Languages]
 Name: eng; MessagesFile: compiler:Default.isl



From piotrek at mail.berlios.de  Mon Jan  4 22:11:32 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 22:11:32 +0100
Subject: [Griffith-svn] r1371 - trunk/lib/plugins/imp
Message-ID: <201001042111.o04LBWYs023706@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 22:11:32 +0100 (Mon, 04 Jan 2010)
New Revision: 1371

Modified:
   trunk/lib/plugins/imp/AMC.py
   trunk/lib/plugins/imp/AllMyMovies.py
   trunk/lib/plugins/imp/BESTheMovieLibrary.py
   trunk/lib/plugins/imp/DVDProfiler.py
   trunk/lib/plugins/imp/FoxMovieManager.py
   trunk/lib/plugins/imp/GCstar.py
   trunk/lib/plugins/imp/MovieTrack.py
   trunk/lib/plugins/imp/MyDVDs.py
   trunk/lib/plugins/imp/PersonalVideoDatabase.py
   trunk/lib/plugins/imp/TheMovieLibrary.py
   trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
   trunk/lib/plugins/imp/eXtremeMovieManager.py
Log:
don't translate program names


Modified: trunk/lib/plugins/imp/AMC.py
===================================================================
--- trunk/lib/plugins/imp/AMC.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/AMC.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -92,7 +92,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('Ant Movie Catalog (version 3.5)')
+    description  = 'Ant Movie Catalog (v3.5)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.1'

Modified: trunk/lib/plugins/imp/AllMyMovies.py
===================================================================
--- trunk/lib/plugins/imp/AllMyMovies.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/AllMyMovies.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -35,7 +35,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('All My Movies 5.7')
+    description  = 'All My Movies (v5.7)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/BESTheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -35,7 +35,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('Barrett Enterprise Software The Movie Library 1.9.x')
+    description  = 'Barrett Enterprise Software The Movie Library (v1.9.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/DVDProfiler.py
===================================================================
--- trunk/lib/plugins/imp/DVDProfiler.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/DVDProfiler.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -31,7 +31,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('DVD Profiler (version 3.x)')
+    description  = 'DVD Profiler (v3.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/FoxMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -35,7 +35,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('Fox Movie Manager 1.4')
+    description  = 'Fox Movie Manager (v1.4)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/GCstar.py
===================================================================
--- trunk/lib/plugins/imp/GCstar.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/GCstar.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -32,7 +32,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('GCstar (version 1.4.x)')
+    description  = 'GCstar (v1.4.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/MovieTrack.py
===================================================================
--- trunk/lib/plugins/imp/MovieTrack.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/MovieTrack.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -31,7 +31,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('MovieTrack (version 3.4x)')
+    description  = 'MovieTrack (v3.4x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/MyDVDs.py
===================================================================
--- trunk/lib/plugins/imp/MyDVDs.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/MyDVDs.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -35,7 +35,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('MyDVDs 1.6x')
+    description  = 'MyDVDs (v1.6x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/PersonalVideoDatabase.py
===================================================================
--- trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -31,7 +31,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('Personal Video Database (version 0.9.9.x)')
+    description  = 'Personal Video Database (v0.9.9.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/TheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -35,7 +35,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('WenSoftware The Movie Library 1.4.x')
+    description  = 'WenSoftware The Movie Library (v1.4.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
===================================================================
--- trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -34,7 +34,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('wintoolz Filmdatenbank (version 1.0.0.x)')
+    description  = 'wintoolz Filmdatenbank (v1.0.0.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'

Modified: trunk/lib/plugins/imp/eXtremeMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-04 21:02:39 UTC (rev 1370)
+++ trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-04 21:11:32 UTC (rev 1371)
@@ -31,7 +31,7 @@
 
 
 class ImportPlugin(IP):
-    description  = _('eXtreme Movie Manager (version 6.x / 7.x)')
+    description  = 'eXtreme Movie Manager (v6.x / 7.x)'
     author       = 'Michael Jahn'
     email        = 'griffith-private at lists.berlios.de'
     version      = '1.0'



From piotrek at mail.berlios.de  Mon Jan  4 22:20:40 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 22:20:40 +0100
Subject: [Griffith-svn] r1372 - in trunk: . lib
Message-ID: <201001042120.o04LKeNj025174@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 22:20:40 +0100 (Mon, 04 Jan 2010)
New Revision: 1372

Modified:
   trunk/Makefile
   trunk/lib/version.py
Log:
fix VERSION


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2010-01-04 21:11:32 UTC (rev 1371)
+++ trunk/Makefile	2010-01-04 21:20:40 UTC (rev 1372)
@@ -6,7 +6,7 @@
 
 PACKAGE=griffith
 LANGUAGES=$(shell find i18n/ -maxdepth 1 -mindepth 1 -type d -not -name \.svn -printf "%f ")
-VERSION=$(shell grep "^pversion" lib/version.py | cut -d \"  -f 2)
+VERSION=$(shell grep "^pversion" lib/version.py | cut -d \'  -f 2)
 TEMPLATES= $(shell cd export_templates >/dev/null; $(FIND) . -maxdepth 1 -mindepth 1 -type d -name "[^\.svn]*" -print)
 
 .PHONY: help clean install

Modified: trunk/lib/version.py
===================================================================
--- trunk/lib/version.py	2010-01-04 21:11:32 UTC (rev 1371)
+++ trunk/lib/version.py	2010-01-04 21:20:40 UTC (rev 1372)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright ? 2005-2009 Vasco Nunes, Piotr O?arowski
+# Copyright ? 2005-2010 Vasco Nunes, Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -24,6 +24,6 @@
 pname = 'Griffith'
 pversion = '0.11'
 pauthor = 'Vasco Nunes, Piotr O?arowski <griffith-private at lists.berlios.de>'
-pyear = '2005-2009'
+pyear = '2005-2010'
 pwebsite = 'http://www.griffith.cc/'
 pdescription = _('Griffith is a film collection manager.')



From piotrek at mail.berlios.de  Mon Jan  4 22:26:53 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 22:26:53 +0100
Subject: [Griffith-svn] r1373 - trunk/debian
Message-ID: <201001042126.o04LQruO025878@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 22:26:53 +0100 (Mon, 04 Jan 2010)
New Revision: 1373

Modified:
   trunk/debian/changelog
   trunk/debian/control
Log:
add ${misc:Depends} to Depends


Modified: trunk/debian/changelog
===================================================================
--- trunk/debian/changelog	2010-01-04 21:20:40 UTC (rev 1372)
+++ trunk/debian/changelog	2010-01-04 21:26:53 UTC (rev 1373)
@@ -1,10 +1,10 @@
-griffith (0.10.1-1) unstable; urgency=low
+griffith (0.11-1) unstable; urgency=low
 
   * New upstream release
   * Recommend python-gtkspell instead on python-gnome2-extras (closes: #541600)
   * Bump Standards-Version to 3.8.3 (no changes needed)
 
- -- Piotr O?arowski <piotr at debian.org>  Sat, 26 Sep 2009 18:11:51 +0200
+ -- Piotr O?arowski <piotr at debian.org>  Mon, 04 Jan 2010 22:23:16 +0100
 
 griffith (0.10-1) unstable; urgency=low
 

Modified: trunk/debian/control
===================================================================
--- trunk/debian/control	2010-01-04 21:20:40 UTC (rev 1372)
+++ trunk/debian/control	2010-01-04 21:26:53 UTC (rev 1373)
@@ -13,7 +13,7 @@
 Package: griffith
 Architecture: all
 XB-Python-Version: ${python:Versions}
-Depends: ${python:Depends},
+Depends: ${python:Depends}, ${misc:Depends},
  python-sqlalchemy (>= 0.5),
  python-gtk2 (>= 2.8.6-1),
  python-glade2 (>= 2.8.6-1),



From piotrek at mail.berlios.de  Mon Jan  4 23:55:31 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Mon, 4 Jan 2010 23:55:31 +0100
Subject: [Griffith-svn] r1375 - trunk/docs/en
Message-ID: <201001042255.o04MtVOE002277@sheep.berlios.de>

Author: piotrek
Date: 2010-01-04 23:55:30 +0100 (Mon, 04 Jan 2010)
New Revision: 1375

Modified:
   trunk/docs/en/griffith.1
   trunk/docs/en/griffith.xml
Log:
typo fixed


Modified: trunk/docs/en/griffith.1
===================================================================
--- trunk/docs/en/griffith.1	2010-01-04 21:51:53 UTC (rev 1374)
+++ trunk/docs/en/griffith.1	2010-01-04 22:55:30 UTC (rev 1375)
@@ -38,7 +38,7 @@
 check dependencies - if all needed Python modules are installed, it prints nothting.
 .TP 
 \*(T<\fB\-\-sqlecho\fR\*(T> 
-Prints all SQL queries to standart output.
+Prints all SQL queries to standard output.
 .TP 
 \*(T<\fB\-\-home DIR\fR\*(T> 
 Set Griffith's home directory. Use this option if you want to change the default ~/.griffith

Modified: trunk/docs/en/griffith.xml
===================================================================
--- trunk/docs/en/griffith.xml	2010-01-04 21:51:53 UTC (rev 1374)
+++ trunk/docs/en/griffith.xml	2010-01-04 22:55:30 UTC (rev 1375)
@@ -81,7 +81,7 @@
 					<option>--sqlecho</option>
 				</term>
 				<listitem>
-					<para>Prints all SQL queries to standart output.</para> 
+					<para>Prints all SQL queries to standard output.</para> 
 				</listitem>
 			</varlistentry>
 			<varlistentry>



From mikej06 at mail.berlios.de  Tue Jan  5 12:46:15 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 5 Jan 2010 12:46:15 +0100
Subject: [Griffith-svn] r1376 - trunk/lib
Message-ID: <201001051146.o05BkFnu004941@sheep.berlios.de>

Author: mikej06
Date: 2010-01-05 12:45:53 +0100 (Tue, 05 Jan 2010)
New Revision: 1376

Modified:
   trunk/lib/edit.py
Log:
missing parameter added

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2010-01-04 22:55:30 UTC (rev 1375)
+++ trunk/lib/edit.py	2010-01-05 11:45:53 UTC (rev 1376)
@@ -49,7 +49,7 @@
 
 def update_image(self, number, filename):
     imagedata = file(filename, 'rb').read()
-    update_image_from_memory(number, imagedata)
+    update_image_from_memory(self, number, imagedata)
 
 def update_image_from_memory(self, number, data):
     session = self.db.Session()



From mikej06 at mail.berlios.de  Tue Jan  5 20:37:09 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 5 Jan 2010 20:37:09 +0100
Subject: [Griffith-svn] r1377 - trunk/lib/plugins/extensions
Message-ID: <201001051937.o05Jb9IS019229@sheep.berlios.de>

Author: mikej06
Date: 2010-01-05 20:36:59 +0100 (Tue, 05 Jan 2010)
New Revision: 1377

Modified:
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
correction of the movie title before looking for posters ("Movie, The" -> "The Movie")

Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 11:45:53 UTC (rev 1376)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 19:36:59 UTC (rev 1377)
@@ -54,6 +54,20 @@
         log.info('fetching poster from MoviePosterDB.com...')
         self.movie = movie
 
+        # correction of the movie name for the search
+        o_title = None
+        title = None
+        if movie.o_title is not None:
+            if len(movie.o_title) > 5 and movie.o_title[-5:] == u', The':
+                o_title = u'The ' + movie.o_title[:-5]
+            else:
+                o_title = movie.o_title
+        if movie.title is not None:
+            if len(movie.title) > 5 and movie.title[-5:] == u', The':
+                title = u'The ' + movie.title[:-5]
+            else:
+                title = movie.title
+
         # try to get an url to the large version of a poster for the movie
         # (requests are in the order:
         #  original title + year, original title only, title + year, title only)
@@ -61,22 +75,22 @@
             largeurl = None
             result = False
             self.encode = 'iso8859-1'
-            if movie.o_title:
+            if o_title:
                 if movie.year:
-                    url = self.baseurltitleyear % (movie.o_title, movie.year)
+                    url = self.baseurltitleyear % (o_title, movie.year)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
                 if not result or not largeurl:
-                    url = self.baseurltitle % movie.o_title
+                    url = self.baseurltitle % o_title
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
-            if not result or not largeurl and movie.title and not movie.title == movie.o_title:
+            if not result or not largeurl and title and not title == o_title:
                 if movie.year:
-                    url = self.baseurltitleyear % (movie.title, movie.year)
+                    url = self.baseurltitleyear % (title, movie.year)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
                 if not result or not largeurl:
-                    url = self.baseurltitle % movie.title
+                    url = self.baseurltitle % title
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
         except:



From piotrek at mail.berlios.de  Tue Jan  5 20:56:48 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 5 Jan 2010 20:56:48 +0100
Subject: [Griffith-svn] r1378 - trunk/lib/plugins/extensions
Message-ID: <201001051956.o05JumDo021268@sheep.berlios.de>

Author: piotrek
Date: 2010-01-05 20:56:48 +0100 (Tue, 05 Jan 2010)
New Revision: 1378

Modified:
   trunk/lib/plugins/extensions/__init__.py
Log:
no need to print destroy()'s output


Modified: trunk/lib/plugins/extensions/__init__.py
===================================================================
--- trunk/lib/plugins/extensions/__init__.py	2010-01-05 19:36:59 UTC (rev 1377)
+++ trunk/lib/plugins/extensions/__init__.py	2010-01-05 19:56:48 UTC (rev 1378)
@@ -33,6 +33,7 @@
 # minimum and maximum supported extension API
 COMPAT = (1, 1)
 
+
 class GriffithExtensionBase(object):
     """Griffith Extension
 
@@ -86,7 +87,7 @@
 
     def _on_toolbar_icon_clicked(self, button_widget):
         session = self.db.Session()
-        movie = session.query(db.Movie).filter(db.Movie.movie_id==self.app._movie_id).first()
+        movie = session.query(db.Movie).filter(db.Movie.movie_id == self.app._movie_id).first()
         if not movie:
             log.error('No movie selected')
         else:
@@ -96,15 +97,15 @@
 
     def __init__(self, griffith):
         """Initializes extension"""
-   
+
     def clear(self): # __del__ cannot be used here (signal reference issue)
         """Invoked when extension is about to be disabled"""
         if self.toolbar_icon_widget:
-            print self.toolbar_icon_widget.destroy()
+            self.toolbar_icon_widget.destroy()
 
     def maintree_clicked(self, selection, movie):
         """Invoked every time new movie is selected"""
-    
+
     def toolbar_icon_clicked(self, widget, movie):
         """Invoked when toolbar icon is clicked"""
 
@@ -113,7 +114,9 @@
         return conditions
 
 
-by_name = {} # extension modules by name 
+by_name = {} # extension modules by name
+
+
 def scan_for_extensions(path):
     """Adds new extensions from given path"""
 
@@ -140,4 +143,3 @@
             del sys.path[-1]
 
 scan_for_extensions(os.path.dirname(__file__)) # user's directory will be added later (in app)
-



From piotrek at mail.berlios.de  Tue Jan  5 20:59:55 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 5 Jan 2010 20:59:55 +0100
Subject: [Griffith-svn] r1379 - trunk/lib/plugins/extensions
Message-ID: <201001051959.o05JxtNP021966@sheep.berlios.de>

Author: piotrek
Date: 2010-01-05 20:59:53 +0100 (Tue, 05 Jan 2010)
New Revision: 1379

Modified:
   trunk/lib/plugins/extensions/ge_amazon.py
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
movieposterdb is not enabled and amazon extension disabled by default


Modified: trunk/lib/plugins/extensions/ge_amazon.py
===================================================================
--- trunk/lib/plugins/extensions/ge_amazon.py	2010-01-05 19:56:48 UTC (rev 1378)
+++ trunk/lib/plugins/extensions/ge_amazon.py	2010-01-05 19:59:53 UTC (rev 1379)
@@ -46,6 +46,7 @@
     email = 'piotr at griffith.cc'
     version = 1
     api = 1
+    enabled = False
 
     preferences = {'locale': {'name': _('Select source'),
                               'default': u'US',

Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 19:56:48 UTC (rev 1378)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 19:59:53 UTC (rev 1379)
@@ -39,7 +39,7 @@
     email = 'mike at griffith.cc'
     version = 1
     api = 1
-    enabled = False # disabled by default
+    enabled = True
 
     preferences = {}
     toolbar_icon = 'gtk-network'



From piotrek at mail.berlios.de  Tue Jan  5 21:04:42 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 5 Jan 2010 21:04:42 +0100
Subject: [Griffith-svn] r1380 - trunk/lib/plugins/extensions
Message-ID: <201001052004.o05K4gPf022381@sheep.berlios.de>

Author: piotrek
Date: 2010-01-05 21:04:41 +0100 (Tue, 05 Jan 2010)
New Revision: 1380

Modified:
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
cut few bytes of source code ;-)


Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 19:59:53 UTC (rev 1379)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 20:04:41 UTC (rev 1380)
@@ -57,13 +57,13 @@
         # correction of the movie name for the search
         o_title = None
         title = None
-        if movie.o_title is not None:
-            if len(movie.o_title) > 5 and movie.o_title[-5:] == u', The':
+        if movie.o_title:
+            if movie.o_title[-5:] == ', The':
                 o_title = u'The ' + movie.o_title[:-5]
             else:
                 o_title = movie.o_title
-        if movie.title is not None:
-            if len(movie.title) > 5 and movie.title[-5:] == u', The':
+        if movie.title:
+            if movie.title[-5:] == ', The':
                 title = u'The ' + movie.title[:-5]
             else:
                 title = movie.title



From mikej06 at mail.berlios.de  Tue Jan  5 21:05:37 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 5 Jan 2010 21:05:37 +0100
Subject: [Griffith-svn] r1381 - in trunk: . lib
Message-ID: <201001052005.o05K5bEP022433@sheep.berlios.de>

Author: mikej06
Date: 2010-01-05 21:05:23 +0100 (Tue, 05 Jan 2010)
New Revision: 1381

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/initialize.py
   trunk/lib/main_treeview.py
Log:
save and restore sorting column in main list
pep8ify

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-05 20:04:41 UTC (rev 1380)
+++ trunk/ChangeLog	2010-01-05 20:05:23 UTC (rev 1381)
@@ -5,6 +5,9 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-05  Michael Jahn
+	* save and restore sorting column in main list
+
 2010-01-04  Piotr O?arowski
 	* Add Croatian translation (thanks to Davor I and nafterburner)
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2010-01-05 20:04:41 UTC (rev 1380)
+++ trunk/griffith	2010-01-05 20:05:23 UTC (rev 1381)
@@ -1210,7 +1210,13 @@
             elif treeview_column == self.rating_column:
                 columnorder = columnorder + delimiter + 'rating'
                 delimiter = ','
-        self.config.set('columnorder',  columnorder,  section='mainlist')
+        self.config.set('columnorder', columnorder, section='mainlist')
+        columnsorting = self.treemodel.get_sort_column_id()
+        self.config.set('columnsortid', columnsorting[0], section='mainlist')
+        if columnsorting[1] == None:
+            self.config.set('columnsortorder', 0, section='mainlist')
+        else:
+            self.config.set('columnsortorder', int(columnsorting[1]), section='mainlist')
         self.config.save()
 
     def restore_state(self):

Modified: trunk/lib/initialize.py
===================================================================
--- trunk/lib/initialize.py	2010-01-05 20:04:41 UTC (rev 1380)
+++ trunk/lib/initialize.py	2010-01-05 20:05:23 UTC (rev 1381)
@@ -167,7 +167,7 @@
 
 
 def treeview(self):
-    self.treemodel = gtk.TreeStore(str, gtk.gdk.Pixbuf, str, str, str, str, bool, str, str)
+    self.treemodel = gtk.TreeStore(str, gtk.gdk.Pixbuf, str, str, str, str, bool, str, str, int)
     self.widgets['treeview'].set_model(self.treemodel)
     self.widgets['treeview'].set_headers_visible(True)
     # number column
@@ -281,6 +281,19 @@
             elif col == 'rating':
                 self.widgets['treeview'].move_column_after(self.rating_column, currentcol)
                 currentcol = self.rating_column
+    # reflect saved column sorting
+    columnsortid = self.config.get('columnsortid', None, section='mainlist')
+    columnsortorder = self.config.get('columnsortorder', None, section='mainlist')
+    try:
+        if columnsortid:
+            columnsortid = int(columnsortid)
+            if columnsortorder:
+                columnsortorder = gtk.SortType(int(columnsortorder))
+            else:
+                columnsortorder = gtk.SORT_ASCENDING
+            self.treemodel.set_sort_column_id(columnsortid, columnsortorder)
+    except:
+        log.exception('')
     # add data to treeview
     self.total = self.db.session.query(db.Movie).count()
     self.widgets['treeview'].show()

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2010-01-05 20:04:41 UTC (rev 1380)
+++ trunk/lib/main_treeview.py	2010-01-05 20:05:23 UTC (rev 1381)
@@ -34,6 +34,7 @@
 
 log = logging.getLogger("Griffith")
 
+
 def treeview_clicked(self):
     if self.initialized is False:
         return False
@@ -43,7 +44,7 @@
         if tmp_iter is None:
             log.info('Treeview: no selection')
             return False
-        number = tmp_model.get_value(tmp_iter,0)
+        number = tmp_model.get_value(tmp_iter, 0)
         movie = self.db.session.query(db.Movie).filter_by(number=number).first()
         if movie is None:
             log.info("Treeview: movie doesn't exists (number=%s)", number)
@@ -61,6 +62,7 @@
     else:
         set_details(self, {})
 
+
 def set_details(self, item=None):#{{{
     if item is None:
         item = {}
@@ -130,7 +132,7 @@
     else:
         w['genre'].set_text('')
     if 'cond' in item and item['cond']:
-        if str(item['cond']) in [ str(i) for i in range(len(self._conditions)) ]:
+        if str(item['cond']) in [str(i) for i in range(len(self._conditions))]:
             w['condition'].set_markup("<i>%s</i>" % self._conditions[item['cond']])
         else:
             w['condition'].set_text('')
@@ -138,7 +140,7 @@
     else:
         w['condition'].set_text('')
     if 'region' in item and item['region']:
-        if str(item['region']) in [ str(i) for i in range(len(self._regions)) ]:
+        if str(item['region']) in [str(i) for i in range(len(self._regions))]:
             w['region'].set_markup("<i>%s</i>" % gutils.html_encode(item['region']))
             if int(item['region']) < 9:
                 self.widgets['tooltips'].set_tip(w['region'], self._regions[int(item['region'])])
@@ -150,7 +152,7 @@
         w['region'].set_text('')
         self.widgets['tooltips'].set_tip(w['region'], self._regions[0]) # N/A
     if 'layers' in item and item['layers']:
-        if str(item['layers']) in [ str(i) for i in range(len(self._layers)) ]:
+        if str(item['layers']) in [str(i) for i in range(len(self._layers))]:
             w['layers'].set_markup("<i>%s</i>" % self._layers[item['layers']])
         else:
             log.info("Wrong value in 'layers' field (movie_id=%s, layers=%s)" % (item['movie_id'], item['layers']))
@@ -158,7 +160,7 @@
     else:
         w['layers'].set_text('')
     if 'color' in item and item['color']:
-        if str(item['color']) in [ str(i) for i in range(len(self._colors)) ]:
+        if str(item['color']) in [str(i) for i in range(len(self._colors))]:
             w['color'].set_markup("<i>%s</i>" % self._colors[item['color']])
         else:
             log.info("Wrong value in 'color' field (movie_id=%s, color=%s)" % (item['movie_id'], item['color']))
@@ -264,7 +266,7 @@
         w['loan_button'].set_sensitive(False)
         w['email_reminder_button'].set_sensitive(True)
         w['return_button'].set_sensitive(True)
-        
+
         if getattr(item, 'loan_details', None) is None:
             log.warning("movie has no loan data, changing 'loaned' flag to False (movie_id: %s)", item['movie_id'])
             item.loaned = False
@@ -286,12 +288,12 @@
         w['loan_button'].set_sensitive(True)
         w['loan_info'].set_markup("<b>%s</b>" % _("Movie not loaned"))
 
-    # loan history    
+    # loan history
     self.loans_treemodel.clear()
     if getattr(item, 'loan_history', None) is not None:
         for loan in item.loan_history:
             myiter = self.loans_treemodel.append(None)
-            self.loans_treemodel.set_value(myiter, 0,'%s' % str(loan.date)[:10])
+            self.loans_treemodel.set_value(myiter, 0, '%s' % str(loan.date)[:10])
             if loan.return_date and  loan.return_date != '':
                 self.loans_treemodel.set_value(myiter, 1, str(loan.return_date)[:10])
             else:
@@ -300,7 +302,7 @@
             self.loans_treemodel.set_value(myiter, 2, person.name)
 
     # volumes/collections
-    if 'volume_id' in item and item['volume_id']>0:
+    if 'volume_id' in item and item['volume_id'] > 0:
         if 'volume' in item and item['volume']:
             w['volume'].set_markup("<b>%s</b>" % gutils.html_encode(item['volume'].name))
             w['show_volume_button'].set_sensitive(True)
@@ -310,7 +312,7 @@
     else:
             w['volume'].set_text('')
             w['show_volume_button'].set_sensitive(False)
-    if 'collection_id' in item and item['collection_id']>0:
+    if 'collection_id' in item and item['collection_id'] > 0:
         if 'collection' in item and item['collection']:
             w['collection'].set_markup("<b>%s</b>" % gutils.html_encode(item['collection'].name))
             w['show_collection_button'].set_sensitive(True)
@@ -326,7 +328,7 @@
         i.destroy()
     for i in w['subtitle_vbox'].get_children():
         i.destroy()
-    if 'languages' in item and len(item['languages'])>0:
+    if 'languages' in item and len(item['languages']) > 0:
         for i in item['languages']:
             if i.type == 3: # subtitles
                 if i.subformat:
@@ -336,17 +338,17 @@
                 w['subtitle_vbox'].pack_start(gtk.Label(tmp))
             else:
                 language = i.language.name
-                if i.type is not None and len(self._lang_types[i.type])>0:
+                if i.type is not None and len(self._lang_types[i.type]) > 0:
                     language += " <i>%s</i>" % self._lang_types[i.type]
                 tmp = ''
                 if i.achannel:
                     tmp = i.achannel.name
                 if i.acodec:
-                    if len(tmp)>0:
+                    if len(tmp) > 0:
                         tmp += ", %s" % i.acodec.name
                     else:
                         tmp = i.acodec.name
-                if len(tmp)>0:
+                if len(tmp) > 0:
                     tmp = "%s (%s)" % (language, tmp)
                 else:
                     tmp = language
@@ -363,15 +365,16 @@
         tmp = tmp[:-2] # cut last comma
         w['tags'].set_text(tmp)
     #}}}
-    
+
+
 def populate(self, movies=None, where=None, qf=True):#{{{
     if self.initialized is False: # dont try to fill movie list if Griffith is not initialized yet
         return False
-    
+
     if qf and not movies or isinstance(movies, Select): # if ".execute().fetchall()" not invoked on movies yet
         if not where: # due to possible 'seen', 'loaned', 'collection_id' in where
             import advfilter
-            
+
             # saved in advfilter
             name = self.widgets['filter']['advfilter'].get_active_text()[:-3].decode('utf-8') # :-3 due to additional '   ' in the name
             if name:
@@ -414,12 +417,12 @@
             else:
                 cond['sort_by'] = set((sort_column_name, ))
             movies = sql.update_whereclause(movies, cond)
-        
+
         # additional whereclause (volume_id, collection_id, ...)
         if where:
             for i in where:
                 if i in db.Movie:
-                    movies.append_whereclause(db.Movie[i]==where[i])
+                    movies.append_whereclause(db.Movie[i] == where[i])
         movies = movies.execute().fetchall()
 
     self.total = len(movies)
@@ -474,12 +477,12 @@
         self.rating_column.set_visible(True)
     else:
         self.rating_column.set_visible(False)
-        
+
     for movie in movies:
         myiter = self.treemodel.append(None)
-        
-        self.treemodel.set_value(myiter,0,'%004d' % int(movie.number))
 
+        self.treemodel.set_value(myiter, 0, '%004d' % int(movie.number))
+
         if self.config.get('image', True, section='mainlist') == True:
             filename = None
             if movie.poster_md5:
@@ -490,22 +493,22 @@
             self.Image.set_from_file(filename)
             pixbuf = self.Image.get_pixbuf()
             self.treemodel.set_value(myiter, 1, pixbuf)
-        self.treemodel.set_value(myiter,2,movie.o_title)
-        self.treemodel.set_value(myiter,3,movie.title)
-        self.treemodel.set_value(myiter,4,movie.director)
-        self.treemodel.set_value(myiter,5,movie.genre)
-        self.treemodel.set_value(myiter,6,movie.seen)
+        self.treemodel.set_value(myiter, 2, movie.o_title)
+        self.treemodel.set_value(myiter, 3, movie.title)
+        self.treemodel.set_value(myiter, 4, movie.director)
+        self.treemodel.set_value(myiter, 5, movie.genre)
+        self.treemodel.set_value(myiter, 6, movie.seen)
         if movie.year is not None and (isinstance(movie.year, int) or isinstance(movie.year, long)):
-            self.treemodel.set_value(myiter,7,movie.year)
+            self.treemodel.set_value(myiter, 7, movie.year)
         if movie.runtime is not None and (isinstance(movie.runtime, int) or isinstance(movie.runtime, long)):
-            self.treemodel.set_value(myiter,8, '%003d' % movie.runtime + _(' min'))
+            self.treemodel.set_value(myiter, 8, '%003d' % movie.runtime + _(' min'))
         if movie.rating is not None and (isinstance(movie.rating, int) or isinstance(movie.rating, long)):
-            self.treemodel.set_value(myiter,9,movie.rating)
+            self.treemodel.set_value(myiter, 9, movie.rating)
 
     # restore user sort column
     if sort_column_id is not None:
-        self.treemodel.set_sort_column_id(sort_column_id, gtk.SORT_ASCENDING)
-    
+        self.treemodel.set_sort_column_id(sort_column_id, order)
+
     # add new treemodel and allow refreshs again
     self.widgets['treeview'].set_model(self.treemodel)
     self.widgets['treeview'].thaw_child_notify()



From piotrek at mail.berlios.de  Tue Jan  5 21:30:30 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 5 Jan 2010 21:30:30 +0100
Subject: [Griffith-svn] r1382 - trunk/lib/plugins/extensions
Message-ID: <201001052030.o05KUUtr024516@sheep.berlios.de>

Author: piotrek
Date: 2010-01-05 21:30:30 +0100 (Tue, 05 Jan 2010)
New Revision: 1382

Modified:
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
use urllib's quote to clean the url


Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 20:05:23 UTC (rev 1381)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 20:30:30 UTC (rev 1382)
@@ -22,13 +22,14 @@
 # GNU General Public License, version 2 or later
 
 import os
-from urllib import urlcleanup, FancyURLopener, urlretrieve
+import logging
+from urllib import quote, urlcleanup
 import gtk
 import gutils
-from plugins.extensions import GriffithExtensionBase as Base
 from edit import update_image_from_memory
 from movie import Progress, Retriever
-import logging
+from plugins.extensions import GriffithExtensionBase as Base
+
 log = logging.getLogger('Griffith')
 
 
@@ -41,7 +42,6 @@
     api = 1
     enabled = True
 
-    preferences = {}
     toolbar_icon = 'gtk-network'
 
     baseurltitle = 'http://www.movieposterdb.com/embed.inc.php?movie_title=%s'
@@ -77,20 +77,20 @@
             self.encode = 'iso8859-1'
             if o_title:
                 if movie.year:
-                    url = self.baseurltitleyear % (o_title, movie.year)
+                    url = self.baseurltitleyear % (quote(o_title), movie.year)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
                 if not result or not largeurl:
-                    url = self.baseurltitle % o_title
+                    url = self.baseurltitle % quote(o_title)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
-            if not result or not largeurl and title and not title == o_title:
+            if not result or not largeurl and title and title != o_title:
                 if movie.year:
-                    url = self.baseurltitleyear % (title, movie.year)
+                    url = self.baseurltitleyear % (quote(title), movie.year)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
                 if not result or not largeurl:
-                    url = self.baseurltitle % title
+                    url = self.baseurltitle % quote(title)
                     result = self.search(url, self.widgets['window'])
                     largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
         except:
@@ -142,7 +142,6 @@
 
     def _search(self, url, parent_window):
         result = False
-        url = url.replace(' ', '%20')
         try:
             if self.encode:
                 url = url.encode(self.encode)



From mikej06 at mail.berlios.de  Tue Jan  5 22:04:10 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue, 5 Jan 2010 22:04:10 +0100
Subject: [Griffith-svn] r1383 - in trunk: . lib/plugins/movie
Message-ID: <201001052104.o05L4Am1028844@sheep.berlios.de>

Author: mikej06
Date: 2010-01-05 22:04:00 +0100 (Tue, 05 Jan 2010)
New Revision: 1383

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieStopklatka.py
Log:
updated movie plugin Stopklatka
(result list doesn't work correct at the moment, every second movie is missing)

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-05 20:30:30 UTC (rev 1382)
+++ trunk/ChangeLog	2010-01-05 21:04:00 UTC (rev 1383)
@@ -7,6 +7,7 @@
 
 2010-01-05  Michael Jahn
 	* save and restore sorting column in main list
+	* updated movie plugin Stopklatka
 
 2010-01-04  Piotr O?arowski
 	* Add Croatian translation (thanks to Davor I and nafterburner)

Modified: trunk/lib/plugins/movie/PluginMovieStopklatka.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieStopklatka.py	2010-01-05 20:30:30 UTC (rev 1382)
+++ trunk/lib/plugins/movie/PluginMovieStopklatka.py	2010-01-05 21:04:00 UTC (rev 1383)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2009 Piotr O?arowski
+# Copyright (c) 2005-2010 Piotr O?arowski
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -21,8 +21,10 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-import gutils, movie
-import string, re
+import gutils
+import movie
+import string
+import re
 
 plugin_name         = 'Stopklatka'
 plugin_description  = 'Internetowy Serwis Filmowy'
@@ -32,20 +34,25 @@
 plugin_author_email = '<bartosz.kurczewski at gmail.com>'
 plugin_version      = '1.11'
 
+
 class Plugin(movie.Movie):
     IMAGE_PATTERN = re.compile('(http://img.stopklatka.pl/film/.*?)"')
 
     def __init__(self, id):
         self.movie_id = id
         self.url = "http://www.stopklatka.pl/film/film.asp?fi=%s" % str(self.movie_id)
-        self.encode = 'utf-8' 
+        self.encode = 'utf-8'
 
     def initialize(self):
-        self.page = self.page.replace('\x9c','?')
-        self.page = self.page.replace('?','?')
+        self.page = self.page.replace(u'\x9c', u'?')
+        self.page = self.page.replace(u'?', u'?')
         self.res = re.findall("""<td class="middle_cell"><span class="bold">(.*?)</span>, (.*?), (.*?), (.*?) min</td>""", self.page)
         if len(self.res) == 0:
-            self.res = [( '','','','' )]
+            self.res = [('', '', '', '')]
+        url = "http://www.stopklatka.pl/film/film.asp?fi=%s&sekcja=osoby" % str(self.movie_id)
+        self.creditspage = self.open_page(self.parent_window, url=url)
+        self.creditspage = self.creditspage.replace(u'\x9c', u'?')
+        self.creditspage = self.creditspage.replace(u'?', u'?')
 
     def get_image(self):
         image = self.IMAGE_PATTERN.findall(self.page)
@@ -65,12 +72,16 @@
             self.title = data
 
     def get_director(self):
-        self.director = gutils.trim(self.page, '>re?yseria: <', '</span></a>')
+        self.director = gutils.trim(self.creditspage, u're?yseria: <', '</tr>')
         self.director = gutils.after(self.director, '>')
+        self.director = self.director.replace('<br />', ', ')
+        self.director = gutils.clean(self.director)
+        if self.director.endswith(','):
+            self.director = self.director[:-1]
 
     def get_plot(self):
         self.plot = gutils.trim(self.page, '<p>', '</p>')
-        self.plot = gutils.before(self.plot, '<b>Wi?cej ')
+        self.plot = gutils.before(self.plot, u'<b>Wi?cej ')
 
     def get_year(self):
         self.year = self.res[0][2]
@@ -82,10 +93,10 @@
         self.genre = self.res[0][0]
 
     def get_cast(self):
-        self.cast = gutils.trim(self.page, '>obsada:<', '</td></tr>')
+        self.cast = gutils.trim(self.creditspage, 'obsada: <', '</td></tr>')
         self.cast = gutils.after(self.cast, '>')
-        self.cast = string.replace(self.cast, ', ', "\n")
-        self.cast = gutils.before(self.cast, '<b>Wi?cej')
+        self.cast = self.cast.replace(' jako ', _(' as '))
+        self.cast = string.replace(self.cast, '<br />', "\n")
 
     def get_classification(self):
         self.classification = ''
@@ -94,8 +105,8 @@
         self.studio = ""
 
     def get_o_site(self):
-        self.o_site = gutils.trim(self.page,">strona oficjalna:<"," target=_blank")
-        self.o_site = gutils.after(self.o_site,"href=")
+        self.o_site = gutils.trim(self.page, ">strona oficjalna:<", " target=_blank")
+        self.o_site = gutils.after(self.o_site, "href=")
 
     def get_site(self):
         self.site = self.url
@@ -107,29 +118,53 @@
         self.country = self.res[0][1]
 
     def get_rating(self):
-        self.rating = gutils.trim(self.page,'</script></span> (',')')
+        self.rating = 0
+        tmp = re.search(u'Ocena u?ytkownik?w:[^(]+[(]([0-9]+[,]*[0-9]*)[)]', self.page)
+        if tmp:
+            try:
+                self.rating = int(round(float(tmp.group(1).replace(',', '.')), 0))
+            except:
+                pass
 
     def get_notes(self):
         self.notes = ''
 
+    def get_cameraman(self):
+        self.cameraman = gutils.regextrim(self.creditspage, u'zdj?cia: <', '(</tr>|<tr>)')
+        self.cameraman = gutils.after(self.cameraman, '>')
+        self.cameraman = self.cameraman.replace('<br />', ', ')
+        self.cameraman = gutils.clean(self.cameraman)
+        if self.cameraman.endswith(','):
+            self.cameraman = self.cameraman[:-1]
+
+    def get_screenplay(self):
+        self.screenplay = gutils.trim(self.creditspage, u'scenariusz: <', '</tr>')
+        self.screenplay = gutils.after(self.screenplay, '>')
+        self.screenplay = self.screenplay.replace('<br />', ', ')
+        self.screenplay = gutils.clean(self.screenplay)
+        if self.screenplay.endswith(','):
+            self.screenplay = self.screenplay[:-1]
+
+
 class SearchPlugin(movie.SearchMovie):
+
     def __init__(self):
-        self.encode='utf-8'
-        self.original_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
-        self.translated_url_search    = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
+        self.encode = 'utf-8'
+        self.original_url_search = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
+        self.translated_url_search = "http://www.stopklatka.pl/szukaj/szukaj.asp?kategoria=film&szukaj="
 
-    def search(self,parent_window):
+    def search(self, parent_window):
         if not self.open_search(parent_window):
             return None
-        self.page = gutils.trim(self.page, '>Wyniki poszukiwania frazy:', '</div>');
-        self.page = self.page.replace('\x9c','?')
-        self.page = self.page.replace('?','?')
+        self.page = gutils.trim(self.page, '>Wyniki poszukiwania frazy:', '</div>')
+        self.page = self.page.replace(u'\x9c', u'?')
+        self.page = self.page.replace(u'?', u'?')
         return self.page
 
     def get_searches(self):
-        elements = re.findall("""/film/film.asp\?fi=(\d+)">.*?searchTitle\s*textB">(.*?)</span>.*?"> (.*?)</span>""", self.page)
+        elements = re.findall("""/film/film.asp\?fi=(\d+)"[^>]*>.*?searchTitle\s*textB">(.*?)</span>.*?"> (.*?)</span>""", self.page)
         self.number_results = len(elements)
 
         for element in elements:
             self.ids.append(element[0])
-            self.titles.append(element[1] + ' ' + element[2])
+            self.titles.append(gutils.clean(element[1]) + ' ' + element[2])



From piotrek at mail.berlios.de  Tue Jan  5 23:24:53 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Tue, 5 Jan 2010 23:24:53 +0100
Subject: [Griffith-svn] r1384 - in trunk/lib: . plugins/extensions
Message-ID: <201001052224.o05MOrtK004901@sheep.berlios.de>

Author: piotrek
Date: 2010-01-05 23:24:53 +0100 (Tue, 05 Jan 2010)
New Revision: 1384

Modified:
   trunk/lib/edit.py
   trunk/lib/gutils.py
   trunk/lib/plugins/extensions/ge_movieposterdb.py
Log:
* don't try to update poster if MD5 sum is the sam
* cleanups
* pep8ify


Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2010-01-05 21:04:00 UTC (rev 1383)
+++ trunk/lib/edit.py	2010-01-05 22:24:53 UTC (rev 1384)
@@ -2,7 +2,7 @@
 
 __revision__ = '$Id$'
 
-# Copyright (c) 2005-2009 Vasco Nunes, Piotr O?arowski
+# Copyright ? 2005-2010 Vasco Nunes, Piotr O?arowski
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -22,7 +22,6 @@
 # GNU General Public License, version 2 or later
 
 import logging
-import os
 
 import gtk
 
@@ -32,6 +31,7 @@
 
 log = logging.getLogger("Griffith")
 
+
 def change_poster(self):
     """
     changes movie poster image to a custom one
@@ -40,17 +40,27 @@
     picture = self.widgets['movie']['picture']
     number = self.get_maintree_selection()[0]
     if number is None:
-        gutils.error(self,_("You have no movies in your database"), self.widgets['window'])
+        gutils.error(self, _("You have no movies in your database"), self.widgets['window'])
         return False
-    filename = gutils.file_chooser(_("Select image"), action=gtk.FILE_CHOOSER_ACTION_OPEN, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK), name="", folder=self.locations['desktop'], picture=True)
+    filename = gutils.file_chooser(_("Select image"),
+                                   action=gtk.FILE_CHOOSER_ACTION_OPEN,
+                                   buttons=(gtk.STOCK_CANCEL,
+                                            gtk.RESPONSE_CANCEL,
+                                            gtk.STOCK_OPEN,
+                                            gtk.RESPONSE_OK),
+                                   name='',
+                                   folder=self.locations['desktop'],
+                                   picture=True)
     if filename and filename[0]:
         filename = filename[0].decode('UTF-8')
         update_image(self, number, filename)
 
+
 def update_image(self, number, filename):
     imagedata = file(filename, 'rb').read()
     update_image_from_memory(self, number, imagedata)
 
+
 def update_image_from_memory(self, number, data):
     session = self.db.Session()
     try:
@@ -67,6 +77,10 @@
     poster_md5 = gutils.md5sum(data)
 
     movie = session.query(db.Movie).filter_by(number=number).one()
+    if poster_md5 == movie.poster_md5:
+        log.debug('same MD5 sum, no need to update poster')
+        return False
+
     old_poster_md5 = movie.poster_md5
 
     if session.query(db.Poster).filter_by(md5sum=poster_md5).count() == 0:
@@ -75,9 +89,6 @@
 
     # update the md5 *after* all other queries (so that UPDATE will not be invoked)
     movie.poster_md5 = poster_md5
-    
-    if old_poster_md5:
-        delete.delete_poster(self, old_poster_md5)
 
     session.add(movie)
     try:
@@ -87,6 +98,9 @@
         log.error("cannot add poster to database: %s" % e)
         return False
 
+    if old_poster_md5:
+        delete.delete_poster(self, old_poster_md5)
+
     filename = gutils.get_image_fname(poster_md5, self.db, 's')
     if filename:
         update_tree_thumbnail(self, filename)
@@ -96,6 +110,7 @@
 
     self.update_statusbar(_("Image has been updated"))
 
+
 def delete_poster(self):
     session = self.db.Session()
     movie = session.query(db.Movie).filter_by(movie_id=self._movie_id).first()
@@ -107,7 +122,7 @@
         handler = self.widgets['movie']['picture'].set_from_pixbuf(gtk.gdk.pixbuf_new_from_file(image_path))
         gutils.garbage(handler)
         update_tree_thumbnail(self, gutils.get_defaultthumbnail_fname(self))
-        
+
         # update in database
         delete.delete_poster(self, movie.poster_md5)
         movie.poster_md5 = None
@@ -126,6 +141,7 @@
     else:
         pass
 
+
 def update_tree_thumbnail(self, t_image_path):
     treeselection = self.widgets['treeview'].get_selection()
     (tmp_model, tmp_iter) = treeselection.get_selected()
@@ -134,4 +150,3 @@
     # tmp_iter can be None while importing data
     if tmp_iter:
         self.treemodel.set_value(tmp_iter, 1, pixbuf)
-

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2010-01-05 21:04:00 UTC (rev 1383)
+++ trunk/lib/gutils.py	2010-01-05 22:24:53 UTC (rev 1384)
@@ -21,23 +21,26 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import gzip
+import htmlentitydefs
+import logging
+import os
+import re
 import string
-import os
 import sys
+import webbrowser
+from StringIO import StringIO
 try:
     import gtk
     import db
 except:
     gtk = None
     pass
-import htmlentitydefs
-import re
-import webbrowser
-import logging
 log = logging.getLogger("Griffith")
 
 ENTITY = re.compile(r'\&.\w*?\;')
 
+
 def remove_accents(txt, encoding='iso-8859-1'):
     d = {192: u'A', 193: u'A', 194: u'A', 195: u'A', 196: u'A', 197: u'A',
          199: u'C', 200: u'E', 201: u'E', 202: u'E', 203: u'E', 204: u'I',
@@ -51,9 +54,11 @@
          255: u'y'}
     return unicode(txt, encoding).translate(d)
 
+
 def is_number(x):
     return isinstance(x, int)
 
+
 def find_next_available(gsql):
     """
     finds next available movie number.
@@ -77,19 +82,21 @@
         number = first + 1
         return number
 
+
 def trim(text, key1, key2):
     p1 = string.find(text, key1)
     if p1 == -1:
         return ''
     else:
-        p1 = p1+len(key1)
+        p1 = p1 + len(key1)
     p2 = string.find(text[p1:], key2)
     if p2 == -1:
         return ""
     else:
-        p2 = p1+p2
+        p2 = p1 + p2
     return text[p1:p2]
 
+
 def regextrim(text, key1, key2):
     obj = re.search(key1, text)
     if obj is None:
@@ -103,19 +110,23 @@
         p2 = p1 + obj.start()
     return text[p1:p2]
 
+
 def after(text, key):
-    p1 = string.find(text,key)
-    return text[p1+len(key):]
+    p1 = string.find(text, key)
+    return text[p1 + len(key):]
 
+
 def before(text, key):
-    p1 = string.find(text,key)
+    p1 = string.find(text, key)
     return text[:p1]
 
+
 def gescape(text):
-    text=string.replace(text,"'", "''")
-    text=string.replace(text,"--", "-")
+    text = string.replace(text, "'", "''")
+    text = string.replace(text, "--", "-")
     return text
 
+
 def progress(blocks, size_block, size):
     transfered = blocks * size_block
     if size > 0 and transfered > size:
@@ -126,6 +137,7 @@
 
 # functions to handle comboboxentry stuff
 
+
 def set_model_from_list(cb, items):
     """Setup a ComboBox or ComboBoxEntry based on a list of strings."""
     model = gtk.ListStore(str)
@@ -139,6 +151,7 @@
         cb.pack_start(cell, True)
         cb.add_attribute(cell, 'text', 0)
 
+
 def on_combo_box_entry_changed(widget):
     model = widget.get_model()
     m_iter = widget.get_active_iter()
@@ -150,10 +163,13 @@
     else:
         return 0
 
+
 def on_combo_box_entry_changed_name(widget):
     return widget.get_active_text()
 
+
 def convert_entities(text):
+
     def conv(ents):
         entities = htmlentitydefs.entitydefs
         ents = ents.group(0)
@@ -187,6 +203,7 @@
         ctext = in_entity.re.sub(conv, text)
         return ctext
 
+
 def strip_tags(text):
     if text is None:
         return ''
@@ -200,14 +217,16 @@
             stop = text[start:].find(">")
             if stop >= 0:
                 # if it does, strip it, and continue loop
-                text = text[:start] + text[start+stop+1:]
+                text = text[:start] + text[start + stop + 1:]
                 finished = 0
     return text
 
+
 def save_pixmap(self, pixmap, filename):
     """XXX: deprecated"""
-    pixmap.save(filename, "jpeg", {"quality":"70"})
+    pixmap.save(filename, 'jpeg', {'quality': '70'})
 
+
 def clean(text):
     t = strip_tags(text)
     t = string.replace(t, '&nbsp;', ' ')
@@ -215,6 +234,7 @@
     t = string.replace(t, '&#160;', ' ')
     return string.strip(t)
 
+
 def gdecode(txt, encode):
     try:
         return txt.decode(encode)
@@ -223,6 +243,7 @@
 
 # Messages
 
+
 def error(self, msg, parent=None):
     dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
@@ -231,6 +252,7 @@
     dialog.run()
     dialog.destroy()
 
+
 def urllib_error(msg, parent=None):
     dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
@@ -239,6 +261,7 @@
     dialog.run()
     dialog.destroy()
 
+
 def warning(msg, parent=None):
     dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
@@ -247,6 +270,7 @@
     dialog.run()
     dialog.destroy()
 
+
 def info(msg, parent=None):
     dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
@@ -255,6 +279,7 @@
     dialog.run()
     dialog.destroy()
 
+
 def question(msg, window=None):
     dialog = gtk.MessageDialog(window,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
@@ -267,10 +292,12 @@
     dialog.destroy()
     return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
 
+
 def popup_message(message):
     """shows popup message while executing decorated function"""
 
     def wrap(f):
+
         def wrapped_f(*args, **kwargs):
             if gtk:
                 window = gtk.Window()
@@ -299,6 +326,7 @@
         return wrapped_f
     return wrap
 
+
 def file_chooser(title, action=None, buttons=None, name='', folder=os.path.expanduser('~'), picture=False, backup=False):
     dialog = gtk.FileChooserDialog(title=title, action=action, buttons=buttons)
     dialog.set_default_response(gtk.RESPONSE_OK)
@@ -344,6 +372,7 @@
     dialog.destroy()
     return filename, path
 
+
 def update_preview_cb(file_chooser, preview):
     filename = file_chooser.get_preview_filename()
     try:
@@ -355,25 +384,31 @@
     file_chooser.set_preview_widget_active(have_preview)
     return
 
+
 def run_browser(url):
     webbrowser.register('open', webbrowser.GenericBrowser("open '%s'"))
     webbrowser._tryorder.append('open')
     webbrowser.open(url)
 
+
 def read_plugins(prefix, directory):
     """returns available plugins"""
 
     import glob
-    return glob.glob("%s/%s*.py" % (directory,prefix) )
+    return glob.glob("%s/%s*.py" % (directory, prefix))
 
+
 def findKey(val, dict):
     for key, value in dict.items():
-        if value == val: return key
+        if value == val:
+            return key
     return None
 
+
 def garbage(handler):
     pass
 
+
 def clean_posters_dir(self):
     posters_dir = self.locations['posters']
     counter = 0
@@ -387,20 +422,20 @@
             else:
                 poster_md5 = md5sum(file(filepath, 'rb'))
                 # lets check if this poster is orphan
-                used = self.db.session.query(db.Poster).filter(db.Poster.md5sum==poster_md5).count()
+                used = self.db.session.query(db.Poster).filter(db.Poster.md5sum == poster_md5).count()
                 if not used:
                     counter += 1
                     os.unlink(filepath)
 
     if counter:
-        print "%d orphan files cleaned." %counter
+        print "%d orphan files cleaned." % counter
     else:
         print "No orphan files found."
 
+
 def decompress(data):
-    import gzip, StringIO
     try:
-        compressedStream = StringIO.StringIO(data)
+        compressedStream = StringIO(data)
         gzipper = gzip.GzipFile(fileobj=compressedStream)
         data = gzipper.read()
     except Exception, e:
@@ -408,19 +443,19 @@
         pass
     return data
 
+
 def get_dependencies():
     depend = []
 
     # Python version
     if sys.version_info[:2] < (2, 5):
         depend.append({'module': 'python',
-            'version'    : '-'+'.'.join(map(str,sys.version_info)),
-            'module_req' : '2.5',
-            'url'        : 'http://www.python.org/',
-            'debian'     : 'python',
-            'debian_req' : '2.5'
+            'version': '-' + '.'.join(map(str, sys.version_info)),
+            'module_req': '2.5',
+            'url': 'http://www.python.org/',
+            'debian': 'python',
+            'debian_req': '2.5'})
             # TODO: 'fedora', 'suse', etc.
-        })
 
     try:
         import gtk
@@ -430,13 +465,12 @@
     except:
         version = False
     depend.append({'module': 'gtk',
-        'version'    : version,
-        'module_req' : '2.6',
-        'url'        : 'http://www.pygtk.org/',
-        'debian'     : 'python-gtk2',
-        'debian_req' : '2.8.6-1'
+        'version': version,
+        'module_req': '2.6',
+        'url': 'http://www.pygtk.org/',
+        'debian': 'python-gtk2',
+        'debian_req': '2.8.6-1'})
         # TODO: 'fedora', 'suse', etc.
-    })
 
     try:
         import gtk.glade
@@ -444,12 +478,11 @@
     except:
         version = False
     depend.append({'module': 'gtk.glade',
-        'version'    : version,
-        'module_req' : '2.6',
-        'url'        : 'http://www.pygtk.org/',
-        'debian'     : 'python-glade2',
-        'debian_req' : '2.8.6-1'
-    })
+        'version': version,
+        'module_req': '2.6',
+        'url': 'http://www.pygtk.org/',
+        'debian': 'python-glade2',
+        'debian_req': '2.8.6-1'})
     try:
         import sqlalchemy
         if map(int, sqlalchemy.__version__.split('.')[:2]) < [0, 5]:
@@ -459,12 +492,11 @@
     except:
         version = False
     depend.append({'module': 'sqlalchemy',
-        'version'    : version,
-        'module_req' : '0.5rc3',
-        'url'        : 'http://www.sqlalchemy.org/',
-        'debian'     : 'python-sqlalchemy',
-        'debian_req' : '0.5~rc3'
-    })
+        'version': version,
+        'module_req': '0.5rc3',
+        'url': 'http://www.sqlalchemy.org/',
+        'debian': 'python-sqlalchemy',
+        'debian_req': '0.5~rc3'})
     try:
         import sqlite3
         version = sqlite3.version
@@ -477,40 +509,36 @@
         except:
             version = False
         depend.append({'module': 'pysqlite2',
-            'version'    : version,
-            'url'        : 'http://initd.org/tracker/pysqlite',
-            'debian'     : 'python-pysqlite2',
-            'debian_req' : '2.3.0-1'
-        })
+            'version': version,
+            'url': 'http://initd.org/tracker/pysqlite',
+            'debian': 'python-pysqlite2',
+            'debian_req': '2.3.0-1'})
     else:
         depend.append({'module': 'sqlite3',
-            'version'    : version,
-            'url'        : 'http://www.python.org',
-            'debian'     : 'python',
-            'debian_req' : '2.5'
-        })
+            'version': version,
+            'url': 'http://www.python.org',
+            'debian': 'python',
+            'debian_req': '2.5'})
     try:
         import reportlab
         version = reportlab.Version
     except:
         version = False
     depend.append({'module': 'reportlab',
-        'version'    : version,
-        'url'        : 'http://www.reportlab.org/',
-        'debian'     : 'python-reportlab',
-        'debian_req' : '1.20debian-6'
-    })
+        'version': version,
+        'url': 'http://www.reportlab.org/',
+        'debian': 'python-reportlab',
+        'debian_req': '1.20debian-6'})
     try:
         import PIL
         version = True
     except:
         version = False
     depend.append({'module': 'PIL',
-        'version'    : version,
-        'url'        : 'http://www.pythonware.com/products/pil/',
-        'debian'     : 'python-imaging',
-        'debian_req' : '1.1.5-6'
-    })
+        'version': version,
+        'url': 'http://www.pythonware.com/products/pil/',
+        'debian': 'python-imaging',
+        'debian_req': '1.1.5-6'})
     # extra dependencies:
     optional = []
     try:
@@ -519,44 +547,41 @@
     except:
         version = False
     optional.append({'module': 'psycopg2',
-        'version'    : version,
-        'url'        : 'http://initd.org/tracker/psycopg/wiki/PsycopgTwo',
-        'debian'     : 'python-psycopg2',
-        'debian_req' : '1.1.21-6'
-    })
+        'version': version,
+        'url': 'http://initd.org/tracker/psycopg/wiki/PsycopgTwo',
+        'debian': 'python-psycopg2',
+        'debian_req': '1.1.21-6'})
     try:
         import MySQLdb
-        version    = '.'.join([str(i) for i in MySQLdb.version_info])
+        version = '.'.join([str(i) for i in MySQLdb.version_info])
     except:
         version = False
     optional.append({'module': 'MySQLdb',
-        'version'    : version,
-        'url'        : 'http://sourceforge.net/projects/mysql-python',
-        'debian'     : 'python-mysqldb',
-        'debian_req' : '1.2.1-p2-2'
-    })
+        'version': version,
+        'url': 'http://sourceforge.net/projects/mysql-python',
+        'debian': 'python-mysqldb',
+        'debian_req': '1.2.1-p2-2'})
     try:
         import chardet
-        version    = chardet.__version__
+        version = chardet.__version__
     except:
         version = False
     optional.append({'module': 'chardet',
-        'version' : version,
-        'url'     : 'http://chardet.feedparser.org/',
-        'debian'  : 'python-chardet'
-    })
+        'version': version,
+        'url': 'http://chardet.feedparser.org/',
+        'debian': 'python-chardet'})
     try:
         import sqlite
-        version    = sqlite.version
+        version = sqlite.version
     except:
         version = False
     optional.append({'module': 'sqlite',
-        'version' : version,
-        'url'     : 'http://initd.org/tracker/pysqlite',
-        'debian'  : 'python-sqlite'
-    })
+        'version': version,
+        'url': 'http://initd.org/tracker/pysqlite',
+        'debian': 'python-sqlite'})
     return depend, optional
 
+
 def html_encode(s):
     if not isinstance(s, basestring):
         s = str(s)
@@ -566,10 +591,10 @@
     s = s.replace('"', '&quot;')
     return s
 
+
 def digits_only(s, maximum=None):
     if s is None:
         return 0
-    import string, re
     match = re.compile(r"\d+")
     a = match.findall(str(s))
     if len(a):
@@ -584,6 +609,7 @@
         else:
             return s
 
+
 def copytree(src, dst, symlinks=False):
     """Recursively copy a directory tree using copy2().
 
@@ -612,13 +638,15 @@
         except EnvironmentError, err:
             errors.extend(err.args[0])
     if errors:
-        raise EnvironmentError, errors
+        raise EnvironmentError(errors)
 
+
 def is_windows_system():
     if os.name == 'nt' or os.name.startswith('win'): # win32, win64
         return True
     return False
 
+
 def md5sum(fobj):
     """Returns an md5 hash for an object with read() method."""
     try:
@@ -637,40 +665,43 @@
         m.update(fobj)
     return unicode(m.hexdigest())
 
+
 def create_image_cache(md5sum, gsql):
-    poster = gsql.session.query(db.Poster).filter_by(md5sum=md5sum).first()
+    session = gsql.Session()
+    poster = session.query(db.Poster).filter_by(md5sum=md5sum).first()
     if not poster:
         log.warn("poster not available: %s", md5sum)
         return False
     if not poster.data:
         log.warn("poster data not available: %s", md5sum)
         return False
-    
-    fn_big    = os.path.join(gsql.data_dir, 'posters', md5sum+'.jpg')
-    fn_medium = os.path.join(gsql.data_dir, 'posters', md5sum+'_m.jpg')
-    fn_small  = os.path.join(gsql.data_dir, 'posters', md5sum+'_s.jpg')
 
+    fn_big = os.path.join(gsql.data_dir, 'posters', md5sum + '.jpg')
+    fn_medium = os.path.join(gsql.data_dir, 'posters', md5sum + '_m.jpg')
+    fn_small = os.path.join(gsql.data_dir, 'posters', md5sum + '_s.jpg')
+
     if not os.path.isfile(fn_big):
         f = file(fn_big, 'wb')
         f.write(poster.data)
         f.close()
-    
+
     image = gtk.Image()
     image.set_from_file(fn_big)
 
     if not os.path.isfile(fn_medium):
         pixbuf = image.get_pixbuf()
         pixbuf = pixbuf.scale_simple(100, 140, 'bilinear')
-        pixbuf.save(fn_medium, "jpeg", {"quality":"70"})
-    
+        pixbuf.save(fn_medium, 'jpeg', {'quality': '70'})
+
     if not os.path.isfile(fn_small):
         pixbuf = image.get_pixbuf()
         pixbuf = pixbuf.scale_simple(30, 40, 'bilinear')
-        pixbuf.save(fn_small, "jpeg", {"quality":"70"})
+        pixbuf.save(fn_small, 'jpeg', {'quality': '70'})
 
     return True
 
-def create_imagefile(destdir, md5sum, gsql, destfilename = None):
+
+def create_imagefile(destdir, md5sum, gsql, destfilename=None):
     poster = gsql.session.query(db.Poster).filter_by(md5sum=md5sum).first()
     if not poster:
         log.warn("poster not available: %s", md5sum)
@@ -678,7 +709,7 @@
     if not poster.data:
         log.warn("poster data not available: %s", md5sum)
         return False
-    
+
     if destfilename:
         fulldestpath = os.path.join(destdir, destfilename + '.jpg')
     else:
@@ -692,6 +723,7 @@
 
     return True
 
+
 def get_image_fname(md5sum, gsql, size=None):
     """size: s - small; m - medium, b or None - big"""
     if size not in (None, 's', 'm', 'b'):
@@ -699,18 +731,22 @@
     if not md5sum:
         raise TypeError("md5sum not set")
 
-    if not size or size=='b': size=''
-    else: size = "_%s" % size
+    if not size or size == 'b':
+        size = ''
+    else:
+        size = "_%s" % size
 
-    file_name = os.path.join(gsql.data_dir, 'posters', md5sum+size+'.jpg')
+    file_name = os.path.join(gsql.data_dir, 'posters', md5sum + size + '.jpg')
 
     if not os.path.isfile(file_name) and not create_image_cache(md5sum, gsql):
         log.warn("Can't create image file %s for md5sum %s" % (file_name, md5sum))
         return False
     return file_name
 
+
 def get_defaultimage_fname(self):
     return os.path.join(self.locations['images'], 'default.png')
 
+
 def get_defaultthumbnail_fname(self):
     return os.path.join(self.locations['images'], 'default_thumbnail.png')

Modified: trunk/lib/plugins/extensions/ge_movieposterdb.py
===================================================================
--- trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 21:04:00 UTC (rev 1383)
+++ trunk/lib/plugins/extensions/ge_movieposterdb.py	2010-01-05 22:24:53 UTC (rev 1384)
@@ -48,7 +48,6 @@
     baseurltitleyear = 'http://www.movieposterdb.com/embed.inc.php?movie_title=%s[%s]'
 
     progress = None
-    encode = 'iso8859-1'
 
     def toolbar_icon_clicked(self, widget, movie):
         log.info('fetching poster from MoviePosterDB.com...')
@@ -58,13 +57,13 @@
         o_title = None
         title = None
         if movie.o_title:
-            if movie.o_title[-5:] == ', The':
-                o_title = u'The ' + movie.o_title[:-5]
+            if movie.o_title.endswith(', The'):
+                o_title = u"The %s" % movie.o_title[:-5]
             else:
                 o_title = movie.o_title
         if movie.title:
-            if movie.title[-5:] == ', The':
-                title = u'The ' + movie.title[:-5]
+            if movie.title.endswith(', The'):
+                title = u"The %s" % movie.title[:-5]
             else:
                 title = movie.title
 
@@ -73,107 +72,92 @@
         #  original title + year, original title only, title + year, title only)
         try:
             largeurl = None
-            result = False
-            self.encode = 'iso8859-1'
+            data = False
             if o_title:
                 if movie.year:
                     url = self.baseurltitleyear % (quote(o_title), movie.year)
-                    result = self.search(url, self.widgets['window'])
-                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
-                if not result or not largeurl:
+                    data = self._get(url, self.widgets['window'])
+                    if data:
+                        largeurl = gutils.trim(data, 'src=\\"', '\\"').replace('/t_', '/l_')
+                if not data or not largeurl:
                     url = self.baseurltitle % quote(o_title)
-                    result = self.search(url, self.widgets['window'])
-                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
-            if not result or not largeurl and title and title != o_title:
+                    data = self._get(url, self.widgets['window'])
+                    if data:
+                        largeurl = gutils.trim(data, 'src=\\"', '\\"').replace('/t_', '/l_')
+            if not data or not largeurl and title and title != o_title:
                 if movie.year:
                     url = self.baseurltitleyear % (quote(title), movie.year)
-                    result = self.search(url, self.widgets['window'])
-                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
-                if not result or not largeurl:
+                    data = self._get(url, self.widgets['window'])
+                    if data:
+                        largeurl = gutils.trim(data, 'src=\\"', '\\"').replace('/t_', '/l_')
+                if not data or not largeurl:
                     url = self.baseurltitle % quote(title)
-                    result = self.search(url, self.widgets['window'])
-                    largeurl = gutils.trim(self.data, 'src=\\"', '\\"').replace('/t_', '/l_')
+                    data = self._get(url, self.widgets['window'])
+                    if data:
+                        largeurl = gutils.trim(data, 'src=\\"', '\\"').replace('/t_', '/l_')
         except:
             log.exception('')
             gutils.warning(_('No posters found for this movie.'))
             return
 
-        if not result or not largeurl:
+        if not data or not largeurl:
             gutils.warning(_('No posters found for this movie.'))
             return
 
         # got the url for a large poster, fetch the data, show preview and update the
         # movie entry if the user want it
-        self.encode = None
-        if not self.search(largeurl, self.widgets['window']):
+        data = self._get(largeurl, self.widgets['window'], decode=False)
+        if not data:
             gutils.warning(_('No posters found for this movie.'))
             return
 
-        if self.show_preview():
-            update_image_from_memory(self.app, movie.number, self.data)
+        if self._show_preview(data):
+            update_image_from_memory(self.app, movie.number, data)
 
-    def show_preview(self):
+    def _show_preview(self, data):
         loader = gtk.gdk.PixbufLoader()
-        loader.write(self.data, len(self.data))
+        loader.write(data, len(data))
         loader.close()
         handler = self.widgets['big_poster'].set_from_pixbuf(loader.get_pixbuf())
         self.widgets['poster_window'].show()
-        self.widgets['poster_window'].move(0, 0)
         result = gutils.question(_("Do you want to use this poster instead?"), self.widgets['window'])
         self.widgets['poster_window'].hide()
         return result
 
-    def search(self, url, parent_window):
-        try:
-            #
-            # initialize the progress dialog once for the following search process
-            #
-            if self.progress is None:
-                self.progress = Progress(parent_window)
-            self.progress.set_data(parent_window, _("Searching"), _("Wait a moment"), True)
-            #
-            # call the plugin specific search method
-            #
-            return self._search(url, parent_window)
-        finally:
-            # dont forget to hide the progress dialog
-            if self.progress:
-                self.progress.hide()
+    def _get(self, url, parent_window, decode=True):
+        # initialize the progress dialog once for the following search process
+        if not self.progress:
+            self.progress = Progress(parent_window)
 
-    def _search(self, url, parent_window):
-        result = False
+        data = None
+        url = url.encode('utf-8', 'replace')
+        log.debug('Using url <%s>', url)
+        self.progress.set_data(parent_window, _('Searching'), _('Wait a moment'), True)
         try:
-            if self.encode:
-                url = url.encode(self.encode)
-            else:
-                url = url.encode('iso8859-1')
-        except UnicodeEncodeError:
-            url = url.encode('utf-8')
-        log.debug('Using url <%s>' % url)
-        self.progress.set_data(parent_window, _("Searching"), _("Wait a moment"), False)
-        retriever = Retriever(url, parent_window, self.progress)
-        retriever.start()
-        while retriever.isAlive():
-            self.progress.pulse()
-            if self.progress.status:
-                retriever.join()
-            while gtk.events_pending():
-                gtk.main_iteration()
-        try:
-            if retriever.html:
-                ifile = file(retriever.html[0], 'rb')
-                try:
-                    self.data = ifile.read()
-                finally:
-                    ifile.close()
-                # check for gzip compressed pages before decoding to unicode
-                if len(self.data) > 2 and self.data[0:2] == '\037\213':
-                    self.data = gutils.decompress(self.data)
-                if self.encode:
-                    self.data = self.data.decode(self.encode, 'replace')
-                result = True
-                os.remove(retriever.html[0])
-        except IOError:
-            log.exception('')
+            retriever = Retriever(url, parent_window, self.progress)
+            retriever.start()
+            while retriever.isAlive():
+                self.progress.pulse()
+                if self.progress.status:
+                    retriever.join()
+                while gtk.events_pending():
+                    gtk.main_iteration()
+            try:
+                if retriever.html:
+                    ifile = file(retriever.html[0], 'rb')
+                    try:
+                        data = ifile.read()
+                    finally:
+                        ifile.close()
+                    # check for gzip compressed pages before decoding to unicode
+                    if len(data) > 2 and data[0:2] == '\037\213':
+                        data = gutils.decompress(data)
+                    if decode:
+                        data = data.decode('utf-8', 'replace')
+                    os.remove(retriever.html[0])
+            except IOError:
+                log.exception('')
+        finally:
+            self.progress.hide()
         urlcleanup()
-        return result
+        return data



From kura666 at mail.berlios.de  Wed Jan  6 20:48:04 2010
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Wed, 6 Jan 2010 20:48:04 +0100
Subject: [Griffith-svn] r1385 - trunk/lib/plugins/movie
Message-ID: <201001061948.o06Jm4OX015351@sheep.berlios.de>

Author: kura666
Date: 2010-01-06 20:47:44 +0100 (Wed, 06 Jan 2010)
New Revision: 1385

Modified:
   trunk/lib/plugins/movie/PluginMovieFDb.py
Log:
updated movie plugin fdb.pl
(search display '{{rate}}' string)


Modified: trunk/lib/plugins/movie/PluginMovieFDb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFDb.py	2010-01-05 22:24:53 UTC (rev 1384)
+++ trunk/lib/plugins/movie/PluginMovieFDb.py	2010-01-06 19:47:44 UTC (rev 1385)
@@ -32,7 +32,7 @@
 plugin_language        = _('Polish')
 plugin_author        = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email    = '<bartosz.kurczewski at gmail.com>'
-plugin_version        = '1.15'
+plugin_version        = '1.16'
 
 class Plugin(movie.Movie):
     TRAILER_PATTERN = re.compile('/film/.*/zwiastuny/odtwarzaj/[0-9]*')
@@ -183,6 +183,7 @@
                     element = element.replace("\n", '')
                     element = element.replace('   ', '')
                     element = element.replace('aka ', ' aka ')
+		    element = element.replace('{{rate}}', ' ')
                     element = element.replace(' - Oryginalny', '')
                     self.titles.append(element)
             else:



From piotrek at mail.berlios.de  Wed Jan  6 21:24:10 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Wed, 6 Jan 2010 21:24:10 +0100
Subject: [Griffith-svn] r1386 - trunk/lib
Message-ID: <201001062024.o06KOAUZ017820@sheep.berlios.de>

Author: piotrek
Date: 2010-01-06 21:24:10 +0100 (Wed, 06 Jan 2010)
New Revision: 1386

Modified:
   trunk/lib/add.py
   trunk/lib/delete.py
Log:
pep8ify


Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2010-01-06 19:47:44 UTC (rev 1385)
+++ trunk/lib/add.py	2010-01-06 20:24:10 UTC (rev 1386)
@@ -37,6 +37,7 @@
 
 ### widgets ###################################################
 
+
 def clear(self):
     """clears all fields in dialog"""
     set_details(self, {})
@@ -45,7 +46,7 @@
 
 def add_movie(self, details={}):
     set_details(self, details)
-    
+
     self.active_plugin = ''
     self.widgets['add']['add_button'].show()
     self.widgets['add']['add_close_button'].show()
@@ -76,7 +77,7 @@
         movie = session.query(db.Movie).filter_by(movie_id=self._movie_id).one()
     if movie is None: # movie was deleted in the meantime
         return add_movie_db(self, True)
-    
+
     details = get_details(self)
 
     old_poster_md5 = movie.poster_md5
@@ -87,7 +88,7 @@
             log.warn("cannot read temporary file: %s", new_image_path)
         else:
             new_poster_md5 = gutils.md5sum(file(new_image_path, 'rb'))
-            details["poster_md5"] = new_poster_md5
+            details['poster_md5'] = new_poster_md5
             if session.query(db.Poster).filter_by(md5sum=new_poster_md5).count() == 0:
                 try:
                     data = file(new_image_path, 'rb').read()
@@ -104,15 +105,15 @@
                     old_poster = session.query(db.Poster).filter_by(md5sum=old_poster_md5).first()
                     if old_poster and len(old_poster.movies) == 1: # other movies are not using the same poster
                         session.delete(old_poster)
-                        delete.delete_poster_from_cache(self, old_poster_md5)
+                        delete.delete_poster_from_cache(old_poster_md5, self.locations['posters'])
 
     update_movie_instance(movie, details, session)
-    
+
     session.add(movie)
     if commit(session):
         treeselection = self.widgets['treeview'].get_selection()
         (tmp_model, tmp_iter) = treeselection.get_selected()
-        
+
         if new_poster_md5 and new_poster_md5 != old_poster_md5:
             # update thumbnail in main list
             new_image_path = gutils.get_image_fname(new_poster_md5, self.db, 's')
@@ -120,26 +121,26 @@
                 new_image_path = gutils.get_defaultthumbnail_fname(self)
             handler = self.Image.set_from_file(new_image_path)
             pixbuf = self.Image.get_pixbuf()
-            tmp_model.set_value(tmp_iter,1, pixbuf)
+            tmp_model.set_value(tmp_iter, 1, pixbuf)
         # update main treelist
-        tmp_model.set_value(tmp_iter,0,'%004d' % int(movie.number))
-        tmp_model.set_value(tmp_iter,2, movie.o_title)
-        tmp_model.set_value(tmp_iter,3, movie.title)
-        tmp_model.set_value(tmp_iter,4, movie.director)
-        tmp_model.set_value(tmp_iter,5, movie.genre)
-        tmp_model.set_value(tmp_iter,6, movie.seen)
+        tmp_model.set_value(tmp_iter, 0, "%004d" % int(movie.number))
+        tmp_model.set_value(tmp_iter, 2, movie.o_title)
+        tmp_model.set_value(tmp_iter, 3, movie.title)
+        tmp_model.set_value(tmp_iter, 4, movie.director)
+        tmp_model.set_value(tmp_iter, 5, movie.genre)
+        tmp_model.set_value(tmp_iter, 6, movie.seen)
         if movie.year is None:
-            tmp_model.set_value(tmp_iter,7, '')
+            tmp_model.set_value(tmp_iter, 7, '')
         else:
-            tmp_model.set_value(tmp_iter,7, movie.year)
+            tmp_model.set_value(tmp_iter, 7, movie.year)
         if movie.runtime is None:
-            tmp_model.set_value(tmp_iter,8, '')
+            tmp_model.set_value(tmp_iter, 8, '')
         else:
-            tmp_model.set_value(tmp_iter,8, '%003d' % int(movie.runtime) + _(' min'))
+            tmp_model.set_value(tmp_iter, 8, "%003d" % int(movie.runtime) + _(' min'))
         if movie.rating is None:
-            tmp_model.set_value(tmp_iter,9, '')
+            tmp_model.set_value(tmp_iter, 9, '')
         else:
-            tmp_model.set_value(tmp_iter,9, movie.rating)
+            tmp_model.set_value(tmp_iter, 9, movie.rating)
         # close add window
         self.widgets['add']['window'].hide()
         # refresh
@@ -175,7 +176,7 @@
         if tmp_iter is None:
             return False
         m_id = tmp_model.get_value(tmp_iter, 0)
-    
+
     self.treemodel_results.clear()
     self.widgets['results']['window'].hide()
 
@@ -184,19 +185,19 @@
     self.movie = plugin.Plugin(m_id)
     self.movie.locations = self.locations
     self.movie.config = self.config
-    
+
     fields_to_fetch = ['o_title', 'title', 'director', 'plot', 'cast', 'country', 'genre',
                 'classification', 'studio', 'o_site', 'site', 'trailer', 'year',
                 'notes', 'runtime', 'image', 'rating', 'screenplay', 'cameraman',
                 'resolution', 'barcode']
     # remove fields that user doesn't want to fetch: (see preferences window)
-    fields_to_fetch = [ i for i in fields_to_fetch if self.config.get("s_%s" % i, True, section='add') ]
+    fields_to_fetch = [i for i in fields_to_fetch if self.config.get("s_%s" % i, True, section='add')]
 
     if w['cb_only_empty'].get_active(): # only empty fields
         details = get_details(self)
-        fields_to_fetch = [ i for i in fields_to_fetch if details[i] is None ]
+        fields_to_fetch = [i for i in fields_to_fetch if details[i] is None]
     self.movie.fields_to_fetch = fields_to_fetch
-    
+
     if not self.movie.get_movie(w['window']):
         return None
     self.movie.parse_movie()
@@ -250,16 +251,16 @@
 def show_websearch_results(self):
     total = self.founded_results_id = 0
     for g in self.search_movie.ids:
-        if ( str(g) != '' ):
+        if (str(g) != ''):
             total += 1
     if total > 1:
         self.widgets['results']['window'].show()
         self.widgets['results']['window'].set_keep_above(True)
-        row = None    
+        row = None
         key = 0
         self.treemodel_results.clear()
         for row in self.search_movie.ids:
-            if (str(row)!=''):
+            if (str(row) != ''):
                 if isinstance(self.search_movie.titles[key], unicode):
                     title = self.search_movie.titles[key]
                 else:
@@ -267,12 +268,12 @@
                 myiter = self.treemodel_results.insert_before(None, None)
                 self.treemodel_results.set_value(myiter, 0, str(row))
                 self.treemodel_results.set_value(myiter, 1, title)
-            key +=1
+            key += 1
         self.widgets['results']['treeview'].show()
-    elif total==1:
+    elif total == 1:
         self.widgets['results']['treeview'].set_cursor(total-1)
         for row in self.search_movie.ids:
-            if ( str(row) != '' ):
+            if (str(row) != ''):
                 self.founded_results_id = str(row)
                 populate_with_results(self)
     else:
@@ -328,9 +329,9 @@
     self.active_plugin = option
     plugin_name = 'PluginMovie' + option
     plugin = __import__(plugin_name)
-    self.widgets['add']['plugin_desc'].set_text(plugin.plugin_name+"\n" \
-        +plugin.plugin_description+"\n"+_("Url: ") \
-        +plugin.plugin_url+"\n"+_("Language: ")+plugin.plugin_language)
+    self.widgets['add']['plugin_desc'].set_text(plugin.plugin_name + "\n" \
+        + plugin.plugin_description + "\n" + _('Url: ') \
+        + plugin.plugin_url + "\n" + _('Language: ') + plugin.plugin_language)
     image = os.path.join(self.locations['images'], plugin_name + ".png")
     # if movie plugin logo exists lets use it
     if os.path.exists(image):
@@ -339,43 +340,43 @@
 
 def get_details(self): #{{{
     w = self.widgets['add']
-    
-    cast_buffer  = w['cast'].get_buffer()
+
+    cast_buffer = w['cast'].get_buffer()
     notes_buffer = w['notes'].get_buffer()
-    plot_buffer  = w['plot'].get_buffer()
-    
+    plot_buffer = w['plot'].get_buffer()
+
     t_movies = {
-        'cameraman'      : w['cameraman'].get_text().decode('utf-8'),
-        'classification' : w['classification'].get_text().decode('utf-8'),
-        'barcode'        : unicode(gutils.digits_only(w['barcode'].get_text().decode('utf-8'))),
-        'color'          : w['color'].get_active(),
-        'cond'           : w['condition'].get_active(),
-        'country'        : w['country'].get_text().decode('utf-8'),
-        'director'       : w['director'].get_text().decode('utf-8'),
-        'genre'          : w['genre'].get_text().decode('utf-8'),
-        'image'          : w['image'].get_text().decode('utf-8'),
-        'layers'         : w['layers'].get_active(),
-        'media_num'      : w['discs'].get_value(),
-        'number'         : w['number'].get_value(),
-        'o_site'         : w['o_site'].get_text().decode('utf-8'),
-        'o_title'        : w['o_title'].get_text().decode('utf-8'),
-        'rating'         : w['rating_slider'].get_value(),
-        'region'         : w['region'].get_active(),
-        'resolution'     : w['resolution'].get_text().strip().decode('utf-8'),
-        'runtime'        : w['runtime'].get_text().decode('utf-8'),
-        'screenplay'     : w['screenplay'].get_text().decode('utf-8'),
-        'site'           : w['site'].get_text().decode('utf-8'),
-        'studio'         : w['studio'].get_text().decode('utf-8'),
-        'title'          : w['title'].get_text().decode('utf-8'),
-        'trailer'        : w['trailer'].get_text().decode('utf-8'),
-        'year'           : w['year'].get_value(),
-        'collection_id'  : w['collection'].get_active(),
-        'medium_id'      : w['media'].get_active(),
-        'volume_id'      : w['volume'].get_active(),
-        'vcodec_id'      : w['vcodec'].get_active(),
-        'cast'           : cast_buffer.get_text(cast_buffer.get_start_iter(),cast_buffer.get_end_iter()).decode('utf-8'),
-        'notes'          : notes_buffer.get_text(notes_buffer.get_start_iter(),notes_buffer.get_end_iter()).decode('utf-8'),
-        'plot'           : plot_buffer.get_text(plot_buffer.get_start_iter(),plot_buffer.get_end_iter()).decode('utf-8'),
+        'cameraman': w['cameraman'].get_text().decode('utf-8'),
+        'classification': w['classification'].get_text().decode('utf-8'),
+        'barcode': unicode(gutils.digits_only(w['barcode'].get_text().decode('utf-8'))),
+        'color': w['color'].get_active(),
+        'cond': w['condition'].get_active(),
+        'country': w['country'].get_text().decode('utf-8'),
+        'director': w['director'].get_text().decode('utf-8'),
+        'genre': w['genre'].get_text().decode('utf-8'),
+        'image': w['image'].get_text().decode('utf-8'),
+        'layers': w['layers'].get_active(),
+        'media_num': w['discs'].get_value(),
+        'number': w['number'].get_value(),
+        'o_site': w['o_site'].get_text().decode('utf-8'),
+        'o_title': w['o_title'].get_text().decode('utf-8'),
+        'rating': w['rating_slider'].get_value(),
+        'region': w['region'].get_active(),
+        'resolution': w['resolution'].get_text().strip().decode('utf-8'),
+        'runtime': w['runtime'].get_text().decode('utf-8'),
+        'screenplay': w['screenplay'].get_text().decode('utf-8'),
+        'site': w['site'].get_text().decode('utf-8'),
+        'studio': w['studio'].get_text().decode('utf-8'),
+        'title': w['title'].get_text().decode('utf-8'),
+        'trailer': w['trailer'].get_text().decode('utf-8'),
+        'year': w['year'].get_value(),
+        'collection_id': w['collection'].get_active(),
+        'medium_id': w['media'].get_active(),
+        'volume_id': w['volume'].get_active(),
+        'vcodec_id': w['vcodec'].get_active(),
+        'cast': cast_buffer.get_text(cast_buffer.get_start_iter(), cast_buffer.get_end_iter()).decode('utf-8'),
+        'notes': notes_buffer.get_text(notes_buffer.get_start_iter(), notes_buffer.get_end_iter()).decode('utf-8'),
+        'plot': plot_buffer.get_text(plot_buffer.get_start_iter(), plot_buffer.get_end_iter()).decode('utf-8'),
     }
     if self._am_movie_id is not None:
         t_movies['movie_id'] = self._am_movie_id
@@ -398,7 +399,7 @@
         t_movies['vcodec_id'] = None
     if t_movies['barcode'] == '0':
         t_movies['barcode'] = None
-    
+
     if w['seen'].get_active():
         t_movies['seen'] = True
     else:
@@ -414,10 +415,10 @@
     # languages
     t_movies['languages'] = set()
     for row in self.lang['model']:
-        lang_id   = get_id(self.lang['lang'], row[0])
+        lang_id = get_id(self.lang['lang'], row[0])
         lang_type = get_id(self.lang['type'], row[1])
-        acodec    = get_id(self.lang['acodec'], row[2])
-        achannel  = get_id(self.lang['achannel'], row[3])
+        acodec = get_id(self.lang['acodec'], row[2])
+        achannel = get_id(self.lang['achannel'], row[3])
         subformat = get_id(self.lang['subformat'], row[4])
         t_movies['languages'].add((lang_id, lang_type, acodec, achannel, subformat))
 
@@ -426,7 +427,7 @@
     for i in self.tags_ids:
         if self.am_tags[i].get_active() == True:
             t_movies['tags'][self.tags_ids[i]] = 1
-    
+
     validate_details(t_movies)
 
     return t_movies    #}}}
@@ -441,9 +442,9 @@
         self._am_movie_id = None
     w = self.widgets['add']
 
-    cast_buffer  = w['cast'].get_buffer()
+    cast_buffer = w['cast'].get_buffer()
     notes_buffer = w['notes'].get_buffer()
-    plot_buffer  = w['plot'].get_buffer()
+    plot_buffer = w['plot'].get_buffer()
 
     if 'o_title' in item and item['o_title']:
         w['o_title'].set_text(item['o_title'])
@@ -460,7 +461,7 @@
     if 'title' in item and item['title']:
         w['title'].set_text(item['title'])
     if 'year' in item and item['year']:
-        w['year'].set_value( gutils.digits_only(item['year'], 2100))
+        w['year'].set_value(gutils.digits_only(item['year'], 2100))
     else:
         w['year'].set_value(0)
     if 'resolution' in item and item['resolution']:
@@ -473,7 +474,7 @@
     else:
         w['resolution'].set_text('')
     if 'runtime' in item and item['runtime']:
-        w['runtime'].set_value( gutils.digits_only(item['runtime']))
+        w['runtime'].set_value(gutils.digits_only(item['runtime']))
     else:
         w['runtime'].set_value(0)
     if 'barcode' in item and item['barcode']:
@@ -521,27 +522,27 @@
     else:
         w['genre'].set_text('')
     if 'color' in item and item['color']:
-        w['color'].set_active( gutils.digits_only(item['color'], 3))
+        w['color'].set_active(gutils.digits_only(item['color'], 3))
     else:
-        w['color'].set_active( gutils.digits_only(self.config.get('color', 0, section='defaults'), 3))
+        w['color'].set_active(gutils.digits_only(self.config.get('color', 0, section='defaults'), 3))
     if 'layers' in item and item['layers']:
-        w['layers'].set_active( gutils.digits_only(item['layers'], 4))
+        w['layers'].set_active(gutils.digits_only(item['layers'], 4))
     else:
-        w['layers'].set_active( gutils.digits_only(self.config.get('layers', 0, section='defaults'), 4))
-    if 'region' in item and item['region']>=0:
-            w['region'].set_active( gutils.digits_only(item['region'], 8))
+        w['layers'].set_active(gutils.digits_only(self.config.get('layers', 0, section='defaults'), 4))
+    if 'region' in item and item['region'] >= 0:
+            w['region'].set_active(gutils.digits_only(item['region'], 8))
     else:
-        w['region'].set_active( gutils.digits_only(self.config.get('region', 0, section='defaults'), 8))
-    if 'cond' in item and item['cond']>=0:
-        w['condition'].set_active( gutils.digits_only( item['cond'], 5) )
+        w['region'].set_active(gutils.digits_only(self.config.get('region', 0, section='defaults'), 8))
+    if 'cond' in item and item['cond'] >= 0:
+        w['condition'].set_active(gutils.digits_only(item['cond'], 5))
     else:
-        w['condition'].set_active( gutils.digits_only( self.config.get('condition', 0, section='defaults'), 5))
+        w['condition'].set_active(gutils.digits_only(self.config.get('condition', 0, section='defaults'), 5))
     if 'media_num' in item and item['media_num']:
-        w['discs'].set_value( gutils.digits_only(item['media_num']))
+        w['discs'].set_value(gutils.digits_only(item['media_num']))
     else:
         w['discs'].set_value(1)
     if 'rating' in item and item['rating']:
-        w['rating_slider'].set_value( gutils.digits_only(item['rating'], 10) )
+        w['rating_slider'].set_value(gutils.digits_only(item['rating'], 10))
     else:
         w['rating_slider'].set_value(0)
     if 'seen' in item and item['seen'] is True:
@@ -601,19 +602,22 @@
             self.am_tags[i].set_active(True)
     # languages
     w['lang_treeview'].get_model().clear()
-    if 'languages' in item and len(item['languages'])>0:
+    if 'languages' in item and len(item['languages']) > 0:
         for i in item['languages']:
             self.create_language_row(i)
     # poster
     if 'poster_md5' in item and item['poster_md5']:
         image_path = gutils.get_image_fname(item["poster_md5"], self.db, 'm')
-        if not image_path: image_path = '' # isfile doesn't like bool
+        if not image_path:
+            image_path = '' # isfile doesn't like bool
         w['image'].set_text(item['poster_md5'])
     elif 'image' in item and item['image']:
-        if len(item["image"])==32: # md5
+        if len(item['image']) == 32: # md5
             image_path = gutils.get_image_fname(item["image"], self.db, 'm')
-            if not image_path: image_path = '' # isfile doesn't like bool
-            else: w['image'].set_text(item['image'])
+            if not image_path:
+                image_path = '' # isfile doesn't like bool
+            else:
+                w['image'].set_text(item['image'])
         else:
             image_path = os.path.join(self.locations['posters'], "m_%s.jpg" % item['image'])
             log.warn("TODO: image=%s", item['image'])
@@ -623,7 +627,7 @@
     if not os.path.isfile(image_path):
         image_path = gutils.get_defaultimage_fname(self)
     w['picture'].set_from_file(image_path)
-    
+
     w['notebook'].set_current_page(0)
     w['o_title'].grab_focus()
     #}}}
@@ -634,10 +638,10 @@
         if t_movies[i] == '':
             t_movies[i] = None
     for i in ('color', 'cond', 'layers', 'media', 'vcodec'):
-        if t_movies.has_key(i) and t_movies[i] < 1:
+        if i in t_movies and t_movies[i] < 1:
             t_movies[i] = None
-    for i in ('volume_id','collection_id', 'runtime'):
-        if t_movies.has_key(i) and (t_movies[i] is None or int(t_movies[i]) == 0):
+    for i in ('volume_id', 'collection_id', 'runtime'):
+        if i in t_movies and (t_movies[i] is None or int(t_movies[i]) == 0):
             t_movies[i] = None
     if allow_only is not None:
         # iterate over a copy of keys of the dict because removing elements of a dict
@@ -668,7 +672,7 @@
         if session.query(db.Movie).filter_by(title=details['title']).count() > 0:
             if not gutils.question(_('Movie with that title already exists, are you sure you want to add?'), self.widgets['add']['window']):
                 return False
-    
+
     if details['image']:
         tmp_image_path = os.path.join(self.locations['temp'], "poster_%s.jpg" % details['image'])
         if os.path.isfile(tmp_image_path):
@@ -758,54 +762,54 @@
         return False
 
     next_number = gutils.find_next_available(self.db)
-    
+
     # integer problem workaround
-    if int(movie.seen)==1:
+    if int(movie.seen) == 1:
         seen = True
     else:
         seen = False
     new_movie = db.Movie()
-    
+
     # TODO: WARNING: loan problems (don't copy volume/collection data until resolved)
-    new_movie.cast           = movie.cast
+    new_movie.cast = movie.cast
     new_movie.classification = movie.classification
-    new_movie.vcodec_id      = movie.vcodec_id
-    new_movie.barcode        = movie.barcode
-    new_movie.cameraman      = movie.cameraman
-    new_movie.collection_id  = movie.collection_id
-    new_movie.volume_id      = movie.volume_id
-    new_movie.color          = movie.color
-    new_movie.cond           = movie.cond
-    new_movie.country        = movie.country
-    new_movie.director       = movie.director
-    new_movie.genre          = movie.genre
-    new_movie.site           = movie.site
-    new_movie.loaned         = movie.loaned
-    new_movie.layers         = movie.layers
-    new_movie.medium_id      = movie.medium_id
-    new_movie.number         = next_number
-    new_movie.media_num      = movie.media_num
-    new_movie.notes          = movie.notes
-    new_movie.o_title        = movie.o_title
-    new_movie.plot           = movie.plot
-    new_movie.poster_md5     = movie.poster_md5
-    new_movie.ratio_id       = movie.ratio_id
-    new_movie.rating         = movie.rating
-    new_movie.region         = movie.region
-    new_movie.runtime        = movie.runtime
-    new_movie.resolution     = movie.resolution
-    new_movie.screenplay     = movie.screenplay
-    new_movie.seen           = seen
-    new_movie.o_site         = movie.o_site
-    new_movie.studio         = movie.studio
-    new_movie.title          = movie.title
-    new_movie.trailer        = movie.trailer
-    new_movie.year           = movie.year
-    
-    new_movie.tags           = movie.tags
-    new_movie.languages      = movie.languages
-    new_movie.loans          = movie.loans
-    
+    new_movie.vcodec_id = movie.vcodec_id
+    new_movie.barcode = movie.barcode
+    new_movie.cameraman = movie.cameraman
+    new_movie.collection_id = movie.collection_id
+    new_movie.volume_id = movie.volume_id
+    new_movie.color = movie.color
+    new_movie.cond = movie.cond
+    new_movie.country = movie.country
+    new_movie.director = movie.director
+    new_movie.genre = movie.genre
+    new_movie.site = movie.site
+    new_movie.loaned = movie.loaned
+    new_movie.layers = movie.layers
+    new_movie.medium_id = movie.medium_id
+    new_movie.number = next_number
+    new_movie.media_num = movie.media_num
+    new_movie.notes = movie.notes
+    new_movie.o_title = movie.o_title
+    new_movie.plot = movie.plot
+    new_movie.poster_md5 = movie.poster_md5
+    new_movie.ratio_id = movie.ratio_id
+    new_movie.rating = movie.rating
+    new_movie.region = movie.region
+    new_movie.runtime = movie.runtime
+    new_movie.resolution = movie.resolution
+    new_movie.screenplay = movie.screenplay
+    new_movie.seen = seen
+    new_movie.o_site = movie.o_site
+    new_movie.studio = movie.studio
+    new_movie.title = movie.title
+    new_movie.trailer = movie.trailer
+    new_movie.year = movie.year
+
+    new_movie.tags = movie.tags
+    new_movie.languages = movie.languages
+    new_movie.loans = movie.loans
+
     # save
     session.add(new_movie)
     if not commit(session):
@@ -874,7 +878,7 @@
 
 def add_medium(self, name):
     session = self.db.Session()
-    medium = db.Medium(name = name)
+    medium = db.Medium(name=name)
     session.add(medium)
     try:
         session.commit()
@@ -888,7 +892,7 @@
 
 def add_vcodec(self, name):
     session = self.db.Session()
-    vcodec = db.VCodec(name = name)
+    vcodec = db.VCodec(name=name)
     session.add(vcodec)
     try:
         session.commit()
@@ -902,7 +906,7 @@
 
 def add_volume(self, name):
     session = self.db.Session()
-    vol = db.Volume(name = name)
+    vol = db.Volume(name=name)
     session.add(vol)
     try:
         session.commit()
@@ -917,7 +921,7 @@
 
 def add_collection(self, name):
     session = self.db.Session()
-    col = db.Collection(name = name)
+    col = db.Collection(name=name)
     session.add(col)
     try:
         session.commit()

Modified: trunk/lib/delete.py
===================================================================
--- trunk/lib/delete.py	2010-01-06 19:47:44 UTC (rev 1385)
+++ trunk/lib/delete.py	2010-01-06 20:24:10 UTC (rev 1386)
@@ -21,20 +21,22 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
+import logging
 import os
-import logging
-log = logging.getLogger("Griffith")
+import db
 import gutils
-import db
 
+log = logging.getLogger("Griffith")
+
+
 def delete_movie(self):
     m_id = None
     number, m_iter = self.get_maintree_selection()
     movie = self.db.session.query(db.Movie).filter_by(number=number).first()
     if movie is None:
-        gutils.error(self,_("You have no movies in your database"), self.widgets['window'])
+        gutils.error(self, _("You have no movies in your database"), self.widgets['window'])
         return False
-    
+
     if movie.loaned:
         gutils.warning(msg=_("You can't delete movie while it is loaned."))
         return False
@@ -61,32 +63,37 @@
     else:
         return False
 
+
 def delete_poster(self, md5sum, commit=False):
-    poster = self.db.session.query(db.Poster).filter_by(md5sum=md5sum).first()
+    log.warning('delete.delete_poster')
+    if commit:
+        session = self.db.Session()
+    else:
+        session = self.db.session
+    poster = session.query(db.Poster).filter_by(md5sum=md5sum).first()
     if poster and len(poster.movies) <= 1: # other movies are not using the same poster
         self.db.session.delete(poster)
         if commit:
             try:
-                self.db.session.commit()
+                session.commit()
             except Exception, e:
                 log.warn("cannot delete poster from db: %s", e)
-                self.db.session.rollback()
+                session.rollback()
                 return False
 
-    delete_poster_from_cache(self, md5sum)
+    delete_poster_from_cache(md5sum, self.locations['posters'])
     return True
 
-def delete_poster_from_cache(self, md5sum):
+
+def delete_poster_from_cache(md5sum, posters_dir):
     if not md5sum:
         log.info('Delete poster: no poster to delete')
         return False
 
-    posters_dir = os.path.join(self.locations['posters'])
+    image_full = os.path.join(posters_dir, md5sum + '.jpg')
+    image_small = os.path.join(posters_dir, md5sum + '_s.jpg')
+    image_medium = os.path.join(posters_dir, md5sum + '_m.jpg')
 
-    image_full = os.path.join(posters_dir, md5sum+".jpg")
-    image_small = os.path.join(posters_dir, md5sum+"_s.jpg")
-    image_medium = os.path.join(posters_dir, md5sum+"_m.jpg")
-
     if os.path.isfile(image_small):
         try:
             os.remove(image_small)
@@ -102,4 +109,3 @@
             os.remove(image_full)
         except:
             log.warning("Can't remove %s file", image_full)
-



From piotrek at mail.berlios.de  Wed Jan  6 21:35:37 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Wed, 6 Jan 2010 21:35:37 +0100
Subject: [Griffith-svn] r1387 - trunk/lib/plugins/movie
Message-ID: <201001062035.o06KZbUO019046@sheep.berlios.de>

Author: piotrek
Date: 2010-01-06 21:35:36 +0100 (Wed, 06 Jan 2010)
New Revision: 1387

Modified:
   trunk/lib/plugins/movie/PluginMovieAmazon.py
Log:
Search plugin doesn't have self.app
(TODO: remove "self" from gutils.error)


Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-06 20:24:10 UTC (rev 1386)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-06 20:35:36 UTC (rev 1387)
@@ -24,7 +24,6 @@
 import gutils
 import movie
 import string
-import re
 import amazon
 import threading
 import gtk
@@ -57,7 +56,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(None, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 
@@ -252,7 +251,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(None, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 



From piotrek at mail.berlios.de  Wed Jan  6 22:02:23 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Wed, 6 Jan 2010 22:02:23 +0100
Subject: [Griffith-svn] r1388 - in trunk: . lib lib/plugins/export
	lib/plugins/extensions lib/plugins/imp lib/plugins/movie
Message-ID: <201001062102.o06L2Nc2021252@sheep.berlios.de>

Author: piotrek
Date: 2010-01-06 22:02:22 +0100 (Wed, 06 Jan 2010)
New Revision: 1388

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/add.py
   trunk/lib/backup.py
   trunk/lib/delete.py
   trunk/lib/edit.py
   trunk/lib/gemail.py
   trunk/lib/gutils.py
   trunk/lib/people.py
   trunk/lib/plugins/export/PluginExportHTML.py
   trunk/lib/plugins/extensions/ge_amazon.py
   trunk/lib/plugins/imp/AMC.py
   trunk/lib/plugins/imp/AllMyMovies.py
   trunk/lib/plugins/imp/BESTheMovieLibrary.py
   trunk/lib/plugins/imp/DVDProfiler.py
   trunk/lib/plugins/imp/FoxMovieManager.py
   trunk/lib/plugins/imp/GCstar.py
   trunk/lib/plugins/imp/MovieTrack.py
   trunk/lib/plugins/imp/MyDVDs.py
   trunk/lib/plugins/imp/PersonalVideoDatabase.py
   trunk/lib/plugins/imp/TheMovieLibrary.py
   trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
   trunk/lib/plugins/imp/__init__.py
   trunk/lib/plugins/imp/eXtremeMovieManager.py
   trunk/lib/plugins/movie/PluginMovieAmazon.py
   trunk/lib/test_movieplugins.py
Log:
remove "self" from gutils.error args


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/ChangeLog	2010-01-06 21:02:22 UTC (rev 1388)
@@ -5,6 +5,9 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-06  Piotr O?arowski
+	* Some cleanups
+
 2010-01-05  Michael Jahn
 	* save and restore sorting column in main list
 	* updated movie plugin Stopklatka

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/griffith	2010-01-06 21:02:22 UTC (rev 1388)
@@ -232,7 +232,7 @@
         if movie is not None:
             add.edit_movie(self, movie)
         else:
-            gutils.error(self,_("You have no movies in your database"), self.widgets['window'])
+            gutils.error(_("You have no movies in your database"), self.widgets['window'])
 
     def hide_add_window(self, *args):
         #if self.widgets['add']['b_get_from_web'].is_sensitive() is True: # fetch from amazon is not working
@@ -1018,7 +1018,7 @@
         if movie_number is not None:
             cover_simple(self, movie_number)
         else:
-            gutils.error(self,_("You have no movies in your database"), self.widgets['window'])
+            gutils.error(_("You have no movies in your database"), self.widgets['window'])
 
     def print_cover_image(self, *args):
         self.widgets['print_cover']['ci_size'].set_active(0)

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/add.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -277,7 +277,7 @@
                 self.founded_results_id = str(row)
                 populate_with_results(self)
     else:
-        gutils.error(self.widgets['results']['window'], _("No results"), self.widgets['add']['window'])
+        gutils.error(_("No results"), self.widgets['add']['window'])
 
 
 def get_from_web(self):
@@ -320,8 +320,7 @@
                 self.search_movie.get_searches()
         self.show_search_results(self.search_movie)
     else:
-        gutils.error(self.widgets['results']['window'], \
-            _("You should fill the original title\nor the movie title."))
+        gutils.error(_("You should fill the original title\nor the movie title."))
 
 
 def source_changed(self):
@@ -659,8 +658,7 @@
 
     details = get_details(self)
     if not details['o_title'] and not details['title']:
-        gutils.error(self.widgets['results']['window'],
-            _("You should fill the original title\nor the movie title."),
+        gutils.error(_("You should fill the original title\nor the movie title."),
             parent=self.widgets['add']['window'])
         return False
 

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/backup.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -44,7 +44,7 @@
 def create(self):
     """perform a compressed griffith database/posters/preferences backup"""
     #if self.db.session.bind.engine.name != 'sqlite':
-    #    gutils.error(self, _("Backup function is available only for SQLite engine for now"), self.widgets['window'])
+    #    gutils.error(_("Backup function is available only for SQLite engine for now"), self.widgets['window'])
     #    return False
 
     default_name = "%s_backup_%s.zip" % (self.config.get('name','griffith', section='database'),\
@@ -68,7 +68,7 @@
                 else:
                     mzip = zipfile.ZipFile(zipfilename, 'w')
             except:
-                gutils.error(self, _("Error creating backup"), self.widgets['window'])
+                gutils.error(_("Error creating backup"), self.widgets['window'])
                 return False
             if self.db.session.bind.engine.name == 'sqlite':
                 mzip.write(os.path.join(self.locations['home'],'griffith.cfg').encode('utf-8'), arcname='griffith.cfg')
@@ -196,7 +196,7 @@
             try:
                 zip_file = zipfile.ZipFile(filename, 'r')
             except:
-                gutils.error(self, _("Can't read backup file"), self.widgets['window'])
+                gutils.error(_("Can't read backup file"), self.widgets['window'])
                 return False
 
             old_config_file = False

Modified: trunk/lib/delete.py
===================================================================
--- trunk/lib/delete.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/delete.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -34,7 +34,7 @@
     number, m_iter = self.get_maintree_selection()
     movie = self.db.session.query(db.Movie).filter_by(number=number).first()
     if movie is None:
-        gutils.error(self, _("You have no movies in your database"), self.widgets['window'])
+        gutils.error(_("You have no movies in your database"), self.widgets['window'])
         return False
 
     if movie.loaned:
@@ -65,7 +65,6 @@
 
 
 def delete_poster(self, md5sum, commit=False):
-    log.warning('delete.delete_poster')
     if commit:
         session = self.db.Session()
     else:

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/edit.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -40,7 +40,7 @@
     picture = self.widgets['movie']['picture']
     number = self.get_maintree_selection()[0]
     if number is None:
-        gutils.error(self, _("You have no movies in your database"), self.widgets['window'])
+        gutils.error(_("You have no movies in your database"), self.widgets['window'])
         return False
     filename = gutils.file_chooser(_("Select image"),
                                    action=gtk.FILE_CHOOSER_ACTION_OPEN,
@@ -71,7 +71,7 @@
                 loader.get_pixbuf().scale_simple(100, 140, gtk.gdk.INTERP_BILINEAR))
     except Exception, e:
         log.error(str(e))
-        gutils.error(self, _("Image is not valid."), self.widgets['window'])
+        gutils.error(_("Image is not valid."), self.widgets['window'])
         return False
 
     poster_md5 = gutils.md5sum(data)

Modified: trunk/lib/gemail.py
===================================================================
--- trunk/lib/gemail.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/gemail.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -35,7 +35,7 @@
         session = smtplib.SMTP(server, port)
         session.set_debuglevel(1)
     except socket.timeout:
-        gutils.error(self, _("Connection timed out"), \
+        gutils.error(_("Connection timed out"), \
             self.widgets['window'])
         return()
     if tls == True:
@@ -46,7 +46,7 @@
         try:
             session.login(user, password)
         except:
-            gutils.error(self, _("Error sending e-mail: %s")%_("login failure"), \
+            gutils.error(_("Error sending e-mail: %s")%_("login failure"), \
                 self.widgets['window'])
             return
     headers = "From: %s\r\nTo: %s\r\nSubject: %s\r\n\r\n" \
@@ -56,7 +56,7 @@
         gutils.info(_("E-mail sent sucessfuly"), self.widgets['window'])
         return
     except:
-        gutils.error(self, _("Error sending e-mail: %s")%"", self.widgets['window'])
+        gutils.error(_("Error sending e-mail: %s")%"", self.widgets['window'])
         
     session.quit()
 
@@ -77,7 +77,7 @@
                 %(self.person_name, self.widgets['movie']['o_title'].get_text().decode('utf-8'), \
                 self.widgets['movie']['title'].get_text().decode('utf-8'), self.loan_date[:10]))
         except:
-            gutils.error(self, _("Mail could not be sent. Please check e-mail preferences."), self.widgets['window'])
+            gutils.error(_("Mail could not be sent. Please check e-mail preferences."), self.widgets['window'])
     else:
         gutils.info(_("This person has no e-mail address defined."), \
             self.widgets['window'])

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/gutils.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -244,7 +244,7 @@
 # Messages
 
 
-def error(self, msg, parent=None):
+def error(msg, parent=None):
     dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
             gtk.MESSAGE_ERROR, gtk.BUTTONS_OK, msg)

Modified: trunk/lib/people.py
===================================================================
--- trunk/lib/people.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/people.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -71,7 +71,7 @@
             self.p_treemodel.set_value(myiter, 1, p.email)
         self.widgets['people']['window'].present()
     else:
-        gutils.error(self.widgets['results']['window'],_("You should fill the person name"))
+        gutils.error(_("You should fill the person name"))
 
 def edit_person(self):
     try:

Modified: trunk/lib/plugins/export/PluginExportHTML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportHTML.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/export/PluginExportHTML.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -551,7 +551,7 @@
             try:
                 os.mkdir(config['exported_dir'])
             except:
-                gutils.error(self,_("Can't create %s!") % config['exported_dir'])
+                gutils.error(_("Can't create %s!") % config['exported_dir'])
                 return 2
             
         data_path = os.path.join(self.locations['share'], 'export_templates', self.templates[tid]['dir'], 'data')
@@ -585,14 +585,14 @@
                     try:
                         shutil.rmtree(posters_dir)
                     except:
-                        gutils.error(self,_("Can't remove %s!") % config['exported_dir'])
+                        gutils.error(_("Can't remove %s!") % config['exported_dir'])
                         return 3
                 else:
                     return 4
             try:
                 os.mkdir(posters_dir)
             except:
-                gutils.error(self,_("Can't create %s!") % posters_dir)
+                gutils.error(_("Can't create %s!") % posters_dir)
                 return 5
 
         if config['custom_style']:
@@ -635,7 +635,7 @@
             filename = 'page.tpl'
             tpl_header = file(os.path.join(template_dir,filename), "r").read()
         except:
-            gutils.error(self,_("Can't open %s!")%filename)
+            gutils.error(_("Can't open %s!")%filename)
             return False
 
         tpl_header = self.fill_template(tpl_header, 'header', config['title'])
@@ -689,7 +689,7 @@
                 try:
                     exported_file = file(filename, 'w')
                 except:
-                    gutils.error(self,_("Can't create %s!")%filename)
+                    gutils.error(_("Can't create %s!")%filename)
                     return False
                 tmp2 = tpl_header + ''
                 exported_file.write(self.fill_template(tmp2, 'page', str(page)))

Modified: trunk/lib/plugins/extensions/ge_amazon.py
===================================================================
--- trunk/lib/plugins/extensions/ge_amazon.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/extensions/ge_amazon.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -70,11 +70,11 @@
         secretkey = self.get_config_value('secretkey')
 
         if not accesskey or not secretkey:
-            gutils.error(self.app, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+            gutils.error(_('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
             return False
 
         if movie is None:
-            gutils.error(self.app, _('You have no movies in your database'), self.widgets['window'])
+            gutils.error(_('You have no movies in your database'), self.widgets['window'])
             return False
 
         keyword = movie.o_title

Modified: trunk/lib/plugins/imp/AMC.py
===================================================================
--- trunk/lib/plugins/imp/AMC.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/AMC.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -118,7 +118,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/AllMyMovies.py
===================================================================
--- trunk/lib/plugins/imp/AllMyMovies.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/AllMyMovies.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -57,7 +57,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/BESTheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/BESTheMovieLibrary.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -57,7 +57,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/DVDProfiler.py
===================================================================
--- trunk/lib/plugins/imp/DVDProfiler.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/DVDProfiler.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -54,7 +54,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/FoxMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/FoxMovieManager.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -57,7 +57,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/GCstar.py
===================================================================
--- trunk/lib/plugins/imp/GCstar.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/GCstar.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -55,7 +55,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/MovieTrack.py
===================================================================
--- trunk/lib/plugins/imp/MovieTrack.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/MovieTrack.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -53,7 +53,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         if self.filename:
             self.imdbfilename = os.path.join(os.path.dirname(self.filename), 'IMDb.dat')

Modified: trunk/lib/plugins/imp/MyDVDs.py
===================================================================
--- trunk/lib/plugins/imp/MyDVDs.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/MyDVDs.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -57,7 +57,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/PersonalVideoDatabase.py
===================================================================
--- trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/PersonalVideoDatabase.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -54,7 +54,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/TheMovieLibrary.py
===================================================================
--- trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/TheMovieLibrary.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -57,7 +57,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/WintoolzFilmdatenbank.py
===================================================================
--- trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/WintoolzFilmdatenbank.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -56,7 +56,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/imp/__init__.py
===================================================================
--- trunk/lib/plugins/imp/__init__.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/__init__.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -405,7 +405,7 @@
                 ip.clear()
         except Exception, e:
             log.exception('')
-            gutils.error(self, str(e), self.widgets['window'])
+            gutils.error(str(e), self.widgets['window'])
         finally:
             ip.destroy()
             self.widgets['import']['pwindow'].hide()

Modified: trunk/lib/plugins/imp/eXtremeMovieManager.py
===================================================================
--- trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/imp/eXtremeMovieManager.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -54,7 +54,7 @@
         self.filename = name
         self.fileversion = self.read_fileversion()
         if self.fileversion == None:
-            gutils.error(self, _('The format of the file is not supported.'))
+            gutils.error(_('The format of the file is not supported.'))
             return False
         return True
 

Modified: trunk/lib/plugins/movie/PluginMovieAmazon.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/plugins/movie/PluginMovieAmazon.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -56,7 +56,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(None, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(_('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 
@@ -251,7 +251,7 @@
             accesskey = self.config.get('amazon_accesskey', None, section='extensions')
             secretkey = self.config.get('amazon_secretkey', None, section='extensions')
             if not accesskey or not secretkey:
-                gutils.error(None, _('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
+                gutils.error(_('Please configure your Amazon Access Key ID and Secret Key correctly in the preferences dialog.'))
                 return False
             amazon.setLicense(accesskey, secretkey)
 

Modified: trunk/lib/test_movieplugins.py
===================================================================
--- trunk/lib/test_movieplugins.py	2010-01-06 20:35:36 UTC (rev 1387)
+++ trunk/lib/test_movieplugins.py	2010-01-06 21:02:22 UTC (rev 1388)
@@ -158,7 +158,7 @@
         
         if domsgbox:
             if not result:
-                gutils.error(self, 'SearchPluginTest %s: Test NOT successful !' % plugin_name)
+                gutils.error('SearchPluginTest %s: Test NOT successful !' % plugin_name)
             else:
                 gutils.info('SearchPluginTest %s: Test successful !' % plugin_name)
         
@@ -267,7 +267,7 @@
         
         if domsgbox:
             if not result:
-                gutils.error(self, 'PluginTest %s: Test NOT successful !' % plugin_name)
+                gutils.error('PluginTest %s: Test NOT successful !' % plugin_name)
             else:
                 gutils.info('PluginTest %s: Test successful !' % plugin_name)
         



From kura666 at mail.berlios.de  Wed Jan  6 22:14:22 2010
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Wed, 6 Jan 2010 22:14:22 +0100
Subject: [Griffith-svn] r1389 - trunk/lib/plugins/movie
Message-ID: <201001062114.o06LEMW6022074@sheep.berlios.de>

Author: kura666
Date: 2010-01-06 22:14:21 +0100 (Wed, 06 Jan 2010)
New Revision: 1389

Modified:
   trunk/lib/plugins/movie/PluginMovieFilmweb.py
Log:
updated movie plugin Filmweb.pl
(Screenplay added, plot update)


Modified: trunk/lib/plugins/movie/PluginMovieFilmweb.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmweb.py	2010-01-06 21:02:22 UTC (rev 1388)
+++ trunk/lib/plugins/movie/PluginMovieFilmweb.py	2010-01-06 21:14:21 UTC (rev 1389)
@@ -30,11 +30,12 @@
 plugin_language     = _('Polish')
 plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email = '<bartosz.kurczewski at gmail.com>'
-plugin_version      = '1.13'
+plugin_version      = '1.14'
 
 class Plugin(movie.Movie):
     TRAILER_PATTERN     = re.compile("""<a class=["']notSelected["'].*?href=["'](.*?)["']>zwiastuny</a>\s*\[\d+\]\s*&raquo;""")
     DIRECTOR_PATTERN    = re.compile('yseria\s+(.*)\s+scenariusz', re.MULTILINE)
+    SCREENPLAY_PATTERN  = re.compile('scenariusz\s+(.*)\s+zdj.cia', re.MULTILINE)
     O_TITLE_AKA_PATTERN = re.compile('\(AKA\s+(.*?)\)')
 
     def __init__(self, id):
@@ -71,8 +72,19 @@
             self.director = string.replace(self.director, ",",", ")
             self.director = string.replace(self.director, "  "," ")
             self.director = string.replace(self.director, " ,  ",", ")
-            self.director = string.replace(self.director, u",  (wi\xeacej&#160;...)",'')
+            self.director = string.replace(self.director, "(wi?cej...)", '')
 
+    def get_screenplay(self):
+	screenplay = self.SCREENPLAY_PATTERN.findall(self.page)
+	if len(screenplay)>0:
+            self.screenplay = screenplay[0]
+	    self.screenplay = string.replace(self.screenplay, "\t", '')
+	    self.screenplay = re.sub('\s+', ' ', self.screenplay)
+	    self.screenplay = string.replace(self.screenplay, ",",", ")
+	    self.screenplay = string.replace(self.screenplay, "  "," ")
+	    self.screenplay = string.replace(self.screenplay, " ,  ",", ")
+	    self.screenplay = string.replace(self.screenplay, "(wi?cej...)", '')
+
     def get_plot(self):
         self.plot = gutils.trim(self.page,'<h2 id="o-filmie-header" class="replace">','</div>')
         self.plot = gutils.after(self.plot, '<p>')
@@ -81,7 +93,7 @@
         self.plot = gutils.strip_tags(self.plot)
         if url != '':
             plot_page = self.open_page(url=url)
-            self.plot = gutils.trim(plot_page, '<div class="filmContent">', '</ul>')
+	    self.plot = gutils.trim(plot_page, '<div class="filmContent" style="position: relative;">', '</p></li>')
             self.plot = gutils.after(self.plot, u'zg?o? poprawk?')
 
     def get_year(self):
@@ -99,7 +111,6 @@
         self.cast = gutils.trim(self.page, '<td class="film-actor">',u"zobacz wi?cej")
         self.cast = string.replace(self.cast, chr(13),"")
         self.cast = string.replace(self.cast, chr(10),"")
-#        self.cast = string.replace(self.cast, "\n","")
         self.cast = string.replace(self.cast, "\t",'')
         self.cast = string.replace(self.cast, "  ",'')
         self.cast = string.replace(self.cast, '<td class="film-protagonist">', _(" as "))



From kura666 at mail.berlios.de  Fri Jan  8 12:13:21 2010
From: kura666 at mail.berlios.de (kura666 at mail.berlios.de)
Date: Fri, 8 Jan 2010 12:13:21 +0100
Subject: [Griffith-svn] r1390 - trunk/lib/plugins/movie
Message-ID: <201001081113.o08BDLZJ006716@sheep.berlios.de>

Author: kura666
Date: 2010-01-08 12:13:20 +0100 (Fri, 08 Jan 2010)
New Revision: 1390

Modified:
   trunk/lib/plugins/movie/PluginMovieOnet.py
Log:
updated movie plugin Onet.pl
(added: screenplay, fixed: director, rating, plot)


Modified: trunk/lib/plugins/movie/PluginMovieOnet.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieOnet.py	2010-01-06 21:14:21 UTC (rev 1389)
+++ trunk/lib/plugins/movie/PluginMovieOnet.py	2010-01-08 11:13:20 UTC (rev 1390)
@@ -30,7 +30,7 @@
 plugin_language     = _('Polish')
 plugin_author       = 'Piotr O?arowski, Bartosz Kurczewski'
 plugin_author_email = '<bartosz.kurczewski at gmail.com>'
-plugin_version      = '1.8'
+plugin_version      = '1.9'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -63,26 +63,13 @@
             self.title = data
 
     def get_director(self):
-        self.director = gutils.trim(self.page, '<BR>Re\xbfyseria:&nbsp;&nbsp;', '<BR>')
-        if string.find(self.director, '-->') <> -1:
-            self.director = gutils.after(self.director, '-->')
-            self.director = gutils.before(self.director,"<!--")
-        else:
-            self.director = gutils.after(self.director, '<B>')
-            self.director = gutils.before(self.director, '</B>')
+        self.director = gutils.trim(self.page, u'<BR>Re?yseria:&nbsp;&nbsp;', '<BR>')
 
+    def get_screenplay(self):
+	self.screenplay = gutils.trim(self.page, u'<BR>Scenariusz:&nbsp;&nbsp;', 'wi?cej')
+
     def get_plot(self):
-        pos = string.find(self.page, '<TD class=tym>')
-        if pos > 0:
-            self.plot = self.page[pos:]
-            self.plot = gutils.trim(self.plot, '<BR><DIV class=a2>', '</DIV>')
-            return
-        pos = string.find(self.page, '>Recenzje</font>&nbsp;')
-        if pos > 0:
-            self.plot = self.page[pos:]
-            self.plot = gutils.trim(self.plot, '<td class=a1 colspan=3>', '<a class="ar" ')
-        else:
-            self.plot = ''
+	self.plot = gutils.trim(self.page, u'class=tym>Tre??', '</div><BR><TABLE')
 
     def get_year(self):
         self.year = gutils.trim(self.page, 'class=a2 valign=top width="100%">',')<BR>')
@@ -124,7 +111,7 @@
         self.country = gutils.before(self.country,",")
 
     def get_rating(self):
-        self.rating = gutils.trim(self.page, '>Ocena filmu</TD>', 'g\xb3os\xf3w)')
+        self.rating = gutils.trim(self.page, '>Ocena filmu</TD>', 'g?os?w)')
         self.rating = gutils.after(self.rating, '<BR><B>')
         self.rating = gutils.before(self.rating, '/5</B>')
         if self.rating != '':



From piotrek at mail.berlios.de  Sat Jan  9 22:54:25 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 9 Jan 2010 22:54:25 +0100
Subject: [Griffith-svn] r1391 - in trunk: . lib/plugins/movie
Message-ID: <201001092154.o09LsPqV013880@sheep.berlios.de>

Author: piotrek
Date: 2010-01-09 22:54:24 +0100 (Sat, 09 Jan 2010)
New Revision: 1391

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieMyMoviesIt.py
Log:
MyMoviesIt movie plugin updated (thanks to FiloSottile)


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-08 11:13:20 UTC (rev 1390)
+++ trunk/ChangeLog	2010-01-09 21:54:24 UTC (rev 1391)
@@ -5,6 +5,9 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-09  Piotr O?arowski
+	* MyMoviesIt movie plugin updated (thanks to FiloSottile)
+
 2010-01-06  Piotr O?arowski
 	* Some cleanups
 

Modified: trunk/lib/plugins/movie/PluginMovieMyMoviesIt.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieMyMoviesIt.py	2010-01-08 11:13:20 UTC (rev 1390)
+++ trunk/lib/plugins/movie/PluginMovieMyMoviesIt.py	2010-01-09 21:54:24 UTC (rev 1391)
@@ -31,9 +31,9 @@
 plugin_description = "mymovies.it"
 plugin_url = "www.mymovies.it"
 plugin_language = _("Italian")
-plugin_author = "Giovanni Sposito"
-plugin_author_email = "<giovanni.sposito at gmail.com>"
-plugin_version = "0.1"
+plugin_author = "Giovanni Sposito, Filippo Valsorda"
+plugin_author_email = "<giovanni.sposito at gmail.com>, <filosottile.wiki at gmail.com>"
+plugin_version = "0.2"
 
 class Plugin(movie.Movie):
 
@@ -43,7 +43,7 @@
         self.url = "http://www.mymovies.it/dizionario/recensione.asp?id=%s" % self.movie_id
 
     def get_image(self):
-        tmp_image = string.find(self.page, '<img style="border:solid 1px #737373; padding:3px" src="')
+        tmp_image = string.find(self.page, '<img style="float:left; border:solid 1px gray; padding:3px; margin:5px;" src="')
         if tmp_image == -1:
             self.image_url = ''
         else:
@@ -52,15 +52,15 @@
     def get_o_title(self):
         tmp = gutils.trim(self.page, 'Titolo originale <em>', '</em>')
         if not tmp:
-            self.o_title = gutils.trim(self.page, '<meta name="titolo_tag" content="', 'titolo_tag_fine')
+            self.o_title = gutils.trim(self.page, '<h1 style="margin-bottom:3px;">', '</h1>')
         else:
             self.o_title = tmp
 
     def get_title(self):
-        self.title = gutils.trim(self.page, '<meta name="titolo_tag" content="', 'titolo_tag_fine')
+        self.title = gutils.trim(self.page, '<h1 style="margin-bottom:3px;">', '</h1>')
 
     def get_director(self):
-        pos_iniziale = string.find(self.page, '<div style="margin:0px" class="linkblu">')
+        pos_iniziale = string.find(self.page, '<div style="text-align:left" class="linkblu">')
         self.director = gutils.trim(self.page[pos_iniziale:],'Un film di <a','</a>')
         self.director = gutils.after(self.director,'>')
         if not self.director:
@@ -69,20 +69,23 @@
             self.director = gutils.trim(self.page[pos_iniziale:],'Un film di ','<')
 
     def get_plot(self):
-        self.plot = gutils.trim(self.page,'<p style="text-align:justify;">','</p>')
+        pos_iniziale = string.find(self.page, '<div id="recensione">')
+        self.plot = gutils.trim(self.page[pos_iniziale:],'<p>','</p>')
+        if '</a>' in self.plot:
+            self.plot = gutils.after(self.plot, '</a>')
 
     def get_year(self):
-        self.year = gutils.trim(self.page,'" href="http://www.mymovies.it/film/?anno=', '"')
+        self.year = gutils.regextrim(self.page,'<strong> <a title="Film [0-9]+" href="http://www.mymovies.it/film/[0-9]+/">', '</a></strong>')
 
     def get_runtime(self):
         self.runtime = gutils.trim(self.page, 'durata ', ' min.')
 
     def get_genre(self):
-        self.genre = gutils.trim(self.page, 'document.write(\'"http://ad.it.doubleclick.net/adj/MyMdizionario.it/scheda;genere=', ';')
+        self.genre = gutils.regextrim(self.page,'<a title="Film [a-zA-Z]+" href="http://www.mymovies.it/film/[a-zA-Z]+/">', '</a>')
 
-    def get_cast(self):
+    def get_cast(self): # TODO
         tmp = string.find(self.page, 'Con <a')
-        self.cast = gutils.trim(self.page[tmp-6:],'Con ','</a>.')
+        self.cast = gutils.trim(self.page[tmp:],'Con ','</a>.')
         self.cast = string.replace(self.cast, ',', '\n')
 
     def get_classification(self):
@@ -101,27 +104,16 @@
         self.site = self.url
 
     def get_trailer(self):
-        tmp = gutils.trim(self.page, '<a title="Trailer', '">Trailer</a></span>')
-        if tmp:
-            self.trailer = re.sub('.*href="', '' ,tmp)
-        else:
-            self.trailer = ''
+        self.trailer = "http://www.mymovies.it/trailer/?id=%s" % self.movie_id
 
     def get_country(self):
         pos = string.find(self.page, ' min.')
         self.country = gutils.trim(self.page[pos+2:], '- ', '  <')
 
     def get_rating(self):
-        #posizione della parte intera della votazione TODO: translate it :-)
-        rat = gutils.trim(self.page, '<i>mymonetro</i> ', ',')
+        rat = gutils.trim(self.page, '<div style="text-align:center; font-size:23px; font-weight:bold; letter-spacing:1px; margin:0px 11px 7px 11px">', '<span style="font-size:11px">/5</span></div>')
         if rat != '':
-            self.rating = int(rat)
-            #posizione di un'eventuale parte decimale # TODO: see above
-            pos_rating = string.find(self.page, '<i>mymonetro</i> ')
-            pos_rating_dec = gutils.trim(self.page[pos_rating+18:], ',', ' stelle')
-            if pos_rating_dec != '':
-                if int(pos_rating_dec) > 51:
-                    self.rating = self.rating + 1
+            self.rating = int(round(float(rat.replace(',', '.'))*2, 0))
         else:
             self.rating = 0
 



From piotrek at mail.berlios.de  Sat Jan  9 23:45:18 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 9 Jan 2010 23:45:18 +0100
Subject: [Griffith-svn] r1392 - in trunk: . glade lib
Message-ID: <201001092245.o09MjI1b020290@sheep.berlios.de>

Author: piotrek
Date: 2010-01-09 23:45:16 +0100 (Sat, 09 Jan 2010)
New Revision: 1392

Modified:
   trunk/ChangeLog
   trunk/glade/griffith.glade
   trunk/lib/dbupgrade.py
   trunk/lib/gutils.py
   trunk/lib/main_treeview.py
   trunk/lib/movie.py
   trunk/lib/widgets.py
Log:
* Replace "Aspect ratio" field with "Resolution" (aspect ratio is hidden for now)
* pep8ify few more files


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/ChangeLog	2010-01-09 22:45:16 UTC (rev 1392)
@@ -6,6 +6,8 @@
 
 
 2010-01-09  Piotr O?arowski
+	* Replace "Aspect ratio" field with "Resolution" (aspect ratio is hidden
+	  for now)
 	* MyMoviesIt movie plugin updated (thanks to FiloSottile)
 
 2010-01-06  Piotr O?arowski

Modified: trunk/glade/griffith.glade
===================================================================
--- trunk/glade/griffith.glade	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/glade/griffith.glade	2010-01-09 22:45:16 UTC (rev 1392)
@@ -934,7 +934,7 @@
                             <property name="column_spacing">5</property>
                             <property name="row_spacing">2</property>
                             <child>
-                              <widget class="GtkLabel" id="m_ratio">
+                              <widget class="GtkLabel" id="m_resolution">
                                 <property name="visible">True</property>
                                 <property name="can_focus">True</property>
                                 <property name="xalign">0</property>
@@ -972,7 +972,7 @@
                               <widget class="GtkLabel" id="label17">
                                 <property name="visible">True</property>
                                 <property name="xalign">0</property>
-                                <property name="label" translatable="yes">Aspect ratio</property>
+                                <property name="label" translatable="yes">Resolution</property>
                               </widget>
                               <packing>
                                 <property name="top_attach">9</property>

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/lib/dbupgrade.py	2010-01-09 22:45:16 UTC (rev 1392)
@@ -32,6 +32,7 @@
 
 log = logging.getLogger("Griffith")
 
+
 @gutils.popup_message(_('Upgrading database...'))
 def upgrade_database(self, version, config):
     """Create new db or update existing one to current format"""
@@ -57,6 +58,7 @@
         db.tables.media.insert(bind=b).execute(name=u'HD DVD')
         db.tables.media.insert(bind=b).execute(name=u'Blu-ray')
         db.tables.ratios.insert(bind=b).execute(name=u'16:9')
+        db.tables.ratios.insert(bind=b).execute(name=u'16:10')
         db.tables.ratios.insert(bind=b).execute(name=u'4:3')
         db.tables.acodecs.insert(bind=b).execute(name=u'AC-3 Dolby audio')
         db.tables.acodecs.insert(bind=b).execute(name=u'OGG')
@@ -142,9 +144,9 @@
         log.info('... adding new columns')
         # common SQL statements
         queries = {'poster_md5': 'ALTER TABLE movies ADD poster_md5 VARCHAR(32) NULL REFERENCES posters(md5sum);',
-                   'ratio_id'  : 'ALTER TABLE movies ADD ratio_id INTEGER NULL REFERENCES ratios(ratio_id);',
+                   'ratio_id': 'ALTER TABLE movies ADD ratio_id INTEGER NULL REFERENCES ratios(ratio_id);',
                    'screenplay': 'ALTER TABLE movies ADD screenplay VARCHAR(256) NULL;',
-                   'cameraman' : 'ALTER TABLE movies ADD cameraman VARCHAR(256) NULL;'}
+                   'cameraman': 'ALTER TABLE movies ADD cameraman VARCHAR(256) NULL;'}
         # if needed some db specific SQL statements
         if e_type == 'mysql':
             pass
@@ -156,7 +158,7 @@
             except Exception, e:
                 log.error("Cannot add '%s' column: %s", key, e)
                 return False
-        
+
         log.info('... saving posters in database')
         posters_dir = get_old_posters_location(self.data_dir, config, clean_config=True)
         updated = {}
@@ -166,13 +168,13 @@
             if poster_file_name in updated:
                 continue
             if os.path.isfile(poster_file_name):
-                poster_md5  = gutils.md5sum(file(poster_file_name, 'rb'))
+                poster_md5 = gutils.md5sum(file(poster_file_name, 'rb'))
                 poster = self.session.query(db.Poster).filter_by(md5sum=poster_md5).first()
                 if not poster:
                     poster = db.Poster(md5sum=poster_md5, data=file(poster_file_name, 'rb').read())
                     self.session.add(poster)
 
-                update_query = movies_table.update(movies_table.c.image==movie.image, {'poster_md5': poster_md5, 'image': None}, bind=b)
+                update_query = movies_table.update(movies_table.c.image == movie.image, {'poster_md5': poster_md5, 'image': None}, bind=b)
 
                 try:
                     # yeah, we're commiting inside the loop,
@@ -190,7 +192,7 @@
                         log.warn("cannot remove %s", poster_file_name)
             else:
                 log.warn("file not found: %s)", movie.image)
-                update_query = movies_table.update(movies_table.c.image==movie.image, {'image': None}, bind=b)
+                update_query = movies_table.update(movies_table.c.image == movie.image, {'image': None}, bind=b)
                 update_query.execute()
                 updated[poster_file_name] = True
         del updated
@@ -203,7 +205,7 @@
     if version == 3:    # fix changes between v3 and v4
         version += 1
         log.info("Upgrading database to version %d...", version)
-        
+
         log.info('... adding new columns')
         # common SQL statements
         queries = {'barcode': 'ALTER TABLE movies ADD barcode VARCHAR(32) NULL;',
@@ -221,11 +223,11 @@
         db_version.value = unicode(version)
         self.session.add(db_version)
         self.session.commit()
-    
+
     if version == 4:    # fix changes between v4 and v5
         version += 1
         log.info("Upgrading database to version %d...", version)
-        
+
         log.info('... deleting old filters')
         # new format, filters were introduced in -beta so we'll free to delete them without warning
         query = 'DELETE FROM filters;'
@@ -243,6 +245,7 @@
 # for Griffith <= 0.6.2 compatibility
 # ---------------------------------------------------
 
+
 def convert_from_old_db(config, source_file, destination_file, locations):    #{{{
     """
     convert .gri database into .bd one
@@ -336,8 +339,8 @@
     old_cursor.execute("DELETE FROM collections WHERE name = ''")
     old_cursor.execute("DELETE FROM collections WHERE name = 'None'")
     old_cursor.execute("DELETE FROM languages WHERE name = ''")
-    
-    config.set('type','sqlite', section='database')
+
+    config.set('type', 'sqlite', section='database')
     config.set('file', 'griffith.db', section='database')
     config['posters'] = 'posters'
     config.set('color', 0, section='defaults')
@@ -350,7 +353,7 @@
     new_db = GriffithSQL(config, locations['home'], fallback=False)
 
     # collections
-    collection_mapper = {'':None, u'':None, 0:None, '0':None, -1:None, '-1':None}
+    collection_mapper = {'': None, u'': None, 0: None, '0': None, -1: None, '-1': None}
     old_cursor.execute("SELECT id, name FROM collections;") # loaned status will be set later - buggy databases :-(
     for i in old_cursor.fetchall():
         o = db.Collection(name=i[1])
@@ -361,9 +364,9 @@
             log.error(e)
             continue
         collection_mapper[i[0]] = o.collection_id
-    
+
     # volumes
-    volume_mapper = {'':None, u'':None, 0:None, '0':None, -1:None, '-1':None}
+    volume_mapper = {'': None, u'': None, 0: None, '0': None, -1: None, '-1': None}
     old_cursor.execute("SELECT id, name FROM volumes;") # loaned status will be set later - buggy databases :-(
     for i in old_cursor.fetchall():
         o = db.Volume(name=i[1])
@@ -387,9 +390,9 @@
             log.error(e)
             continue
         person_mapper[i[0]] = o.person_id
-    
+
     # languages
-    language_mapper = {'':None, u'':None, 0:None, '0':None, -1:None, '-1':None}
+    language_mapper = {'': None, u'': None, 0: None, '0': None, -1: None, '-1': None}
     old_cursor.execute("SELECT id, name FROM languages;")
     for i in old_cursor.fetchall():
         o = new_db.session.query(db.Lang).filter_by(name=i[1]).first()
@@ -406,7 +409,7 @@
             language_mapper[i[0]] = o.lang_id
 
     # media
-    medium_mapper = {'':None, u'':None, 0:None, '0':None, -1:None, '-1':None}
+    medium_mapper = {'': None, u'': None, 0: None, '0': None, -1: None, '-1': None}
     old_cursor.execute("SELECT id, name FROM media;")
     for i in old_cursor.fetchall():
         o = new_db.session.query(db.Medium).filter_by(name=i[1]).first()
@@ -421,7 +424,7 @@
                 log.error(e)
                 continue
             medium_mapper[i[0]] = o.medium_id
-    
+
     # tags
     tag_mapper = {}
     old_cursor.execute("SELECT id, name FROM tags;")
@@ -438,7 +441,7 @@
                 log.error(e)
                 continue
             tag_mapper[i[0]] = o.tag_id
-    
+
     # movies
     movie_mapper = {}
     old_cursor.execute("""
@@ -450,9 +453,9 @@
     for i in old_cursor.fetchall():
         o = db.Movie()
         o.number = digits_only(i[6])
-        if volume_mapper.has_key(i[1]):
+        if i[1] in volume_mapper:
             o.volume_id = volume_mapper[i[1]]
-        if collection_mapper.has_key(i[2]):
+        if i[2] in collection_mapper:
             o.collection_id = collection_mapper[i[2]]
         o.o_title = i[3][:255]
         o.title = i[4][:255]
@@ -471,7 +474,7 @@
         o.trailer = i[18][:255]
         o.rating = digits_only(i[19])
         #o.loaned = bool(i[20]) # updated later
-        if medium_mapper.has_key(int(i[21])):
+        if int(i[21]) in medium_mapper:
             o.medium_id = medium_mapper[int(i[21])]
         o.media_num = digits_only(i[22])
         o.notes = i[23]
@@ -480,7 +483,7 @@
         o.cond = digits_only(i[26], 5)
         o.color = digits_only(i[27], 3)
         o.layers = digits_only(i[28], 4)
-        
+
         try:
             new_db.session.add(o)
             new_db.session.commit()
@@ -503,7 +506,7 @@
             except Exception, e:
                 log.error(e)
                 continue
-    
+
     # movie lang
     old_cursor.execute("SELECT movie_id, lang_id, type FROM movie_lang WHERE movie_id IN (SELECT id FROM movies);")
     for i in old_cursor.fetchall():
@@ -538,9 +541,9 @@
                 log.error(e)
                 continue
         if int(i[1]) == 0:
-            if vol is not None and len(vol.movies)>0:
+            if vol is not None and len(vol.movies) > 0:
                 m = vol.movies[0]
-            elif col is not None and len(col.movies)>0:
+            elif col is not None and len(col.movies) > 0:
                 m = col.movies[0]
             else:
                 log.warn("Cannot find associated movie for this loan (%s)" % i)
@@ -551,7 +554,7 @@
             except Exception, e:
                 log.error(e)
                 continue
-        
+
         l = db.Loan()
         l.person_id = person_mapper[i[0]]
         l.date = str(i[4])[:10]
@@ -560,7 +563,7 @@
             l.return_date = None
         else:
             l.return_date = str(i[5])[:10]
-        
+
         # update volume / collection status
         if int(i[2]) > 0:
             l.volume_id = volume_mapper[i[2]]
@@ -572,7 +575,7 @@
             if not_returned:
                 col.loaned = True
                 col.save()
-        l.save();
+        l.save()
         m.loans.append(l)
         try:
             new_db.session.add(m)
@@ -584,6 +587,7 @@
     return new_db
 #}}}
 
+
 def get_old_posters_location(home_dir, config, clean_config=False):
     if config.get('posters', None) is not None:
         dirname = config.get('posters')
@@ -599,4 +603,3 @@
         config.remove_option('posters')
         config.save()
     return os.path.join(home_dir, dirname)
-

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/lib/gutils.py	2010-01-09 22:45:16 UTC (rev 1392)
@@ -222,11 +222,6 @@
     return text
 
 
-def save_pixmap(self, pixmap, filename):
-    """XXX: deprecated"""
-    pixmap.save(filename, 'jpeg', {'quality': '70'})
-
-
 def clean(text):
     t = strip_tags(text)
     t = string.replace(t, '&nbsp;', ' ')

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/lib/main_treeview.py	2010-01-09 22:45:16 UTC (rev 1392)
@@ -96,8 +96,7 @@
         w['year'].set_text(str(item['year']))
     else:
         w['year'].set_text('')
-    if False: # FIXME: add a field in main window
-    #if 'resolution' in item and item['resolution']:
+    if 'resolution' in item and item['resolution']:
         if self.config.get('use_resolution_alias', True):
             w['resolution'].set_text(item['resolution'])
         elif 'height' in item and item['height'] and 'width' in item and item['width']:
@@ -105,7 +104,7 @@
         else: # failback to 'resolution'
             w['resolution'].set_text(item['resolution'])
     else:
-        #w['resolution'].set_text('') # FIXME: add a field in main window
+        w['resolution'].set_text('')
         pass
     if 'runtime' in item and item['runtime']:
         w['runtime'].set_text(str(int(item['runtime'])))
@@ -219,13 +218,14 @@
             w['vcodec'].set_text('')
     else:
         w['vcodec'].set_text('')
-    if 'ratio_id' in item:
-        if item.ratio is not None:
-            w['ratio'].set_markup("<i>%s</i>" % gutils.html_encode(item.ratio.name))
-        else:
-            w['ratio'].set_text('')
-    else:
-        w['ratio'].set_text('')
+    # TODO: add widgets in main and edit windows
+    #if 'ratio_id' in item:
+    #    if item.ratio is not None:
+    #        w['ratio'].set_markup("<i>%s</i>" % gutils.html_encode(item.ratio.name))
+    #    else:
+    #        w['ratio'].set_text('')
+    #else:
+    #    w['ratio'].set_text('')
 
     # poster
     if 'poster_md5' in item and item['poster_md5']:

Modified: trunk/lib/movie.py
===================================================================
--- trunk/lib/movie.py	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/lib/movie.py	2010-01-09 22:45:16 UTC (rev 1392)
@@ -21,19 +21,20 @@
 # You may use and distribute this software under the terms of the
 # GNU General Public License, version 2 or later
 
-from urllib import *
+import logging
+import os
+import string
 import sys
-import string
-import gtk
-import os
-import os.path
+import tempfile
 import threading
 import time
-import tempfile
-import logging
-log = logging.getLogger("Griffith")
+from urllib import *
+import gtk
 import gutils
 
+log = logging.getLogger("Griffith")
+
+
 class Movie(object):
     cast = None
     classification = None
@@ -57,7 +58,7 @@
     cameraman = None
     resolution = None
     barcode = None
-    
+
     movie_id = None
     debug = False
     locations = None
@@ -72,59 +73,81 @@
     encode = 'iso-8859-1'
     fields_to_fetch = []
     progress = None
-    
+
     # functions that plugin should implement: {{{
     def initialize(self):
         pass
+
     def get_barcode(self):
         pass
+
     def get_cameraman(self):
         pass
+
     def get_cast(self):
         pass
+
     def get_classification(self):
         pass
+
     def get_country(self):
         pass
+
     def get_director(self):
         pass
+
     def get_genre(self):
         pass
+
     def get_image(self):
         pass
+
     def get_notes(self):
         pass
+
     def get_o_site(self):
         pass
+
     def get_o_title(self):
         pass
+
     def get_plot(self):
         pass
+
     def get_rating(self):
         pass
+
     def get_resolution(self):
         pass
+
     def get_runtime(self):
         pass
+
     def get_screenplay(self):
         pass
+
     def get_site(self):
         pass
+
     def get_studio(self):
         pass
+
     def get_title(self):
         pass
+
     def get_trailer(self):
         pass
+
     def get_year(self):
         pass
     #}}}
 
     def __getitem__(self, key):
-        return getattr(self,key)
+        return getattr(self, key)
+
     def __setitem__(self, key, value):
-        setattr(self,key,value)
-    
+        setattr(self, key, value)
+
     def get_movie(self, parent_window=None):
         try:
             #
@@ -133,7 +156,7 @@
             if self.progress is None:
                 self.progress = Progress(parent_window)
             self.progress.set_data(parent_window, _("Fetching data"), _("Wait a moment"), True)
-            #            
+            #
             # get the page
             #
             if not self.open_page(parent_window):
@@ -209,7 +232,7 @@
             except:
                 self.image = ""
                 try:
-                    os.remove("%s.jpg" % tmp_dest )
+                    os.remove("%s.jpg" % tmp_dest)
                 except:
                     log.info("Can't remove %s file" % tmp_dest)
         else:
@@ -261,7 +284,7 @@
                 self[i] = gutils.clean(self[i])
                 if not isinstance(self[i], unicode):
                     self[i] = gutils.gdecode(self[i], self.encode)
-        
+
             if 'o_title' in self.fields_to_fetch and self.o_title is not None:
                 if self.o_title[:4] == u'The ':
                     self.o_title = self.o_title[4:] + u', The'
@@ -272,6 +295,7 @@
             # close the progress dialog which was opened in get_movie
             self.progress.hide()
 
+
 class SearchMovie(object):
     page = None
     number_results = None
@@ -297,7 +321,7 @@
             if self.progress is None:
                 self.progress = Progress(parent_window)
             self.progress.set_data(parent_window, _("Searching"), _("Wait a moment"), True)
-            #            
+            #
             # call the plugin specific search method
             #
             return self.search(parent_window)
@@ -305,14 +329,14 @@
             # dont forget to hide the progress dialog
             self.progress.hide()
 
-    def open_search(self,parent_window):
+    def open_search(self, parent_window):
         self.titles = [""]
         self.ids = [""]
         if self.url.find('%s') > 0:
             self.url = self.url % self.title
             self.url = string.replace(self.url, ' ', '%20')
         else:
-            self.url = string.replace(self.url+self.title, ' ', '%20')
+            self.url = string.replace(self.url + self.title, ' ', '%20')
         try:
             url = self.url.encode(self.encode)
         except UnicodeEncodeError:
@@ -344,7 +368,9 @@
         urlcleanup()
         return True
 
+
 class Retriever(threading.Thread):
+
     def __init__(self, URL, parent_window, progress, destination=None):
         self.URL = URL
         self.html = None
@@ -367,16 +393,16 @@
             self.join()
 
     def hook(self, count, blockSize, totalSize):
-        if totalSize ==-1:
+        if totalSize == -1:
             pass
         else:
             try:
-                downloaded_percentage = min((count*blockSize*100)/totalSize, 100)
+                downloaded_percentage = min((count * blockSize * 100) / totalSize, 100)
             except:
                 downloaded_percentage = 100
             if count != 0:
-                downloaded_kbyte = int(count * blockSize/1024.0)
-                filesize_kbyte = int(totalSize/1024.0)
+                downloaded_kbyte = int(count * blockSize / 1024.0)
+                filesize_kbyte = int(totalSize / 1024.0)
 
 #
 # use own derived URLopener class because we need to set a correct User-Agent
@@ -384,15 +410,19 @@
 # which not all sites accepting. (zelluloid.de for example)
 #
 _uaurlopener = None
+
+
 def urlretrieve(url, filename=None, reporthook=None, data=None):
     global _uaurlopener
     if not _uaurlopener:
         _uaurlopener = UAFancyURLopener()
     return _uaurlopener.retrieve(url, filename, reporthook, data)
 
+
 class UAFancyURLopener(FancyURLopener):
     # use Firefox 3.0 User-Agent string from Windows XP
     version = 'Mozilla/5.0 (Windows; U; Windows NT 6.0) Gecko/2008052906 Firefox/3.0'
+
     def __init__(self, *args, **kwargs):
         FancyURLopener.__init__(self, *args, **kwargs)
         # additional HTTP headers to work around the html file compression which
@@ -400,8 +430,10 @@
         self.addheaders.append(('Cache-Control', 'no-cache'))
         self.addheaders.append(('Pragma', 'no-cache'))
 
+
 class Progress:
-    def __init__(self, window, title = '', message = ''):
+
+    def __init__(self, window, title='', message=''):
         self.status = False
         self.dialog = gtk.Dialog(title, window, gtk.DIALOG_MODAL, ())
         self.dialog.set_urgency_hint(False)

Modified: trunk/lib/widgets.py
===================================================================
--- trunk/lib/widgets.py	2010-01-09 21:54:24 UTC (rev 1391)
+++ trunk/lib/widgets.py	2010-01-09 22:45:16 UTC (rev 1392)
@@ -25,6 +25,7 @@
 import gtk
 import advfilter
 
+
 def define_widgets(self, gladefile):
     get = lambda x: gladefile.get_widget(x)
     self.widgets = {}
@@ -41,108 +42,109 @@
 
 
     self.widgets['movie'] = {#{{{
-        'cast'                   : get('m_cast'),
-        'classification'         : get('m_classification'),
-        'cameraman'              : get('m_cameraman'),
-        'collection'             : get('m_collection'),
-        'color'                  : get('m_color'),
-        'condition'              : get('m_condition'),
-        'country'                : get('m_country'),
-        'director'               : get('m_director'),
-        'genre'                  : get('m_genre'),
-        'imdb'                   : get('m_imdb'),
-        'layers'                 : get('m_layers'),
-        'loan_info'              : get('loan_information'),
-        'medium'                 : get('m_medium'),
-        'notes'                  : get('m_notes'),
-        'number'                 : get('m_number'),
-        'o_title'                : get('m_o_title'),
-        'picture'                : get('m_picture_image'),
-        'picture_button'         : get('m_picture'),
-        'plot'                   : get('m_plot'),
-        'region'                 : get('m_region'),
-        'runtime'                : get('m_runtime'),
-        'screenplay'             : get('m_screenplay'),
-        'seen_icon'              : get('m_seen_icon'),
-        'site'                   : get('m_site'),
-        'studio'                 : get('m_studio'),
-        'ratio'                  : get('m_ratio'),
-        'tags'                   : get('m_tags'),
-        'title'                  : get('m_title'),
-        'trailer'                : get('m_trailer'),
-        'vcodec'                 : get('m_vcodec'),
-        'volume'                 : get('m_volume'),
-        'year'                   : get('m_year'),
-        'audio_vbox'             : get('m_audio_vbox'),
-        'subtitle_vbox'          : get('m_subtitle_vbox'),
-        'show_collection_button' : get('m_show_collection_button'),
-        'show_volume_button'     : get('m_show_volume_button'),
-        'go_o_site_button'       : get('go_o_site'),
-        'go_site_button'         : get('go_site'),
-        'go_trailer_button'      : get('go_trailer'),
-        'return_button'          : get('return_button'),
-        'loan_button'            : get('loan_button'),
-        'loan_history'           : get('loan_history'),
-        'loan_to'                : get('loan_to'),
-        'email_reminder_button'  : get('b_email_reminder'),
-        'image_rating'           : get('m_image_rating'),
+        'cast': get('m_cast'),
+        'classification': get('m_classification'),
+        'cameraman': get('m_cameraman'),
+        'collection': get('m_collection'),
+        'color': get('m_color'),
+        'condition': get('m_condition'),
+        'country': get('m_country'),
+        'director': get('m_director'),
+        'genre': get('m_genre'),
+        'imdb': get('m_imdb'),
+        'layers': get('m_layers'),
+        'loan_info': get('loan_information'),
+        'medium': get('m_medium'),
+        'notes': get('m_notes'),
+        'number': get('m_number'),
+        'o_title': get('m_o_title'),
+        'picture': get('m_picture_image'),
+        'picture_button': get('m_picture'),
+        'plot': get('m_plot'),
+        'region': get('m_region'),
+        'resolution': get('m_resolution'),
+        'runtime': get('m_runtime'),
+        'screenplay': get('m_screenplay'),
+        'seen_icon': get('m_seen_icon'),
+        'site': get('m_site'),
+        'studio': get('m_studio'),
+        'ratio': get('m_ratio'),
+        'tags': get('m_tags'),
+        'title': get('m_title'),
+        'trailer': get('m_trailer'),
+        'vcodec': get('m_vcodec'),
+        'volume': get('m_volume'),
+        'year': get('m_year'),
+        'audio_vbox': get('m_audio_vbox'),
+        'subtitle_vbox': get('m_subtitle_vbox'),
+        'show_collection_button': get('m_show_collection_button'),
+        'show_volume_button': get('m_show_volume_button'),
+        'go_o_site_button': get('go_o_site'),
+        'go_site_button': get('go_site'),
+        'go_trailer_button': get('go_trailer'),
+        'return_button': get('return_button'),
+        'loan_button': get('loan_button'),
+        'loan_history': get('loan_history'),
+        'loan_to': get('loan_to'),
+        'email_reminder_button': get('b_email_reminder'),
+        'image_rating': get('m_image_rating'),
     }
     get('m_seen_icon_eventbox').connect('button_press_event', self.on_m_seen_icon_button_press_event)
     #}}}
 
     self.widgets['add'] = {#{{{
-        'window'           : get('add_movie'),
-        'notebook'         : get('notebook_add'),
-        'barcode'          : get('am_barcode'),
-        'classification'   : get('am_classification'),
-        'cameraman'        : get('am_cameraman'),
-        'collection'       : get('am_collection_combo'),
-        'color'            : get('am_color'),
-        'condition'        : get('am_condition'),
-        'country'          : get('am_country'),
-        'director'         : get('am_director'),
-        'discs'            : get('am_discs'),
-        'genre'            : get('am_genre'),
-        'site'             : get('am_imdb'),
-        'layers'           : get('am_layers'),
-        'media'            : get('am_media'),
-        'medium_vbox'      : get('am_medium_vbox'),
-        'number'           : get('am_number'),
-        'notes'            : get('am_obs'),
-        'o_title'          : get('am_original_title'),
-        'picture'          : get('am_image'),
-        'image'            : get('am_hide_image_name'),
-        'plot'             : get('am_plot'),
-        'plugin_desc'      : get('am_plugin_desc'),
-        'plugin_image'     : get('am_plugin_image'),
-        #'ratio'            : get('am_ratio'), # TODO
-        'region'           : get('am_region'),
-        'resolution'       : get('am_resolution'),
-        'runtime'          : get('am_runtime'),
-        'seen'             : get('am_seen'),
-        'o_site'           : get('am_site'),
-        'screenplay'       : get('am_screenplay'),
-        'source'           : get('am_source'),
-        'studio'           : get('am_studio'),
-        'tag_vbox'         : get('am_tag_vbox'),
-        'title'            : get('am_title'),
-        'trailer'          : get('am_trailer'),
-        'vcodec'           : get('am_vcodec'),
-        'volume'           : get('am_volume_combo'),
-        'cast'             : get('am_with'),
-        'year'             : get('am_year'),
-        'image_rating'     : get('image_add_rating'),
-        'rating_slider'    : get('rating_scale_add'),
-        'lang_menu'        : get('lang_menu'),
-        'lang_treeview'    : get('lang_treeview'),
-        'b_get_from_web'   : get('get_from_web'),
-        'c_web_source'     : get('combo_source'), # c_web_source
-        'delete_poster'    : get('t_delete_poster'),
-        'add_button'       : get('am_add_button'),
-        'add_close_button' : get('am_add_close_button'),
-        'clear_button'     : get('am_clear_button'),
-        'save_button'      : get('am_save_button'),
-        'cb_only_empty'    : get('am_cb_only_empty'),
+        'window': get('add_movie'),
+        'notebook': get('notebook_add'),
+        'barcode': get('am_barcode'),
+        'classification': get('am_classification'),
+        'cameraman': get('am_cameraman'),
+        'collection': get('am_collection_combo'),
+        'color': get('am_color'),
+        'condition': get('am_condition'),
+        'country': get('am_country'),
+        'director': get('am_director'),
+        'discs': get('am_discs'),
+        'genre': get('am_genre'),
+        'site': get('am_imdb'),
+        'layers': get('am_layers'),
+        'media': get('am_media'),
+        'medium_vbox': get('am_medium_vbox'),
+        'number': get('am_number'),
+        'notes': get('am_obs'),
+        'o_title': get('am_original_title'),
+        'picture': get('am_image'),
+        'image': get('am_hide_image_name'),
+        'plot': get('am_plot'),
+        'plugin_desc': get('am_plugin_desc'),
+        'plugin_image': get('am_plugin_image'),
+        #'ratio': get('am_ratio'), # TODO
+        'region': get('am_region'),
+        'resolution': get('am_resolution'),
+        'runtime': get('am_runtime'),
+        'seen': get('am_seen'),
+        'o_site': get('am_site'),
+        'screenplay': get('am_screenplay'),
+        'source': get('am_source'),
+        'studio': get('am_studio'),
+        'tag_vbox': get('am_tag_vbox'),
+        'title': get('am_title'),
+        'trailer': get('am_trailer'),
+        'vcodec': get('am_vcodec'),
+        'volume': get('am_volume_combo'),
+        'cast': get('am_with'),
+        'year': get('am_year'),
+        'image_rating': get('image_add_rating'),
+        'rating_slider': get('rating_scale_add'),
+        'lang_menu': get('lang_menu'),
+        'lang_treeview': get('lang_treeview'),
+        'b_get_from_web': get('get_from_web'),
+        'c_web_source': get('combo_source'), # c_web_source
+        'delete_poster': get('t_delete_poster'),
+        'add_button': get('am_add_button'),
+        'add_close_button': get('am_add_close_button'),
+        'clear_button': get('am_clear_button'),
+        'save_button': get('am_save_button'),
+        'cb_only_empty': get('am_cb_only_empty'),
     }
     self.widgets['add']['window'].connect('delete_event', self.on_delete_event_am)
     self.widgets['add']['lang_treeview'].connect('button_press_event', self.on_lang_treeview_button_press_event)
@@ -153,105 +155,105 @@
     #}}}
 
     self.widgets['advfilter'] = {#{{{
-        'window'           : get('w_advfilter'),
-        'advfilter_vbox'   : get('advfilter_rules_vbox'),
-        'rb_seen'          : get('af_rb_seen'),
-        'rb_seen_only'     : get('af_rb_seen_only'),
-        'rb_seen_only_n'   : get('af_rb_seen_only_n'),
-        'rb_loaned'        : get('af_rb_loaned'),
-        'rb_loaned_only'   : get('af_rb_loaned_only'),
-        'rb_loaned_only_n' : get('af_rb_loaned_only_n'),
-        'tags_vbox'        : get('af_tags_vbox'),
-        'volumes_vbox'     : get('af_volumes_vbox'),
-        'collections_vbox' : get('af_collections_vbox'),
-        'loans_vbox'       : get('af_loans_vbox'),
-        'dynamic_vbox'     : get('af_dynamic_vbox'),
-        'add_button'       : get('af_add_button'),
-        'tags_frame'       : get('af_frame_tags'),
-        'volumes_frame'    : get('af_frame_volumes'),
+        'window': get('w_advfilter'),
+        'advfilter_vbox': get('advfilter_rules_vbox'),
+        'rb_seen': get('af_rb_seen'),
+        'rb_seen_only': get('af_rb_seen_only'),
+        'rb_seen_only_n': get('af_rb_seen_only_n'),
+        'rb_loaned': get('af_rb_loaned'),
+        'rb_loaned_only': get('af_rb_loaned_only'),
+        'rb_loaned_only_n': get('af_rb_loaned_only_n'),
+        'tags_vbox': get('af_tags_vbox'),
+        'volumes_vbox': get('af_volumes_vbox'),
+        'collections_vbox': get('af_collections_vbox'),
+        'loans_vbox': get('af_loans_vbox'),
+        'dynamic_vbox': get('af_dynamic_vbox'),
+        'add_button': get('af_add_button'),
+        'tags_frame': get('af_frame_tags'),
+        'volumes_frame': get('af_frame_volumes'),
         'collections_frame': get('af_frame_collections'),
-        'loans_frame'      : get('af_frame_loans'),
-        'cb_name'          : get('af_cbe_name'),
-        'name'             : get('af_cbe_name_entry'),
+        'loans_frame': get('af_frame_loans'),
+        'cb_name': get('af_cbe_name'),
+        'name': get('af_cbe_name_entry'),
     }
     self.widgets['advfilter']['window'].connect('delete_event', self.hide_advfilter_window)
     self.widgets['advfilter']['window'].set_transient_for(self.widgets['window'])
     #}}}
 
     self.widgets['preferences'] = {#{{{
-        'window'            : get('w_preferences'),
-        'notebook'          : get('p_notebook'),
-        'treeview'          : get('p_treeview'),
-        'color'             : get('p_color'),
-        'condition'         : get('p_condition'),
-        'db_details'        : get('p_db_details'),
-        'db_host'           : get('p_db_host'),
-        'db_name'           : get('p_db_name'),
-        'db_passwd'         : get('p_db_passwd'),
-        'db_port'           : get('p_db_port'),
-        'db_type'           : get('p_db_type'),
-        'db_user'           : get('p_db_user'),
-        'epdf_reader'       : get('pdf_reader_entry'),
-        'font'              : get('p_font'),
-        'layers'            : get('p_layers'),
-        'media'             : get('p_media'),
-        'region'            : get('p_region'),
-        's_classification'  : get('p_s_classification'),
-        's_country'         : get('p_s_country'),
-        's_director'        : get('p_s_director'),
-        's_genre'           : get('p_s_genre'),
-        's_image'           : get('p_s_image'),
-        's_notes'           : get('p_s_notes'),
-        's_o_site'          : get('p_s_o_site'),
-        's_o_title'         : get('p_s_o_title'),
-        's_plot'            : get('p_s_plot'),
-        's_rating'          : get('p_s_rating'),
-        's_runtime'         : get('p_s_runtime'),
-        's_site'            : get('p_s_site'),
-        's_studio'          : get('p_s_studio'),
-        's_title'           : get('p_s_title'),
-        's_trailer'         : get('p_s_trailer'),
-        's_cast'            : get('p_s_cast'),
-        's_year'            : get('p_s_year'),
-        's_screenplay'      : get('p_s_screenplay'),
-        's_cameraman'       : get('p_s_cameraman'),
-        's_resolution'      : get('p_s_resolution'),
-        's_barcode'         : get('p_s_barcode'),
-        's_limit'           : get('p_sp_s_limit'),
-        'vcodec'            : get('p_vcodec'),
-        'view_image'        : get('view_image'),
-        'view_number'       : get('view_number'),
-        'view_o_title'      : get('view_otitle'),
-        'view_title'        : get('view_title'),
-        'view_director'     : get('view_director'),
-        'view_genre'        : get('view_genre'),
-        'view_seen'         : get('view_seen'),
-        'view_year'         : get('view_year'),
-        'view_runtime'      : get('view_runtime'),
-        'view_rating'       : get('view_rating'),
-        'rating_image'      : get('rating_image'),
-        'spellchecker'      : get('spellchecker_pref'),
-        'spell_notes'       : get('spell_notes'),
-        'spell_plot'        : get('spell_plot'),
-        'spell_lang'        : get('spell_lang'),
-        'vbox_spellchecker' : get('vbox_spellchecker'),
-        'default_plugin'    : get('default_plugin'),
-        'mail_smtp_server'  : get('mail_smtp_server'),
-        'mail_use_auth'     : get('mail_use_auth'),
-        'mail_username'     : get('mail_username'),
-        'mail_password'     : get('mail_password'),
-        'mail_email'        : get('mail_email'),
-        'mail_smtp_port'    : get('mail_smtp_port'),
-        'mail_use_tls'      : get('mail_use_tls'),
-        'lang_name'         : get('lang_name_combo'),
-        'tag_name'          : get('tag_name_combo'),
-        'acodec_name'       : get('acodec_name_combo'),
-        'achannel_name'     : get('achannel_name_combo'),
-        'subformat_name'    : get('subformat_name_combo'),
-        'medium_name'       : get('medium_name_combo'),
-        'vcodec_name'       : get('vcodec_name_combo'),
-        'sortby'            : get('p_sortby'),
-        'sortby_reverse'    : get('p_sortby_reverse'),
+        'window': get('w_preferences'),
+        'notebook': get('p_notebook'),
+        'treeview': get('p_treeview'),
+        'color': get('p_color'),
+        'condition': get('p_condition'),
+        'db_details': get('p_db_details'),
+        'db_host': get('p_db_host'),
+        'db_name': get('p_db_name'),
+        'db_passwd': get('p_db_passwd'),
+        'db_port': get('p_db_port'),
+        'db_type': get('p_db_type'),
+        'db_user': get('p_db_user'),
+        'epdf_reader': get('pdf_reader_entry'),
+        'font': get('p_font'),
+        'layers': get('p_layers'),
+        'media': get('p_media'),
+        'region': get('p_region'),
+        's_classification': get('p_s_classification'),
+        's_country': get('p_s_country'),
+        's_director': get('p_s_director'),
+        's_genre': get('p_s_genre'),
+        's_image': get('p_s_image'),
+        's_notes': get('p_s_notes'),
+        's_o_site': get('p_s_o_site'),
+        's_o_title': get('p_s_o_title'),
+        's_plot': get('p_s_plot'),
+        's_rating': get('p_s_rating'),
+        's_runtime': get('p_s_runtime'),
+        's_site': get('p_s_site'),
+        's_studio': get('p_s_studio'),
+        's_title': get('p_s_title'),
+        's_trailer': get('p_s_trailer'),
+        's_cast': get('p_s_cast'),
+        's_year': get('p_s_year'),
+        's_screenplay': get('p_s_screenplay'),
+        's_cameraman': get('p_s_cameraman'),
+        's_resolution': get('p_s_resolution'),
+        's_barcode': get('p_s_barcode'),
+        's_limit': get('p_sp_s_limit'),
+        'vcodec': get('p_vcodec'),
+        'view_image': get('view_image'),
+        'view_number': get('view_number'),
+        'view_o_title': get('view_otitle'),
+        'view_title': get('view_title'),
+        'view_director': get('view_director'),
+        'view_genre': get('view_genre'),
+        'view_seen': get('view_seen'),
+        'view_year': get('view_year'),
+        'view_runtime': get('view_runtime'),
+        'view_rating': get('view_rating'),
+        'rating_image': get('rating_image'),
+        'spellchecker': get('spellchecker_pref'),
+        'spell_notes': get('spell_notes'),
+        'spell_plot': get('spell_plot'),
+        'spell_lang': get('spell_lang'),
+        'vbox_spellchecker': get('vbox_spellchecker'),
+        'default_plugin': get('default_plugin'),
+        'mail_smtp_server': get('mail_smtp_server'),
+        'mail_use_auth': get('mail_use_auth'),
+        'mail_username': get('mail_username'),
+        'mail_password': get('mail_password'),
+        'mail_email': get('mail_email'),
+        'mail_smtp_port': get('mail_smtp_port'),
+        'mail_use_tls': get('mail_use_tls'),
+        'lang_name': get('lang_name_combo'),
+        'tag_name': get('tag_name_combo'),
+        'acodec_name': get('acodec_name_combo'),
+        'achannel_name': get('achannel_name_combo'),
+        'subformat_name': get('subformat_name_combo'),
+        'medium_name': get('medium_name_combo'),
+        'vcodec_name': get('vcodec_name_combo'),
+        'sortby': get('p_sortby'),
+        'sortby_reverse': get('p_sortby_reverse'),
     }
     self.widgets['preferences']['treeview'].connect('button_press_event', self.on_p_tree_button_press_event)
     self.widgets['preferences']['window'].connect('delete_event', self.on_delete_event_p)
@@ -260,10 +262,10 @@
     #}}}
 
     self.widgets['results'] = {#{{{
-        'window':   get('results'),
+        'window': get('results'),
         'treeview': get('results_treeview'),
-        'select':   get('results_select'),
-        'cancel':   get('results_cancel'),
+        'select': get('results_select'),
+        'cancel': get('results_cancel'),
     }
     self.widgets['results']['window'].connect('delete_event', self.on_results_window_close)
     self.widgets['results']['window'].set_transient_for(self.widgets['add']['window'])
@@ -277,13 +279,13 @@
 
     self.widgets['print_cover'] = {#{{{
         # TODO: merge these two windows
-        'window_simple'           : get('w_print_cover_simple'),
-        'window_image'            : get('w_print_cover_image'),
-        'cs_size'                 : get('cover_simple_size'),
-        'cs_include_movie_number' : get('cover_simple_include_movie_number'),
-        'cs_include_poster'       : get('cover_simple_include_poster'),
-        'ci_size'                 : get('cover_image_size'),
-        'ci_number'               : get('cover_image_number'),
+        'window_simple': get('w_print_cover_simple'),
+        'window_image': get('w_print_cover_image'),
+        'cs_size': get('cover_simple_size'),
+        'cs_include_movie_number': get('cover_simple_include_movie_number'),
+        'cs_include_poster': get('cover_simple_include_poster'),
+        'ci_size': get('cover_image_size'),
+        'ci_number': get('cover_image_number'),
     }
     self.widgets['print_cover']['window_simple'].connect('delete_event', self.on_delete_event_pcs)
     self.widgets['print_cover']['window_image'].connect('delete_event', self.on_delete_event_pci)
@@ -292,8 +294,8 @@
     #}}}
 
     self.widgets['people'] = {#{{{
-        'window':    get('w_people'),
-        'treeview':    get('p_treeview'),
+        'window': get('w_people'),
+        'treeview': get('p_treeview'),
     }
     self.widgets['people']['window'].connect('delete_event', self.on_delete_event_wp)
     self.widgets['people']['window'].set_transient_for(self.widgets['window'])
@@ -301,15 +303,15 @@
 
     self.widgets['person'] = {#{{{
         # TODO: merge these two windows
-        'window'   : get('w_add_person'),
-        'e_window' : get('w_edit_person'),
-        'name'     : get('ap_name'),
-        'email'    : get('ap_email'),
-        'phone'    : get('ap_phone'),
-        'e_name'   : get('ep_name'),
-        'e_email'  : get('ep_email'),
-        'e_phone'  : get('ep_phone'),
-        'e_id'     : get('ep_id'),
+        'window': get('w_add_person'),
+        'e_window': get('w_edit_person'),
+        'name': get('ap_name'),
+        'email': get('ap_email'),
+        'phone': get('ap_phone'),
+        'e_name': get('ep_name'),
+        'e_email': get('ep_email'),
+        'e_phone': get('ep_phone'),
+        'e_id': get('ep_id'),
     }
     self.widgets['person']['window'].connect('delete_event', self.on_delete_event_ap)
     self.widgets['person']['e_window'].connect('delete_event', self.on_delete_event_ep)
@@ -318,31 +320,31 @@
     #}}}
 
     self.widgets['filter'] = {#{{{
-        'text'       : get('filter_txt'),
-        'criteria'   : get('filter_criteria'),
-        'collection' : get('f_col'),
-        'advfilter'  : get('f_advfilter'),
+        'text': get('filter_txt'),
+        'criteria': get('filter_criteria'),
+        'collection': get('f_col'),
+        'advfilter': get('f_advfilter'),
     }#}}}
 
     self.widgets['menu'] = {#{{{
-        'fullscreen'      : get('menu_fullscreen'),
-        'toolbar'         : get('menu_toolbar'),
-        'ext_toolbar'     : get('menu_ext_toolbar'),
-        'export'          : get('export_menu'),
-        'import'          : get('import_menu'),
-        'not_seen_movies' : get('seen_movies'),
-        'loaned_movies'   : get('loaned_movies'),
-        'all_movies'      : get('all_movies'),
-        'loan'            : get('loan1'),
-        'email'           : get('return1'),
-        'return'          : get('e-mail_reminder1'),
+        'fullscreen': get('menu_fullscreen'),
+        'toolbar': get('menu_toolbar'),
+        'ext_toolbar': get('menu_ext_toolbar'),
+        'export': get('export_menu'),
+        'import': get('import_menu'),
+        'not_seen_movies': get('seen_movies'),
+        'loaned_movies': get('loaned_movies'),
+        'all_movies': get('all_movies'),
+        'loan': get('loan1'),
+        'email': get('return1'),
+        'return': get('e-mail_reminder1'),
     }#}}}
 
     self.widgets['popups'] = {#{{{
-        'main'   : get('popup'),
-        'loan'   : get('popup_loan'),
-        'return' : get('popup_return'),
-        'email'  : get('popup_email'),
+        'main': get('popup'),
+        'loan': get('popup_loan'),
+        'return': get('popup_return'),
+        'email': get('popup_email'),
     }#}}}
     self.widgets['extensions'] = {
         'toolbar': get('ext_toolbar'),
@@ -350,13 +352,13 @@
         'preferences_vbox': get('p_extensions_vbox'),
     }
 
-    self.widgets['w_loan_to']     = get('w_loan_to')
+    self.widgets['w_loan_to'] = get('w_loan_to')
     self.widgets['w_loan_to'].connect('delete_event', self.on_delete_event_lt)
 
     self.widgets['poster_window'] = get('poster_window')
     self.widgets['poster_window'].connect('delete_event', self.on_delete_event_pw)
     self.widgets['poster_window'].set_transient_for(self.widgets['window'])
-    self.widgets['big_poster']    = get('big_poster')
+    self.widgets['big_poster'] = get('big_poster')
 
     #add some tooltips
     self.widgets['tooltips'] = gtk.Tooltips()
@@ -369,156 +371,157 @@
 
     # define handlers for general events
     gladefile.signal_autoconnect({#{{{
-        'gtk_main_quit'                          : self.destroy,
-        'on_window_state'                        : self.on_window_state,
-        'on_configure'                           : self.on_configure,
-        'on_about1_activate'                     : self.about_dialog,
-        'on_quit1_activate'                      : self.destroy,
-        'on_toolbar_quit_clicked'                : self.destroy,
-        'on_toolbar_add_clicked'                 : self.add_movie,
-        'on_cancel_add_movie_clicked'            : self.hide_add_window,
-        'on_add1_activate'                       : self.add_movie,
-        'on_add_movie_clicked'                   : self.add_movie_db,
-        'on_add_movie_close_clicked'             : self.add_movie_close_db,
-        'on_delete_movie_clicked'                : self.delete_movie,
-        'on_delete1_movie_activate'              : self.delete_movie,
-        'on_main_treeview_row_activated'         : self.treeview_clicked,
-        'on_row_activated'                       : self.treeview_clicked,
-        'on_get_from_web_clicked'                : self.get_from_web,
-        'on_update_button_clicked'               : self.update_movie,
-        'on_import_activate'                     : self.on_import_activate,
-        'on_seen_activate'                       : self.toggle_seen,
-        'on_fullscreen_activate'                 : self.toggle_fullscreen,
+        'gtk_main_quit': self.destroy,
+        'on_window_state': self.on_window_state,
+        'on_configure': self.on_configure,
+        'on_about1_activate': self.about_dialog,
+        'on_quit1_activate': self.destroy,
+        'on_toolbar_quit_clicked': self.destroy,
+        'on_toolbar_add_clicked': self.add_movie,
+        'on_cancel_add_movie_clicked': self.hide_add_window,
+        'on_add1_activate': self.add_movie,
+        'on_add_movie_clicked': self.add_movie_db,
+        'on_add_movie_close_clicked': self.add_movie_close_db,
+        'on_delete_movie_clicked': self.delete_movie,
+        'on_delete1_movie_activate': self.delete_movie,
+        'on_main_treeview_row_activated': self.treeview_clicked,
+        'on_row_activated': self.treeview_clicked,
+        'on_get_from_web_clicked': self.get_from_web,
+        'on_update_button_clicked': self.update_movie,
+        'on_import_activate': self.on_import_activate,
+        'on_seen_activate': self.toggle_seen,
+        'on_fullscreen_activate': self.toggle_fullscreen,
         # preferences
-        'on_preferences1_activate'               : self.show_preferences,
-        'on_select_db_activate'                  : lambda w: self.show_preferences(w, page=6),
-        'on_cancel_preferences_clicked'          : self.hide_preferences,
-        'on_save_preferences_clicked'            : self.save_preferences,
-        'on_p_db_type_changed'                   : self.on_p_db_type_changed,
-        'on_backup_activate'                     : self.backup,
-        'on_restore_activate'                    : self.restore,
-        'on_merge_activate'                      : self.merge,
-        'on_cover_simple_activate'               : self.print_cover_simple_show,
-        'on_cancel_print_cover_simple_clicked'   : self.print_cover_simple_hide,
-        'on_b_print_cover_simple_clicked'        : self.print_cover_simple_process,
-        'on_add_clear_clicked'                   : self.clear_add_dialog,
-        'on_am_save_button_clicked'              : self.update_movie,
-        'on_people_activate'                     : self.show_people_window,
-        'on_cancel_people_clicked'               : self.hide_people_window,
-        'on_filter_txt_changed'                  : self.filter_txt,
-        'on_filter_criteria_changed'             : self.on_filter_criteria_changed,
-        'on_clear_filter_clicked'                : self.clear_filter,
-        'on_people_add_clicked'                  : self.add_person,
-        'on_add_person_cancel_clicked'           : self.add_person_cancel,
-        'on_add_person_db_clicked'               : self.add_person_db,
-        'on_people_delete_clicked'               : self.delete_person,
-        'on_people_edit_clicked'                 : self.edit_person,
-        'on_edit_person_cancel_clicked'          : self.edit_person_cancel,
-        'on_update_person_clicked'               : self.update_person,
-        'on_clone_activate'                      : self.clone_movie,
-        'on_loan_button_clicked'                 : self.loan_movie,
-        'on_cancel_loan_clicked'                 : self.cancel_loan,
-        'on_loan_ok_clicked'                     : self.commit_loan,
-        'on_return_button_clicked'               : self.return_loan,
-        'on_list_loaned_movies_activate'         : self.filter_loaned,
-        'on_m_show_volume_button_clicked'        : self.show_volume,
-        'on_m_show_collection_button_clicked'    : self.show_collection,
-        'on_cover_choose_image_activate'         : self.print_cover_image,
-        'on_cancel_print_cover_image_clicked'    : self.print_cover_image_hide,
-        'on_b_print_cover_image_clicked'         : self.print_cover_image_process,
-        'on_combo_source_changed'                : self.source_changed,
+        'on_preferences1_activate': self.show_preferences,
+        'on_select_db_activate': lambda w: self.show_preferences(w, page=6),
+        'on_cancel_preferences_clicked': self.hide_preferences,
+        'on_save_preferences_clicked': self.save_preferences,
+        'on_p_db_type_changed': self.on_p_db_type_changed,
+        'on_backup_activate': self.backup,
+        'on_restore_activate': self.restore,
+        'on_merge_activate': self.merge,
+        'on_cover_simple_activate': self.print_cover_simple_show,
+        'on_cancel_print_cover_simple_clicked': self.print_cover_simple_hide,
+        'on_b_print_cover_simple_clicked': self.print_cover_simple_process,
+        'on_add_clear_clicked': self.clear_add_dialog,
+        'on_am_save_button_clicked': self.update_movie,
+        'on_people_activate': self.show_people_window,
+        'on_cancel_people_clicked': self.hide_people_window,
+        'on_filter_txt_changed': self.filter_txt,
+        'on_filter_criteria_changed': self.on_filter_criteria_changed,
+        'on_clear_filter_clicked': self.clear_filter,
+        'on_people_add_clicked': self.add_person,
+        'on_add_person_cancel_clicked': self.add_person_cancel,
+        'on_add_person_db_clicked': self.add_person_db,
+        'on_people_delete_clicked': self.delete_person,
+        'on_people_edit_clicked': self.edit_person,
+        'on_edit_person_cancel_clicked': self.edit_person_cancel,
+        'on_update_person_clicked': self.update_person,
+        'on_clone_activate': self.clone_movie,
+        'on_loan_button_clicked': self.loan_movie,
+        'on_cancel_loan_clicked': self.cancel_loan,
+        'on_loan_ok_clicked': self.commit_loan,
+        'on_return_button_clicked': self.return_loan,
+        'on_list_loaned_movies_activate': self.filter_loaned,
+        'on_m_show_volume_button_clicked': self.show_volume,
+        'on_m_show_collection_button_clicked': self.show_collection,
+        'on_cover_choose_image_activate': self.print_cover_image,
+        'on_cancel_print_cover_image_clicked': self.print_cover_image_hide,
+        'on_b_print_cover_image_clicked': self.print_cover_image_process,
+        'on_combo_source_changed': self.source_changed,
         # toolbar
-        'on_view_toolbar_activate'               : self.toggle_toolbar,
-        'on_view_ext_toolbar_activate'           : self.toggle_ext_toolbar,
-        'on_go_first_clicked'                    : self.go_first,
-        'on_go_last_clicked'                     : self.go_last,
-        'on_go_back_clicked'                     : self.go_prev,
-        'on_go_forward_clicked'                  : self.go_next,
-        'on_new_bt_clicked'                      : self.new_dbb,
-        'on_new_activate'                        : self.new_dbb,
-        'on_edit_button_clicked'                 : self.edit_movie,
+        'on_view_toolbar_activate': self.toggle_toolbar,
+        'on_view_ext_toolbar_activate': self.toggle_ext_toolbar,
+        'on_go_first_clicked': self.go_first,
+        'on_go_last_clicked': self.go_last,
+        'on_go_back_clicked': self.go_prev,
+        'on_go_forward_clicked': self.go_next,
+        'on_new_bt_clicked': self.new_dbb,
+        'on_new_activate': self.new_dbb,
+        'on_edit_button_clicked': self.edit_movie,
         # poster
-        'on_e_picture_clicked'                   : self.change_poster,
-        'on_open_poster_clicked'                 : self.change_poster,
-        'on_zoom_poster_clicked'                 : self.z_poster,
-        'on_delete_poster_clicked'               : self.del_poster,
+        'on_e_picture_clicked': self.change_poster,
+        'on_open_poster_clicked': self.change_poster,
+        'on_zoom_poster_clicked': self.z_poster,
+        'on_delete_poster_clicked': self.del_poster,
         # URLs
-        'on_goto_homepage_activate'              : self.on_goto_homepage_activate,
-        'on_goto_forum_activate'                 : self.on_goto_forum_activate,
-        'on_goto_report_bug_activate'            : self.on_goto_report_bug_activate,
-        'on_go_o_site_clicked'                   : self.go_oficial_site,
-        'on_go_site_clicked'                     : self.go_site,
-        'on_go_trailer_clicked'                  : self.go_trailer_site,
-        'on_seen_movies_activate'                : self.filter_not_seen,
-        'on_all_movies_activate'                 : self.filter_all,
-        'on_rating_scale_add_value_changed'      : self.scale_rating_change_add,
-        'on_sugest_activate'                     : self.sugest_movie,
-        'on_popup_delete_activate'               : self.delete_movie,
-        'on_popup_clone_activate'                : self.clone_movie,
-        'on_popup_simple_activate'               : self.print_cover_simple_show,
-        'on_popup_choose_image_activate'         : self.print_cover_image,
+        'on_goto_homepage_activate': self.on_goto_homepage_activate,
+        'on_goto_forum_activate': self.on_goto_forum_activate,
+        'on_goto_report_bug_activate': self.on_goto_report_bug_activate,
+        'on_go_o_site_clicked': self.go_oficial_site,
+        'on_go_site_clicked': self.go_site,
+        'on_go_trailer_clicked': self.go_trailer_site,
+        'on_seen_movies_activate': self.filter_not_seen,
+        'on_all_movies_activate': self.filter_all,
+        'on_rating_scale_add_value_changed': self.scale_rating_change_add,
+        'on_sugest_activate': self.sugest_movie,
+        'on_popup_delete_activate': self.delete_movie,
+        'on_popup_clone_activate': self.clone_movie,
+        'on_popup_simple_activate': self.print_cover_simple_show,
+        'on_popup_choose_image_activate': self.print_cover_image,
         # loans
-        'on_popup_loan_activate'                 : self.loan_movie,
-        'on_popup_return_activate'               : self.return_loan,
-        'on_popup_email_activate'                : self.email_reminder,
-        'on_email_reminder_clicked'              : self.email_reminder,
+        'on_popup_loan_activate': self.loan_movie,
+        'on_popup_return_activate': self.return_loan,
+        'on_popup_email_activate': self.email_reminder,
+        'on_email_reminder_clicked': self.email_reminder,
         # volumes/collections
-        'on_am_collection_combo_changed'         : self.on_am_collection_combo_changed,
-        'on_am_volume_combo_changed'             : self.on_am_volume_combo_changed,
-        'on_am_add_volume_button_clicked'        : self.add_volume,
-        'on_am_add_collection_button_clicked'    : self.add_collection,
-        'on_am_remove_volume_button_clicked'     : self.remove_volume,
-        'on_am_remove_collection_button_clicked' : self.remove_collection,
-        'on_f_col_changed'                       : self.filter_collection,
-        'on_f_advfilter_changed'                 : self.filter_using_advfilter_rule,
-        'on_results_cancel_clicked'              : self.on_results_window_close,
+        'on_am_collection_combo_changed': self.on_am_collection_combo_changed,
+        'on_am_volume_combo_changed': self.on_am_volume_combo_changed,
+        'on_am_add_volume_button_clicked': self.add_volume,
+        'on_am_add_collection_button_clicked': self.add_collection,
+        'on_am_remove_volume_button_clicked': self.remove_volume,
+        'on_am_remove_collection_button_clicked': self.remove_collection,
+        'on_f_col_changed': self.filter_collection,
+        'on_f_advfilter_changed': self.filter_using_advfilter_rule,
+        'on_results_cancel_clicked': self.on_results_window_close,
         # languages
-        'on_lang_add_clicked'                    : self.on_lang_add_clicked,
-        'on_lang_remove_clicked'                 : self.on_lang_remove_clicked,
-        'on_am_lang_add_clicked'                 : self.on_am_lang_add_clicked,
-        'on_am_lang_remove_clicked'              : self.on_am_lang_remove_clicked,
-        'on_lang_rename_clicked'                 : self.on_lang_rename_clicked,
-        'on_lang_name_combo_changed'             : self.on_lang_name_combo_changed,
+        'on_lang_add_clicked': self.on_lang_add_clicked,
+        'on_lang_remove_clicked': self.on_lang_remove_clicked,
+        'on_am_lang_add_clicked': self.on_am_lang_add_clicked,
+        'on_am_lang_remove_clicked': self.on_am_lang_remove_clicked,
+        'on_lang_rename_clicked': self.on_lang_rename_clicked,
+        'on_lang_name_combo_changed': self.on_lang_name_combo_changed,
         # tags
-        'on_tag_add_clicked'                     : self.on_tag_add_clicked,
-        'on_tag_remove_clicked'                  : self.on_tag_remove_clicked,
-        'on_tag_rename_clicked'                  : self.on_tag_rename_clicked,
-        'on_tag_name_combo_changed'              : self.on_tag_name_combo_changed,
+        'on_tag_add_clicked': self.on_tag_add_clicked,
+        'on_tag_remove_clicked': self.on_tag_remove_clicked,
+        'on_tag_rename_clicked': self.on_tag_rename_clicked,
+        'on_tag_name_combo_changed': self.on_tag_name_combo_changed,
         # audio codecs
-        'on_acodec_add_clicked'                  : self.on_acodec_add_clicked,
-        'on_acodec_remove_clicked'               : self.on_acodec_remove_clicked,
-        'on_acodec_rename_clicked'               : self.on_acodec_rename_clicked,
-        'on_acodec_name_combo_changed'           : self.on_acodec_name_combo_changed,
+        'on_acodec_add_clicked': self.on_acodec_add_clicked,
+        'on_acodec_remove_clicked': self.on_acodec_remove_clicked,
+        'on_acodec_rename_clicked': self.on_acodec_rename_clicked,
+        'on_acodec_name_combo_changed': self.on_acodec_name_combo_changed,
         # audio channels
-        'on_achannel_add_clicked'                : self.on_achannel_add_clicked,
-        'on_achannel_remove_clicked'             : self.on_achannel_remove_clicked,
-        'on_achannel_rename_clicked'             : self.on_achannel_rename_clicked,
-        'on_achannel_name_combo_changed'         : self.on_achannel_name_combo_changed,
+        'on_achannel_add_clicked': self.on_achannel_add_clicked,
+        'on_achannel_remove_clicked': self.on_achannel_remove_clicked,
+        'on_achannel_rename_clicked': self.on_achannel_rename_clicked,
+        'on_achannel_name_combo_changed': self.on_achannel_name_combo_changed,
         # subtitle formats
-        'on_subformat_add_clicked'               : self.on_subformat_add_clicked,
-        'on_subformat_remove_clicked'            : self.on_subformat_remove_clicked,
-        'on_subformat_rename_clicked'            : self.on_subformat_rename_clicked,
-        'on_subformat_name_combo_changed'        : self.on_subformat_name_combo_changed,
+        'on_subformat_add_clicked': self.on_subformat_add_clicked,
+        'on_subformat_remove_clicked': self.on_subformat_remove_clicked,
+        'on_subformat_rename_clicked': self.on_subformat_rename_clicked,
+        'on_subformat_name_combo_changed': self.on_subformat_name_combo_changed,
         # media
-        'on_medium_add_clicked'                  : self.on_medium_add_clicked,
-        'on_medium_remove_clicked'               : self.on_medium_remove_clicked,
-        'on_medium_rename_clicked'               : self.on_medium_rename_clicked,
-        'on_medium_name_combo_changed'           : self.on_medium_name_combo_changed,
+        'on_medium_add_clicked': self.on_medium_add_clicked,
+        'on_medium_remove_clicked': self.on_medium_remove_clicked,
+        'on_medium_rename_clicked': self.on_medium_rename_clicked,
+        'on_medium_name_combo_changed': self.on_medium_name_combo_changed,
         # video codecs
-        'on_vcodec_add_clicked'                  : self.on_vcodec_add_clicked,
-        'on_vcodec_remove_clicked'               : self.on_vcodec_remove_clicked,
-        'on_vcodec_rename_clicked'               : self.on_vcodec_rename_clicked,
-        'on_vcodec_name_combo_changed'           : self.on_vcodec_name_combo_changed,
+        'on_vcodec_add_clicked': self.on_vcodec_add_clicked,
+        'on_vcodec_remove_clicked': self.on_vcodec_remove_clicked,
+        'on_vcodec_rename_clicked': self.on_vcodec_rename_clicked,
+        'on_vcodec_name_combo_changed': self.on_vcodec_name_combo_changed,
         # advfilter
-        'on_open_advfilterwindow_clicked'        : self.show_advfilter_window,
-        'on_af_find_clicked'                     : self.on_af_find_clicked,
-        'on_advfilter_close'                     : self.hide_advfilter_window,
-        'on_advfilter_add'                       : lambda w: advfilter.add_query_widget(self.widgets['advfilter']['dynamic_vbox'], self.field_names),
-        'on_advfilter_clear'                     : lambda w: advfilter.set_conditions(self.widgets['advfilter'], advfilter.get_def_conditions(), self.field_names),
-        'on_advfilter_save'                      : lambda w: advfilter.save(self.db, self.widgets['advfilter']),
-        'on_advfilter_open'                      : lambda w: advfilter.load(self.db, self.widgets['advfilter'], self.field_names),
+        'on_open_advfilterwindow_clicked': self.show_advfilter_window,
+        'on_af_find_clicked': self.on_af_find_clicked,
+        'on_advfilter_close': self.hide_advfilter_window,
+        'on_advfilter_add': lambda w: advfilter.add_query_widget(self.widgets['advfilter']['dynamic_vbox'], self.field_names),
+        'on_advfilter_clear': lambda w: advfilter.set_conditions(self.widgets['advfilter'], advfilter.get_def_conditions(), self.field_names),
+        'on_advfilter_save': lambda w: advfilter.save(self.db, self.widgets['advfilter']),
+        'on_advfilter_open': lambda w: advfilter.load(self.db, self.widgets['advfilter'], self.field_names),
     })#}}}
 
+
 def populate_results_window(treemodel, items):
     treemodel.clear()
 



From piotrek at mail.berlios.de  Sat Jan  9 23:51:44 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 9 Jan 2010 23:51:44 +0100
Subject: [Griffith-svn] r1394 - trunk
Message-ID: <201001092251.o09Mpi1g020735@sheep.berlios.de>

Author: piotrek
Date: 2010-01-09 23:51:44 +0100 (Sat, 09 Jan 2010)
New Revision: 1394

Modified:
   trunk/ChangeLog
Log:
add version


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-09 22:50:43 UTC (rev 1393)
+++ trunk/ChangeLog	2010-01-09 22:51:44 UTC (rev 1394)
@@ -5,6 +5,8 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+---- 0.11 ----
+
 2010-01-09  Piotr O?arowski
 	* Replace "Aspect ratio" field with "Resolution" (aspect ratio is hidden
 	  for now)



From piotrek at mail.berlios.de  Sat Jan  9 23:53:27 2010
From: piotrek at mail.berlios.de (piotrek at BerliOS)
Date: Sat, 9 Jan 2010 23:53:27 +0100
Subject: [Griffith-svn] r1395 - trunk/debian
Message-ID: <201001092253.o09MrRZu020859@sheep.berlios.de>

Author: piotrek
Date: 2010-01-09 23:53:26 +0100 (Sat, 09 Jan 2010)
New Revision: 1395

Modified:
   trunk/debian/changelog
Log:
update release date


Modified: trunk/debian/changelog
===================================================================
--- trunk/debian/changelog	2010-01-09 22:51:44 UTC (rev 1394)
+++ trunk/debian/changelog	2010-01-09 22:53:26 UTC (rev 1395)
@@ -4,7 +4,7 @@
   * Recommend python-gtkspell instead on python-gnome2-extras (closes: #541600)
   * Bump Standards-Version to 3.8.3 (no changes needed)
 
- -- Piotr O?arowski <piotr at debian.org>  Mon, 04 Jan 2010 22:23:16 +0100
+ -- Piotr O?arowski <piotr at debian.org>  Sat, 09 Jan 2010 23:53:08 +0100
 
 griffith (0.10-1) unstable; urgency=low
 



From mikej06 at mail.berlios.de  Thu Jan 14 20:56:13 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 14 Jan 2010 20:56:13 +0100
Subject: [Griffith-svn] r1397 - trunk/lib/plugins/movie
Message-ID: <201001141956.o0EJuD8x015181@sheep.berlios.de>

Author: mikej06
Date: 2010-01-14 20:56:02 +0100 (Thu, 14 Jan 2010)
New Revision: 1397

Modified:
   trunk/lib/plugins/movie/PluginMovieCinematografo.py
Log:
add the year to the result list of PluginMovieCinematografo

Modified: trunk/lib/plugins/movie/PluginMovieCinematografo.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieCinematografo.py	2010-01-09 22:58:50 UTC (rev 1396)
+++ trunk/lib/plugins/movie/PluginMovieCinematografo.py	2010-01-14 19:56:02 UTC (rev 1397)
@@ -209,7 +209,14 @@
                 id = gutils.trim(element, "?codice=", "\">")
                 if id <> '':
                     self.ids.append(id)
-                    self.titles.append(self.capwords(gutils.convert_entities(gutils.trim(element, "<b>", "</b>"))))
+                    title = self.capwords(gutils.convert_entities(gutils.trim(element, "<b>", "</b>")))
+                    year = re.search('([[][0-9]{4}[]])', element)
+                    if year:
+                        year = year.group(0)
+                    if year:
+                        self.titles.append(title + ' ' + year)
+                    else:
+                        self.titles.append(title)
         else:
             self.number_results = 0
 



From mikej06 at mail.berlios.de  Thu Jan 14 21:52:53 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 14 Jan 2010 21:52:53 +0100
Subject: [Griffith-svn] r1398 - in trunk: . glade lib
Message-ID: <201001142052.o0EKqrnR019636@sheep.berlios.de>

Author: mikej06
Date: 2010-01-14 21:52:44 +0100 (Thu, 14 Jan 2010)
New Revision: 1398

Modified:
   trunk/ChangeLog
   trunk/glade/griffith.glade
   trunk/lib/advfilter.py
   trunk/lib/widgets.py
Log:
delete button added to the advanced filter dialog

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-14 19:56:02 UTC (rev 1397)
+++ trunk/ChangeLog	2010-01-14 20:52:44 UTC (rev 1398)
@@ -5,6 +5,10 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-05  Michael Jahn
+	* delete button added to the advanced filter dialog
+	* updated movie plugin Cinematografo (year added to result list entries)
+
 ---- 0.11 ----
 
 2010-01-09  Piotr O?arowski

Modified: trunk/glade/griffith.glade
===================================================================
--- trunk/glade/griffith.glade	2010-01-14 19:56:02 UTC (rev 1397)
+++ trunk/glade/griffith.glade	2010-01-14 20:52:44 UTC (rev 1398)
@@ -8253,6 +8253,21 @@
                 <property name="position">2</property>
               </packing>
             </child>
+            <child>
+              <widget class="GtkButton" id="button5">
+                <property name="visible">True</property>
+                <property name="can_focus">True</property>
+                <property name="receives_default">True</property>
+                <property name="label">gtk-delete</property>
+                <property name="use_stock">True</property>
+                <property name="response_id">0</property>
+                <signal name="clicked" handler="on_advfilter_delete"/>
+              </widget>
+              <packing>
+                <property name="expand">False</property>
+                <property name="position">3</property>
+              </packing>
+            </child>
           </widget>
           <packing>
             <property name="expand">False</property>

Modified: trunk/lib/advfilter.py
===================================================================
--- trunk/lib/advfilter.py	2010-01-14 19:56:02 UTC (rev 1397)
+++ trunk/lib/advfilter.py	2010-01-14 20:52:44 UTC (rev 1398)
@@ -29,7 +29,7 @@
 
 import db
 import sql
-from gutils import info
+from gutils import info, warning
 
 log = logging.getLogger("Griffith")
 
@@ -73,6 +73,7 @@
 
 # widgets -----------------------------------------------------{{{
 
+
 def show_window(self):
     if self.widgets['advfilter']['window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
         self.widgets['advfilter']['window'].present()
@@ -86,6 +87,7 @@
 
     return True
 
+
 def hide_window(self):
     widgets = self.widgets['advfilter']
     widgets['window'].hide()
@@ -101,12 +103,13 @@
         i.destroy()
     for i in widgets['dynamic_vbox'].get_children():
         i.destroy()
-    
+
     from initialize import fill_advfilter_combo
     fill_advfilter_combo(self)
-    
+
     return True
 
+
 def _fill_container(container, items, options, id_name):
     for item in items:
         hbox = gtk.HBox()
@@ -129,6 +132,7 @@
         label_id.hide()
         container.pack_start(hbox)
 
+
 def initialize(widgets, gsql, field_names):
     # tags
     items = gsql.session.query(db.Tag.tag_id, db.Tag.name).all()
@@ -172,7 +176,8 @@
         widgets['cb_name'].append_text(filter_[0])
     return True
 
-def add_query_widget(container, field_names, sel_qf='title', sel_comm='equals', text='' ):
+
+def add_query_widget(container, field_names, sel_qf='title', sel_comm='equals', text=''):
     hbox = gtk.HBox()
 
     cb = gtk.combo_box_new_text()
@@ -205,6 +210,7 @@
 
     container.pack_start(hbox)
 
+
 def set_conditions(widgets, cond, field_names): #{{{
     widgets['name'].set_text('')
 
@@ -282,6 +288,7 @@
 
     #}}}
 
+
 def get_conditions(widgets): #{{{
     cond = get_def_conditions()
 
@@ -352,6 +359,7 @@
 
     return cond # }}}
 
+
 def save(gsql, widgets):
     """saves search conditions from current filter window"""
 
@@ -366,8 +374,10 @@
     filter_ = session.query(db.Filter).filter_by(name=name).first()
     if filter_:
         filter_.data = cond
+        isnew = False
     else:
         filter_ = db.Filter(name=name, data=cond)
+        isnew = True
     session.add(filter_)
     try:
         session.commit()
@@ -376,8 +386,12 @@
         log.warn(e)
         warning(_("Cannot save search conditions"), widgets['window'])
         return False
+    else:
+        if isnew:
+            widgets['cb_name'].append_text(name)
     info(_("Search conditions saved"), widgets['window'])
 
+
 def load(gsql, widgets, field_names):
     name = widgets['cb_name'].get_active_text().decode('utf-8')
     if not name:
@@ -389,13 +403,41 @@
     else:
         return False
 
+
+def delete(gsql, widgets):
+    """deletes the current selected filter"""
+
+    name = widgets['cb_name'].get_active_text().decode('utf-8')
+    if not name:
+        log.debug("search rule name is empty")
+        info(_("Name is empty"), widgets['window'])
+        return False
+
+    session = gsql.Session()
+    filter = session.query(db.Filter).filter_by(name=name).first()
+    if filter:
+        session.delete(filter)
+        try:
+            session.commit()
+        except:
+            session.rollback()
+            log.exception('')
+            warning(_("Cannot delete search conditions"), widgets['window'])
+            return False
+        else:
+            widgets['cb_name'].remove_text(widgets['cb_name'].get_active())
+        info(_("Search conditions deleted"), widgets['window'])
+    widgets['name'].set_text('')
+
 #}}}
 
 # database related --------------------------------------------{{{
 
+
 def get_def_conditions():
     return deepcopy(__conditions)
 
+
 def get_select_columns(config): # {{{
     # TODO: get them from config
     columns_to_select = [db.Movie.number,
@@ -406,6 +448,7 @@
         db.Movie.rating]
     return columns_to_select # }}}
 
+
 def create_select_query(self, columns, conditions, query):
     if not conditions:
         conditions = get_conditions(self.widgets["advfilter"])

Modified: trunk/lib/widgets.py
===================================================================
--- trunk/lib/widgets.py	2010-01-14 19:56:02 UTC (rev 1397)
+++ trunk/lib/widgets.py	2010-01-14 20:52:44 UTC (rev 1398)
@@ -519,6 +519,7 @@
         'on_advfilter_clear': lambda w: advfilter.set_conditions(self.widgets['advfilter'], advfilter.get_def_conditions(), self.field_names),
         'on_advfilter_save': lambda w: advfilter.save(self.db, self.widgets['advfilter']),
         'on_advfilter_open': lambda w: advfilter.load(self.db, self.widgets['advfilter'], self.field_names),
+        'on_advfilter_delete': lambda w: advfilter.delete(self.db, self.widgets['advfilter']),
     })#}}}
 
 



From mikej06 at mail.berlios.de  Sun Jan 17 20:36:45 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 17 Jan 2010 20:36:45 +0100
Subject: [Griffith-svn] r1399 - in trunk: . lib lib/plugins/movie
Message-ID: <201001171936.o0HJajed014199@sheep.berlios.de>

Author: mikej06
Date: 2010-01-17 20:36:32 +0100 (Sun, 17 Jan 2010)
New Revision: 1399

Added:
   trunk/lib/plugins/movie/PluginMovieScope.py
Modified:
   trunk/ChangeLog
   trunk/lib/test_movieplugins.py
   trunk/winpackage.iss
Log:
Scope movie plugin added

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2010-01-14 20:52:44 UTC (rev 1398)
+++ trunk/ChangeLog	2010-01-17 19:36:32 UTC (rev 1399)
@@ -5,6 +5,9 @@
 (c) 2005-2010  Vasco Nunes, Piotr O?arowski
 
 
+2010-01-17  Michael Jahn
+	* Scope movie plugin added
+
 2010-01-05  Michael Jahn
 	* delete button added to the advanced filter dialog
 	* updated movie plugin Cinematografo (year added to result list entries)

Added: trunk/lib/plugins/movie/PluginMovieScope.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieScope.py	2010-01-14 20:52:44 UTC (rev 1398)
+++ trunk/lib/plugins/movie/PluginMovieScope.py	2010-01-17 19:36:32 UTC (rev 1399)
@@ -0,0 +1,219 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2010
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import gutils
+import movie
+import string
+import re
+
+plugin_name         = "Scope"
+plugin_description  = "Danmarks st?rste filmguide"
+plugin_url          = "www.scope.dk"
+plugin_language     = _("Danish")
+plugin_author       = "Michael Jahn"
+plugin_author_email = "mike at griffith.cc"
+plugin_version      = "1.0"
+
+
+class Plugin(movie.Movie):
+
+    def __init__(self, id):
+        self.encode = 'iso-8859-1'
+        self.movie_id = id
+        self.url = 'http://www.scope.dk/film/' + str(self.movie_id)
+
+    def get_image(self):
+        self.image_url = ''
+        tmp = gutils.trim(self.page, '<img src="http://www.scope.dk/images/', '"')
+        if tmp:
+            self.image_url = 'http://www.scope.dk/images/' + tmp
+
+    def get_o_title(self):
+        self.o_title = gutils.trim(self.page, '<h2>', '</h2>')
+
+    def get_title(self):
+        self.title = gutils.trim(self.page, '<h2>', '</h2>')
+
+    def get_director(self):
+        self.director = gutils.trim(self.page, 'Instruktion</th>', '</td>')
+
+    def get_plot(self):
+        self.plot = gutils.trim(self.page, '<div id="film-top-middle">', '</div>')
+        if self.plot:
+            self.plot = string.replace(self.plot, '?', "'")
+            self.plot = gutils.convert_entities(self.plot)
+
+    def get_year(self):
+        self.year = gutils.trim(self.page, 'Produktions?r</th>', '</td>')
+
+    def get_runtime(self):
+        self.runtime = gutils.trim(self.page, 'Spilletid</th>', '</td>')
+
+    def get_genre(self):
+        self.genre = gutils.trim(self.page, 'Genre</th>', '</td>')
+
+    def get_cast(self):
+        self.cast = ''
+        tmp = gutils.trim(self.page, 'colspan="2">Medvirkende</th>', '<tr style')
+        if tmp:
+            tmpparts = string.split(tmp, '<tr')
+            for tmppart in tmpparts[1:]:
+                name = '<th' + gutils.trim(tmppart, '<td', '</')
+                role = '<th' + gutils.trim(tmppart, '<th', '</')
+                if name:
+                    if role:
+                        self.cast = self.cast + name + _(' as ') + role + '\n'
+                    else:
+                        self.cast = self.cast + name + '\n'
+
+    def get_classification(self):
+        self.classification = gutils.regextrim(self.page, 'Censur</th>', '</td>')
+
+    def get_studio(self):
+        self.studio = gutils.trim(self.page, 'Selskab</th>', '</td>')
+
+    def get_o_site(self):
+        self.o_site = ''
+        tmp = gutils.trim(self.page, 'Link</th>', '</td>')
+        if tmp:
+            self.o_site = gutils.trim(tmp, 'href="', '"')
+
+    def get_site(self):
+        self.site = self.url
+
+    def get_trailer(self):
+        self.trailer = ''
+        tmp = gutils.trim(self.page, 'Trailer</th>', '</td>')
+        if tmp:
+            self.trailer = gutils.trim(tmp, 'href="', '"')
+
+    def get_country(self):
+        self.country = gutils.trim(self.page, 'Land</th>', '</td>')
+
+    def get_rating(self):
+        self.rating = 0
+        tmp = gutils.trim(self.page, 'Scope-score</th>', '</td>')
+        if tmp:
+            fullstars = string.split(tmp, 'gul.gif')
+            halfstars = string.split(tmp, 'gul_halv.gif')
+            rating = 0
+            if fullstars:
+                rating = len(fullstars) - 1
+            if halfstars and len(halfstars) > 1:
+                rating = rating + 0.5
+            try:
+                self.rating = round(rating / 0.6, 0)
+            except:
+                pass
+
+    def get_notes(self):
+        self.notes = ''
+
+    def get_screenplay(self):
+        self.screenplay = gutils.regextrim(self.page, 'Manuskript</th>', '</td>')
+
+    def get_cameraman(self):
+        self.cameraman = gutils.regextrim(self.page, 'Fotografi</th>', '</td>')
+
+
+class SearchPlugin(movie.SearchMovie):
+
+    def __init__(self):
+        self.original_url_search = 'http://www.scope.dk/sogning_film.php?id=&filmtitel='
+        self.translated_url_search = 'http://www.scope.dk/sogning_film.php?id=&filmtitel='
+        self.encode = 'iso-8859-1'
+        self.remove_accents = False
+
+    def search(self, parent_window):
+        self.open_search(parent_window)
+        self.page = gutils.trim(self.page, '<table class="table-list">', '</table>')
+        return self.page
+
+    def get_searches(self):
+        elements = string.split(self.page, 'href="film/')
+        for element in elements[1:]:
+            id = gutils.before(element, '"')
+            title = gutils.trim(element, '>', '</a>')
+            if id and title:
+                self.ids.append(id)
+                year = gutils.trim(element, '<td>', '</td>')
+                if year:
+                    self.titles.append(title + ' (' + year + ')')
+                else:
+                    self.titles.append(title)
+
+#
+# Plugin Test
+#
+
+
+class SearchPluginTest(SearchPlugin):
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> [ expected result count for original url, expected result count for translated url ] }
+    #
+    test_configuration = {
+        'Rocky'                : [ 8, 8 ]
+    }
+
+
+class PluginTest:
+    #
+    # Configuration for automated tests:
+    # dict { movie_id -> dict { arribute -> value } }
+    #
+    # value: * True/False if attribute only should be tested for any value
+    #        * or the expected value
+    #
+    test_configuration = {
+        '4834-rocky-balboa' : {
+            'title'               : 'Rocky Balboa',
+            'o_title'             : 'Rocky Balboa',
+            'director'            : 'Sylvester Stallone',
+            'plot'                : True,
+            'cast'                : 'Sylvester Stallone' + _(' as ') + 'Rocky Balboa\n\
+Burt Young' + _(' as ') + 'Paulie\n\
+Milo Ventimiglia' + _(' as ') + 'Rocky Balboa Jr.\n\
+Geraldine Hughes' + _(' as ') + 'Marie\n\
+Antonio Tarver' + _(' as ') + 'Mason \'The Line\' Dixon\n\
+James Francis Kelly III' + _(' as ') + 'Steps\n\
+Tony Burton' + _(' as ') + 'Duke\n\
+Henry G. Sanders' + _(' as ') + 'Martin\n\
+Talia Shire' + _(' as ') + 'Adrian\n\
+Mike Tyson' + _(' as ') + 'Sig selv',
+            'country'             : 'USA',
+            'genre'               : 'Action, Drama',
+            'classification'      : 'Tilladt for b?rn over 11 ?r',
+            'studio'              : 'United Artists, Revolution Studios, Chartoff-Winkler Productions',
+            'o_site'              : 'http://www.mgm.com/rocky',
+            'site'                : 'http://www.scope.dk/film/4834-rocky-balboa',
+            'trailer'             : 'http://www.imdb.com/title/tt0479143/trailers',
+            'year'                : 2006,
+            'notes'               : False,
+            'runtime'             : 102,
+            'image'               : True,
+            'rating'              : 7,
+            'cameraman'           : 'J. Clark Mathis',
+            'screenplay'          : 'Sylvester Stallone'
+        },
+    }

Modified: trunk/lib/test_movieplugins.py
===================================================================
--- trunk/lib/test_movieplugins.py	2010-01-14 20:52:44 UTC (rev 1398)
+++ trunk/lib/test_movieplugins.py	2010-01-17 19:36:32 UTC (rev 1399)
@@ -86,6 +86,7 @@
         'PluginMovieKinoDe',
         'PluginMovieMovieMeter',
         'PluginMovieOFDb',
+        'PluginMovieScope',
         'PluginMovieZelluloid',
     ]
 

Modified: trunk/winpackage.iss
===================================================================
--- trunk/winpackage.iss	2010-01-14 20:52:44 UTC (rev 1398)
+++ trunk/winpackage.iss	2010-01-17 19:36:32 UTC (rev 1399)
@@ -110,6 +110,7 @@
 Source: dist\lib\plugins\movie\PluginMovieOFDb.py;          DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\German\OFDb
 Source: dist\lib\plugins\movie\PluginMovieOnet.py;          DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Polish\Onet
 Source: dist\lib\plugins\movie\PluginMoviePTGate.py;        DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Portuguese\PTGate
+Source: dist\lib\plugins\movie\PluginMovieScope.py;         DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Danish\Scope
 Source: dist\lib\plugins\movie\PluginMovieStopklatka.py;    DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Polish\Stopklatka
 Source: dist\lib\plugins\movie\PluginMovieTanukiAnime.py;   DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Polish\Tanuki_Anime
 Source: dist\lib\plugins\movie\PluginMovieWP.py;            DestDir: {app}\lib\plugins\movie; Flags: ignoreversion; Components: Movie_Import_Plugins\Polish\Wirtualna_Polska
@@ -162,6 +163,9 @@
 Name: Movie_Import_Plugins\English\Mediadis;         Description: Mediadis / www.mediadis.com; Types: full
 Name: Movie_Import_Plugins\English\Moviefone;        Description: Moviefone / www.moviefone.com; Types: full
 
+Name: Movie_Import_Plugins\Danish;                   Description: Danish Import Plugins; Types: full
+Name: Movie_Import_Plugins\Danish\Scope;             Description: Scope / www.scope.dk; Types: full
+
 Name: Movie_Import_Plugins\Dutch;                    Description: Dutch Import Plugins; Types: full
 Name: Movie_Import_Plugins\Dutch\MovieMeter;         Description: MovieMeter / www.moviemeter.nl; Types: full
 



From mikej06 at mail.berlios.de  Sun Jan 17 21:27:24 2010
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun, 17 Jan 2010 21:27:24 +0100
Subject: [Griffith-svn] r1400 - extra_artwork/images
Message-ID: <201001172027.o0HKROPx017503@sheep.berlios.de>

Author: mikej06
Date: 2010-01-17 21:27:14 +0100 (Sun, 17 Jan 2010)
New Revision: 1400

Added:
   extra_artwork/images/PluginMovieScope.png
Log:
added image for scope plugin

Added: extra_artwork/images/PluginMovieScope.png
===================================================================
(Binary files differ)


Property changes on: extra_artwork/images/PluginMovieScope.png
___________________________________________________________________
Name: svn:needs-lock
   + *
Name: svn:mime-type
   + image/png



From filosottile at mail.berlios.de  Tue Jan 19 16:42:59 2010
From: filosottile at mail.berlios.de (filosottile at mail.berlios.de)
Date: Tue, 19 Jan 2010 15:42:59 -0000
Subject: [Griffith-svn] r1401 - trunk/lib/plugins/movie
Message-ID: <201001191542.o0JFgwEj031059@sheep.berlios.de>

Author: filosottile
Date: 2010-01-19 16:42:47 +0100 (Tue, 19 Jan 2010)
New Revision: 1401

Added:
   trunk/lib/plugins/movie/PluginMovieIMDB-it.py
Log:
IMDB-it movie plugin added (thanks to Enrico Carlesso)

Added: trunk/lib/plugins/movie/PluginMovieIMDB-it.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-it.py	2010-01-17 20:27:14 UTC (rev 1400)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-it.py	2010-01-19 15:42:47 UTC (rev 1401)
@@ -0,0 +1,242 @@
+# -*- coding: utf-8 -*-
+
+__revision__ = '$Id$'
+
+# Copyright (c) 2010-2015 Enrico Carlesso
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import gutils, movie
+import string, re
+
+plugin_name         = 'IMDb-IT'
+plugin_description  = 'Internet Movie Database in Italiano'
+plugin_url          = 'italian.imdb.com'
+plugin_language     = _('Italian')
+plugin_author       = 'Enrico Carlesso'
+plugin_author_email = 'enrico at ecarlesso.org'
+plugin_version      = '0.1'
+
+class Plugin(movie.Movie):
+    def __init__(self, id):
+        self.encode   = 'iso8859-1'
+        self.movie_id = id
+        self.url      = "http://italian.imdb.com/title/tt%s" % self.movie_id
+        self.o_url      = "http://imdb.com/title/tt%s" % self.movie_id
+
+    def initialize(self):
+        self.cast_page = self.open_page(url=self.url + '/fullcredits')
+        self.plot_page = self.open_page(url=self.url + '/plotsummary')
+        self.o_page = self.open_page(url=self.o_url)
+
+    def get_image(self):
+        tmp = string.find(self.page, 'a name="poster"')
+        if tmp == -1:        # poster not available
+            self.image_url = ''
+        else:
+            self.image_url = gutils.trim(self.page[tmp:], 'src="', '"')
+
+    def get_o_title(self):
+        self.o_title = gutils.regextrim(self.o_page, '<h1>', '([ ]|[&][#][0-9]+[;])<span')
+        if self.o_title == '':
+            self.o_title = re.sub('[(].*', '', gutils.trim(self.o_page, '<title>', '</title>'))
+
+    def get_title(self):    # same as get_o_title()
+        self.title = gutils.regextrim(self.page, '<h1>', '([ ]|[&][#][0-9]+[;])<span')
+        if self.title == '':
+            self.title = re.sub('[(].*', '', gutils.trim(self.page, '<title>', '</title>'))
+
+    def get_director(self):
+        self.director = ''
+        parts = re.split('<a href=', gutils.trim(self.cast_page, '>Regia di<', '</table>'))
+        if len(parts) > 1:
+            for part in parts[1:]:
+                director = gutils.trim(part, '>', '<')
+                self.director = self.director + director + ', '
+            self.director = self.director[0:len(self.director) - 2]
+
+    def get_plot(self):
+        self.plot = gutils.regextrim(self.page, '<h5>Plot:</h5>', '(</div>|<a href.*)')
+        self.plot = self.__before_more(self.plot)
+        elements = string.split(self.plot_page, '<p class="plotpar">')
+        if len(elements) > 1:
+            self.plot = self.plot + '\n\n'
+            elements[0] = ''
+            for element in elements:
+                if element <> '':
+                    self.plot = self.plot + gutils.strip_tags(gutils.before(element, '</a>')) + '\n\n'
+
+    def get_year(self):
+        self.year = gutils.trim(self.o_page, '<a href="/Sections/Years/', '</a>')
+        self.year = gutils.after(self.year, '">')
+
+    def get_runtime(self):
+        self.runtime = gutils.trim(self.page, '<h5>Durata:</h5>', ' min')
+
+    def get_genre(self):
+        self.genre = gutils.trim(self.page, '<h5>Genere:</h5>', '</div>')
+        self.genre = self.__before_more(self.genre)
+
+    def get_cast(self):
+        self.cast = ''
+        self.cast = gutils.trim(self.cast_page, '<table class="cast">', '</table>')
+        if self.cast == '':
+            self.cast = gutils.trim(self.page, '<table class="cast">', '</table>')
+        self.cast = string.replace(self.cast, ' ... ', _(' as '))
+        self.cast = string.replace(self.cast, '...', _(' as '))
+        self.cast = string.replace(self.cast, '</tr><tr>', "\n")
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
+        self.cast = self.__before_more(self.cast)
+
+    def get_classification(self):
+        self.classification = gutils.trim(self.page, '<h5><a href="/mpaa">MPAA</a>:</h5>', '</div>')
+        self.classification = gutils.trim(self.classification, 'Rated ', ' ')
+
+    def get_studio(self):
+        self.studio = gutils.trim(self.page, '<h5>Compagnia:</h5>', '</a>')
+
+    def get_o_site(self):
+        self.o_site = ''
+
+    def get_site(self):
+        self.site = "http://italian.imdb.com/title/tt%s" % self.movie_id
+
+    def get_trailer(self):
+        self.trailer = "http://italian.imdb.com/title/tt%s/trailers" % self.movie_id
+
+    def get_country(self):
+        self.country = gutils.trim(self.page, '<h5>Nazionalit?:</h5>', '</div>')
+        self.country = re.sub('[\n]+', '', self.country)
+
+    def get_rating(self):
+        pattern = re.compile('>([0-9]([.][0-9])*)[/][0-9][0-9]<')
+        result = pattern.search(self.o_page)
+        if result:
+            self.rating = result.groups()[0]
+            if self.rating:
+                try:
+                    self.rating = round(float(self.rating), 0)
+                except Exception, e:
+                    self.rating = 0
+        else:
+            self.rating = 0
+
+    def get_notes(self):
+        self.notes = ''
+        language = gutils.trim(self.page, '<h5>Lingua:</h5>', '</div>')
+        language = gutils.strip_tags(language)
+        language = re.sub('[\n]+', '', language)
+        language = re.sub('[ ]+', ' ', language)
+        language = language.rstrip()
+        color = gutils.trim(self.page, '<h5>Colore:</h5>', '</div>')
+        color = gutils.strip_tags(color)
+        color = re.sub('[\n]+', '', color)
+        color = re.sub('[ ]+', ' ', color)
+        color = color.rstrip()
+        sound = gutils.trim(self.page, '<h5>Sonoro:</h5>', '</div>')
+        sound = gutils.strip_tags(sound)
+        sound = re.sub('[\n]+', '', sound)
+        sound = re.sub('[ ]+', ' ', sound)
+        sound = sound.rstrip()
+        tagline = gutils.trim(self.page, '<h5>Trama:</h5>', '</div>')
+        tagline = self.__before_more(tagline)
+        tagline = gutils.strip_tags(tagline)
+        tagline = re.sub('[\n]+', '', tagline)
+        tagline = re.sub('[ ]+', ' ', tagline)
+        tagline = tagline.rstrip()
+        if len(language)>0:
+            self.notes = "%s: %s\n" %(_('Language'), language)
+        if len(sound)>0:
+            self.notes += "%s: %s\n" %(gutils.strip_tags(_('<b>Audio</b>')), sound)
+        if len(color)>0:
+            self.notes += "%s: %s\n" %(_('Color'), color)
+        if len(tagline)>0 and tagline != "Aggiungi o traduci un riassunto della trama":
+            self.notes += "%s: %s\n" %('Tagline', tagline)
+
+    def get_screenplay(self):
+        self.screenplay = ''
+        parts = re.split('<a href=', gutils.trim(self.cast_page, '>Scritto da<', '</table>'))
+        if len(parts) > 1:
+            for part in parts[1:]:
+                screenplay = gutils.trim(part, '>', '<')
+                if screenplay == 'WGA':
+                    continue
+                screenplay = screenplay.replace(' (scritto da)', '')
+                screenplay = screenplay.replace(' e<', '<')
+                self.screenplay = self.screenplay + screenplay + ', '
+            if len(self.screenplay) > 2:
+                self.screenplay = self.screenplay[0:len(self.screenplay) - 2]
+
+    def get_cameraman(self):
+        self.cameraman = ''
+
+    def __before_more(self, data):
+        tmp = string.find(data, '>ancora<')
+        if tmp > 0:
+            data = data[:tmp] + '>'
+        return data
+
+class SearchPlugin(movie.SearchMovie):
+    PATTERN = re.compile(r"""<A HREF=['"]/title/tt([0-9]+)/["']>(.*?)</LI>""")
+    PATTERN2 = re.compile(r"""<a href=['"]/title/tt([0-9]+)/["'](.*?)</tr>""")
+
+    def __init__(self):
+        self.original_url_search   = 'http://italian.imdb.com/find?s=tt;q='
+        self.translated_url_search = 'http://italian.imdb.com/find?s=tt;q='
+        self.encode                = 'iso8859-1'
+
+    def search(self, parent_window):
+        if not self.open_search(parent_window):
+            return None
+        tmp_page = gutils.trim(self.page, 'Titoli popolari', '</table>')
+        if not tmp_page:
+            has_results = re.match('[(]Visualizza [1-9][0-7]* risultat[io]*[)]', self.page)
+            if not has_results:
+                # nothing or one result found, try another url which looks deeper in the imdb database
+                # example: Adventures of Falcon -> one result, jumps directly to the movie page
+                # which isn't supported by this plugin
+                self.url = 'http://italian.imdb.com/find?more=tt;q='
+                if not self.open_search(parent_window):
+                    return None
+            self.page = gutils.trim(self.page, '(Visualizza', '>Suggerimenti per migliorare i tuoi risultati<')
+        else:
+            self.page = tmp_page
+        self.page = self.page.decode('iso-8859-1')
+        # correction of all &#xxx entities
+        self.page = gutils.convert_entities(self.page)
+        return self.page
+
+    def get_searches(self):
+        elements = re.split('<LI>', self.page)
+        if len(elements) < 2:
+            elements = string.split(self.page, '<tr>')
+            if len(elements):
+                for element in elements[1:]:
+                    match = self.PATTERN2.findall(element)
+                    if len(match):
+                        tmp = re.sub('^[0-9]+[.]', '', gutils.clean(gutils.after(match[0][1], '>')))
+                        self.ids.append(match[0][0])
+                        self.titles.append(tmp)
+        else:
+            for element in elements[1:]:
+                match = self.PATTERN.findall(element)
+                if len(match):
+                    tmp = gutils.clean(match[0][1])
+                    self.ids.append(match[0][0])
+                    self.titles.append(tmp)



