From mikej06 at mail.berlios.de  Tue Feb  1 21:46:36 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue,  1 Feb 2011 21:46:36 +0100
Subject: [Griffith-svn] r1508 - trunk/lib
Message-ID: <20110201204637.1F2F448127E@sheep.berlios.de>

Author: mikej06
Date: 2011-02-01 21:46:36 +0100 (Tue, 01 Feb 2011)
New Revision: 1508

Modified:
   trunk/lib/add.py
Log:
drop-down combobox for resolution field

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2011-01-25 20:50:12 UTC (rev 1507)
+++ trunk/lib/add.py	2011-02-01 20:46:36 UTC (rev 1508)
@@ -203,6 +203,9 @@
         if self.movie.rating:
             w['rating_slider'].set_value(float(self.movie.rating))
         fields_to_fetch.pop(fields_to_fetch.index('rating'))
+    if 'resolution' in fields_to_fetch:
+        w['resolution'].get_child().set_text(gutils.convert_entities(self.movie.resolution))
+        fields_to_fetch.pop(fields_to_fetch.index('resolution'))
     # poster
     if 'image' in fields_to_fetch:
         w['image'].set_text('')



From mikej06 at mail.berlios.de  Tue Feb  1 22:56:04 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Tue,  1 Feb 2011 22:56:04 +0100
Subject: [Griffith-svn] r1509 - in trunk: . lib/plugins/export
Message-ID: <20110201215604.C3D1048127E@sheep.berlios.de>

Author: mikej06
Date: 2011-02-01 22:56:04 +0100 (Tue, 01 Feb 2011)
New Revision: 1509

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/export/PluginExportHTML.py
Log:
HTML export: sorting entries case-insensitive and respect current locale settings

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-01 20:46:36 UTC (rev 1508)
+++ trunk/ChangeLog	2011-02-01 21:56:04 UTC (rev 1509)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 
+2011-02-01  Michael Jahn
+	* HTML export: sorting entries case-insensitive and respect current locale settings
+
 2011-01-25  Michael Jahn
 	* [#300808] forgets some inputs in languages like codex&tracks
 

Modified: trunk/lib/plugins/export/PluginExportHTML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportHTML.py	2011-02-01 20:46:36 UTC (rev 1508)
+++ trunk/lib/plugins/export/PluginExportHTML.py	2011-02-01 21:56:04 UTC (rev 1509)
@@ -680,6 +680,14 @@
 
         # select exported movies
         exported_movies = self.select().fetchall()
+        if self.settings['sorting'] in ('movies_title', 'movies_o_title'):
+            # re-sorting movies case-insensitive and respect the current locale setting
+            # if sorting by title or original title is selected
+            import locale
+            locale.setlocale(locale.LC_ALL,"")
+            exported_movies.sort(cmp = locale.strcoll, \
+                key = lambda k: k[self.settings['sorting']] and k[self.settings['sorting']].lower() or '', \
+                reverse = self.settings['sorting2']=='DESC')
         number_of_exported_movies = len(exported_movies)
 
         if config['split_by'] == 1:    # split by number of movies per page



From mikej06 at mail.berlios.de  Wed Feb  2 21:58:21 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Wed,  2 Feb 2011 21:58:21 +0100
Subject: [Griffith-svn] r1510 - in trunk: . lib/plugins/movie
Message-ID: <20110202205822.312FC481348@sheep.berlios.de>

Author: mikej06
Date: 2011-02-02 21:58:21 +0100 (Wed, 02 Feb 2011)
New Revision: 1510

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieIMDB.py
Log:
[#710860] cannot import imdb movie titles starting with a bracket

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-01 21:56:04 UTC (rev 1509)
+++ trunk/ChangeLog	2011-02-02 20:58:21 UTC (rev 1510)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 
+2011-02-02  Michael Jahn
+	* [#710860] cannot import imdb movie titles starting with a bracket
+
 2011-02-01  Michael Jahn
 	* HTML export: sorting entries case-insensitive and respect current locale settings
 

Modified: trunk/lib/plugins/movie/PluginMovieIMDB.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB.py	2011-02-01 21:56:04 UTC (rev 1509)
+++ trunk/lib/plugins/movie/PluginMovieIMDB.py	2011-02-02 20:58:21 UTC (rev 1510)
@@ -30,7 +30,7 @@
 plugin_language     = _('English')
 plugin_author       = 'Vasco Nunes, Piotr O?arowski'
 plugin_author_email = 'griffith-private at lists.berlios.de'
-plugin_version      = '1.11'
+plugin_version      = '1.12'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -53,12 +53,12 @@
         if not self.o_title:
             self.o_title = gutils.regextrim(self.page, '<h1>', '([ ]|[&][#][0-9]+[;])<span')
         if not self.o_title:
-            self.o_title = re.sub('[(].*', '', gutils.trim(self.page, '<title>', '</title>'))
+            self.o_title = re.sub(' [(].*', '', gutils.trim(self.page, '<title>', '</title>'))
 
     def get_title(self):    # same as get_o_title()
         self.title = gutils.regextrim(self.page, '<h1>', '([ ]|[&][#][0-9]+[;])<span')
         if not self.title:
-            self.title = re.sub('[(].*', '', gutils.trim(self.page, '<title>', '</title>'))
+            self.title = re.sub(' [(].*', '', gutils.trim(self.page, '<title>', '</title>'))
 
     def get_director(self):
         self.director = ''



From mikej06 at mail.berlios.de  Wed Feb  2 22:10:23 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Wed,  2 Feb 2011 22:10:23 +0100
Subject: [Griffith-svn] r1511 - in trunk: . lib
Message-ID: <20110202211023.80B3B48134B@sheep.berlios.de>

Author: mikej06
Date: 2011-02-02 22:10:23 +0100 (Wed, 02 Feb 2011)
New Revision: 1511

Modified:
   trunk/ChangeLog
   trunk/lib/dbupgrade.py
Log:
[#708472] Upgrade 0.11-0.12 fails with PostgreSQL

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-02 20:58:21 UTC (rev 1510)
+++ trunk/ChangeLog	2011-02-02 21:10:23 UTC (rev 1511)
@@ -7,6 +7,7 @@
 
 2011-02-02  Michael Jahn
 	* [#710860] cannot import imdb movie titles starting with a bracket
+	* [#708472] Upgrade 0.11-0.12 fails with PostgreSQL
 
 2011-02-01  Michael Jahn
 	* HTML export: sorting entries case-insensitive and respect current locale settings

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2011-02-02 20:58:21 UTC (rev 1510)
+++ trunk/lib/dbupgrade.py	2011-02-02 21:10:23 UTC (rev 1511)
@@ -267,8 +267,12 @@
         log.info("Upgrading database to version %d...", version)
         
         # common SQL statements
-        queries = {'created': 'ALTER TABLE movies ADD created DATETIME;',
-                   'updated': 'ALTER TABLE movies ADD updated DATETIME;'}
+        if self.session.bind.name == 'postgres':
+            queries = {'created': 'ALTER TABLE movies ADD created TIMESTAMP;',
+                       'updated': 'ALTER TABLE movies ADD updated TIMESTAMP;'}
+        else:
+            queries = {'created': 'ALTER TABLE movies ADD created DATETIME;',
+                       'updated': 'ALTER TABLE movies ADD updated DATETIME;'}
         for key, query in queries.items():
             try:
                 self.session.bind.execute(query)



From mikej06 at mail.berlios.de  Wed Feb  2 22:24:01 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Wed,  2 Feb 2011 22:24:01 +0100
Subject: [Griffith-svn] r1512 - in trunk: . lib/plugins/movie
Message-ID: <20110202212401.3A29848134B@sheep.berlios.de>

Author: mikej06
Date: 2011-02-02 22:24:00 +0100 (Wed, 02 Feb 2011)
New Revision: 1512

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMovieFilmAffinity.py
Log:
[#711015] [Enhancement][Plugin FilmAffinity] See the movie year in movie list

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-02 21:10:23 UTC (rev 1511)
+++ trunk/ChangeLog	2011-02-02 21:24:00 UTC (rev 1512)
@@ -8,6 +8,7 @@
 2011-02-02  Michael Jahn
 	* [#710860] cannot import imdb movie titles starting with a bracket
 	* [#708472] Upgrade 0.11-0.12 fails with PostgreSQL
+	* [#711015] [Enhancement][Plugin FilmAffinity] See the movie year in movie list
 
 2011-02-01  Michael Jahn
 	* HTML export: sorting entries case-insensitive and respect current locale settings

Modified: trunk/lib/plugins/movie/PluginMovieFilmAffinity.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieFilmAffinity.py	2011-02-02 21:10:23 UTC (rev 1511)
+++ trunk/lib/plugins/movie/PluginMovieFilmAffinity.py	2011-02-02 21:24:00 UTC (rev 1512)
@@ -31,7 +31,7 @@
 plugin_language     = _('Spanish')
 plugin_author       = 'Pedro D. S?nchez'
 plugin_author_email = '<pedrodav at gmail.com>'
-plugin_version      = '0.5'
+plugin_version      = '0.6'
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -182,10 +182,12 @@
             elements = string.split(self.page, '</a></b>')
 
             if (elements[0]<>''):
-                for element in elements[:-1]:
+                for index in range(0, len(elements) - 1, 1):
+                    element = elements[index]
+                    nextelement = elements[index + 1]
                     self.ids.append(gutils.trim(element, '<b><a href="/es/film', '.html'))
                     title = gutils.after(element, '<b><a href="/es/film')
-                    self.titles.append(gutils.strip_tags(gutils.convert_entities(gutils.after(title, '>'))))
+                    self.titles.append(gutils.strip_tags(gutils.convert_entities(gutils.after(title, '>'))) + ' ' + string.strip(gutils.before(nextelement, '<')))
 
 #
 # Plugin Test



From iznogoud at mail.berlios.de  Thu Feb  3 20:50:04 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Thu,  3 Feb 2011 20:50:04 +0100
Subject: [Griffith-svn] r1513 - in trunk: . lib/plugins/movie
Message-ID: <20110203195005.11D2948135D@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-03 20:50:04 +0100 (Thu, 03 Feb 2011)
New Revision: 1513

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/movie/PluginMoviePTGate.py
Log:
MoviePTGate plugin updated.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-02 21:24:00 UTC (rev 1512)
+++ trunk/ChangeLog	2011-02-03 19:50:04 UTC (rev 1513)
@@ -4,6 +4,8 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-03  Vasco Nunes
+	* MoviePTGate plugin updated.
 
 2011-02-02  Michael Jahn
 	* [#710860] cannot import imdb movie titles starting with a bracket

Modified: trunk/lib/plugins/movie/PluginMoviePTGate.py
===================================================================
--- trunk/lib/plugins/movie/PluginMoviePTGate.py	2011-02-02 21:24:00 UTC (rev 1512)
+++ trunk/lib/plugins/movie/PluginMoviePTGate.py	2011-02-03 19:50:04 UTC (rev 1513)
@@ -32,7 +32,7 @@
 plugin_language     = _("Portuguese")
 plugin_author       = "Vasco Nunes"
 plugin_author_email = "<vasco.m.nunes at gmail.com>"
-plugin_version      = "0.5"
+plugin_version      = "0.6"
 
 class Plugin(movie.Movie):
     def __init__(self, id):
@@ -50,35 +50,35 @@
         self.image_url = 'http://cinema.ptgate.pt/Movies/' + str(self.movie_id) + '.jpg'
 
     def get_o_title(self):
-        self.o_title = gutils.trim(gutils.after(self.page, u'<h2>'), u'?', u'<br />') # <--  &#8250;
+        self.o_title = gutils.trim(self.page, u'<h2 class="title">', u'</h2>')
         self.o_title = self.o_title.encode(self.encode)
 
     def get_title(self):
-        self.title = gutils.trim(self.page, u'<h2>', u'</h2>')
+        self.title = gutils.trim(self.page, u'<h1>', u' <small>')
         self.title = self.title.encode(self.encode)
 
     def get_director(self):
-        self.director = gutils.trim(self.page, u'<b>realiza??o</b><br />', u'<br />')
-        self.director = self.director.encode(self.encode)
+        self.director = gutils.trim(self.page, u'Realiza??o:</b><br />', u'</p>')
+        self.director = gutils.strip_tags(self.director)
 
     def get_plot(self):
-        self.plot = gutils.trim(self.page, u'<b>sinopse</b><br />', u'<br />')
+        self.plot = gutils.trim(self.page, u'<h2>Sinopse</h2>', u'</div>')
         self.plot = self.plot.encode(self.encode)
         self.plot = string.replace(self.plot, "'", "\"")
         self.plot = string.replace(self.plot, "'", "\"")
 
     def get_year(self):
-        self.year = gutils.trim(self.page, u'<b>ano</b>: ', u'<br />')
+        self.year = gutils.trim(self.page, u'<b>Ano:</b> ', u'<br />')
 
     def get_runtime(self):
         self.runtime = ''
 
     def get_genre(self):
-        self.genre = gutils.trim(self.page, u'<b>g?nero</b>: ', u'<br />')
+        self.genre = gutils.trim(self.page, u'<b>G?nero:</b> ', u'<br />')
         self.genre = self.genre.encode(self.encode)
 
     def get_cast(self):
-        self.cast = gutils.trim(self.page, u'pretes</b><br />', u'<br />')
+        self.cast = gutils.trim(self.page, u'Int?rpretes:</b><br />', u'</p>')
         self.cast = gutils.strip_tags(self.cast)
         self.cast = string.replace(self.cast, ', ', '\n')
 
@@ -111,21 +111,17 @@
                 self.trailer = gutils.before(self.page[index + 9:], '"')
 
     def get_country(self):
-        self.country = gutils.trim(self.page, u'<b>pa?s</b>: ', '<br />')
+        self.country = gutils.trim(self.page, u'<b>Pa?s:</b> ', '<br />')
         self.country = self.country.encode(self.encode)
         
     def get_notes(self):
-        self.notes = gutils.trim(self.page,"pr?mios e nomea??es</b><br /><b>", "<td width=6 background='Images/group_r.gif'")
-        self.notes = gutils.strip_tags(self.notes)
+        self.notes = ''
 
     def get_rating(self):
-        tmp = re.findall('[0-9.]+', string.replace(gutils.clean('<' + gutils.trim(self.page, u'imgs/blank.gif"', u'</small>')), u'&nbsp;', ''))
-        if tmp and len(tmp) > 0:
-            self.rating = float(tmp[0])
-            if self.rating:
-                self.rating = round(self.rating * 2)
-        else:
-            self.rating = ''
+        self.rating = gutils.trim(self.page, u'alt="Visitantes" />', ' (<a href="/')
+    	self.rating = gutils.strip_tags(self.rating)
+    	self.rating = float(self.rating)
+    	self.rating = round(self.rating * 2)
 
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):
@@ -149,4 +145,4 @@
                     self.ids.append(id)
                     self.titles.append(gutils.convert_entities(title))
         else:
-            self.number_results = 0
+            self.number_results = 0
\ No newline at end of file



From iznogoud at mail.berlios.de  Thu Feb  3 21:08:59 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Thu,  3 Feb 2011 21:08:59 +0100
Subject: [Griffith-svn] r1514 - trunk
Message-ID: <20110203200859.8FE1148135D@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-03 21:08:59 +0100 (Thu, 03 Feb 2011)
New Revision: 1514

Modified:
   trunk/ChangeLog
   trunk/griffith
Log:
Added MacOSX UI integration. Will not work without a mac native gtk/pygtk.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-03 19:50:04 UTC (rev 1513)
+++ trunk/ChangeLog	2011-02-03 20:08:59 UTC (rev 1514)
@@ -5,7 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 2011-02-03  Vasco Nunes
-	* MoviePTGate plugin updated.
+	* MoviePTGate plugin updated
+	* Added MacOSX UI integration
+	* Some minor macosx specific changes
 
 2011-02-02  Michael Jahn
 	* [#710860] cannot import imdb movie titles starting with a bracket

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-03 19:50:04 UTC (rev 1513)
+++ trunk/griffith	2011-02-03 20:08:59 UTC (rev 1514)
@@ -44,6 +44,13 @@
     sys.path.insert(1, lib)
 del lib
 
+# macosx
+import platform
+if platform.system() == 'Darwin':
+    import pygtk
+    pygtk.require('2.0')
+# end macosx
+
 # check dependencies
 import gutils
 (required, extra) = gutils.get_dependencies()
@@ -132,6 +139,18 @@
         initialize.people_treeview(self)
         initialize.web_results(self)
         self.initialized = True
+        
+        # macosx integration
+        #hide gtk menubar and implement a native Cocoa replacement
+        #using gtk_osxapplication 
+        if self.mac:
+                import gtk_osxapplication  
+                self.macapp = gtk_osxapplication.OSXApplication()
+                self.macapp.connect("NSApplicationBlockTermination", self.destroy)
+                gtk.Widget.hide(self.widgets['menu']['menubar']);
+                self.macapp.set_menu_bar(self.widgets['menu']['menubar'])                self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)                self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
+                self.macapp.ready()
+        # end macosx integration 
 
         self.restore_state()
         self.clear_details()
@@ -194,6 +213,11 @@
 
     def destroy(self, widget, data=None):
         self.save_state()
+        #macosx - macosx integration fails with gtk.main_quit()
+        #this is just a dirty workaround
+        if self.mac:
+        	sys.exit(0)
+        #end macosx
         gtk.main_quit()
 
     def on_configure(self, widget, data=None):



From iznogoud at mail.berlios.de  Thu Feb  3 22:19:17 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Thu,  3 Feb 2011 22:19:17 +0100
Subject: [Griffith-svn] r1515 - in trunk: . lib
Message-ID: <20110203211917.70FEF48135D@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-03 22:19:17 +0100 (Thu, 03 Feb 2011)
New Revision: 1515

Modified:
   trunk/griffith
   trunk/lib/widgets.py
Log:
something broken in previous rev. added some widget stuff to macosx integration.

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-03 20:08:59 UTC (rev 1514)
+++ trunk/griffith	2011-02-03 21:19:17 UTC (rev 1515)
@@ -144,12 +144,14 @@
         #hide gtk menubar and implement a native Cocoa replacement
         #using gtk_osxapplication 
         if self.mac:
-                import gtk_osxapplication  
-                self.macapp = gtk_osxapplication.OSXApplication()
-                self.macapp.connect("NSApplicationBlockTermination", self.destroy)
-                gtk.Widget.hide(self.widgets['menu']['menubar']);
-                self.macapp.set_menu_bar(self.widgets['menu']['menubar'])                self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)                self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
-                self.macapp.ready()
+            import gtk_osxapplication  
+            self.macapp = gtk_osxapplication.OSXApplication()
+            self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
+            gtk.Widget.hide(self.widgets['menu']['menubar']);
+            self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
+            self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
+            self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
+            self.macapp.ready()
         # end macosx integration 
 
         self.restore_state()

Modified: trunk/lib/widgets.py
===================================================================
--- trunk/lib/widgets.py	2011-02-03 20:08:59 UTC (rev 1514)
+++ trunk/lib/widgets.py	2011-02-03 21:19:17 UTC (rev 1515)
@@ -339,6 +339,9 @@
     }#}}}
 
     self.widgets['menu'] = {#{{{
+        'preferences': get('preferences1'),
+        'about': get('about1'),
+        'menubar': get('menubar1'),
         'fullscreen': get('menu_fullscreen'),
         'toolbar': get('menu_toolbar'),
         'ext_toolbar': get('menu_ext_toolbar'),



From lanus at mail.berlios.de  Sat Feb  5 12:09:10 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sat,  5 Feb 2011 12:09:10 +0100
Subject: [Griffith-svn] r1517 - in trunk: . lib lib/plugins/movie
Message-ID: <20110205110910.AD81C481364@sheep.berlios.de>

Author: lanus
Date: 2011-02-05 12:09:10 +0100 (Sat, 05 Feb 2011)
New Revision: 1517

Added:
   trunk/lib/plugins/movie/PluginMovieIMDB-pt.py
Modified:
   trunk/ChangeLog
   trunk/TRANSLATORS
   trunk/griffith
   trunk/lib/about.py
Log:
Added IMDB-pt plugin and temporarily disabled macosx ui integration.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-03 21:31:00 UTC (rev 1516)
+++ trunk/ChangeLog	2011-02-05 11:09:10 UTC (rev 1517)
@@ -4,6 +4,10 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-05  Ivo Nunes
+    * Mac OS X UI Cocoa menu integration temporarily disabled due to being broken - using native GTK
+    * IMDB-pt plugin added
+
 2011-02-03  Vasco Nunes
 	* MoviePTGate plugin updated
 	* Added MacOSX UI integration

Modified: trunk/TRANSLATORS
===================================================================
--- trunk/TRANSLATORS	2011-02-03 21:31:00 UTC (rev 1516)
+++ trunk/TRANSLATORS	2011-02-05 11:09:10 UTC (rev 1517)
@@ -97,6 +97,11 @@
 
 * Portuguese
 Vasco Nunes <vasco.m.nunes at gmail.com>
+Almufadado
+Ivo Nunes <netherblood at gmail.com>
+Luis Reis
+Rui Ara?jo <ruka.araujo at gmail.com>
+Tiago Silva
 
 * Russian
 Pavel V. Kulikov <kulikovpv8256 at yandex.ru>

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-03 21:31:00 UTC (rev 1516)
+++ trunk/griffith	2011-02-05 11:09:10 UTC (rev 1517)
@@ -143,15 +143,15 @@
         # macosx integration
         #hide gtk menubar and implement a native Cocoa replacement
         #using gtk_osxapplication 
-        if self.mac:
-            import gtk_osxapplication  
-            self.macapp = gtk_osxapplication.OSXApplication()
-            self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
-            gtk.Widget.hide(self.widgets['menu']['menubar']);
-            self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
-            self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
-            self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
-            self.macapp.ready()
+        #if self.mac:
+        #    import gtk_osxapplication  
+        #    self.macapp = gtk_osxapplication.OSXApplication()
+        #    self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
+        #    gtk.Widget.hide(self.widgets['menu']['menubar']);
+        #    self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
+        #    self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
+        #    self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
+        #    self.macapp.ready()
         # end macosx integration 
 
         self.restore_state()

Modified: trunk/lib/about.py
===================================================================
--- trunk/lib/about.py	2011-02-03 21:31:00 UTC (rev 1516)
+++ trunk/lib/about.py	2011-02-05 11:09:10 UTC (rev 1517)
@@ -47,8 +47,9 @@
             version.pauthor.replace(', ', '\n') + "\n",
             _("Programmers") + ':',
             'Jessica Katharina Parth <Jessica.K.P at women-at-work.org>',
-            'Michael Jahn <mikej06 at hotmail.com>\n',
-            _('Contributors:'), # FIXME: remove ":"
+            'Michael Jahn <mikej06 at hotmail.com>',
+            'Ivo Nunes <netherblood at gmail.com>\n',
+            _('Contributors') + ':',
             'Christian Sagmueller <christian at sagmueller.net>\n' \
             'Arjen Schwarz <arjen.schwarz at gmail.com>'
         ])

Added: trunk/lib/plugins/movie/PluginMovieIMDB-pt.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-pt.py	                        (rev 0)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-pt.py	2011-02-05 11:09:10 UTC (rev 1517)
@@ -0,0 +1,147 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id: $'
+
+# Copyright (c) 2011 Ivo Nunes
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+import gutils
+import movie
+import string
+import re
+
+plugin_name         = "IMDb-pt"
+plugin_description  = "Internet Movie Database Portuguese"
+plugin_url          = "www.imdb.pt"
+plugin_language     = _("Portuguese")
+plugin_author       = "Ivo Nunes"
+plugin_author_email = "<netherblood at gmail.com>"
+plugin_version      = "0.1"
+
+class Plugin(movie.Movie):
+    def __init__(self, id):
+        self.encode   ='iso-8859-1'
+        self.movie_id = id
+        self.url      = "http://www.imdb.pt/title/" + str(self.movie_id)
+
+    def initialize(self):
+        self.page = gutils.convert_entities(self.page)
+
+    def get_image(self):
+        self.image_url = gutils.trim(self.page, u'src="http://ia.media-imdb.com/images/', u'.jpg" /></a>')
+        self.image_url = "http://ia.media-imdb.com/images/" + self.image_url + ".jpg"
+        
+    def get_o_title(self):
+        self.o_title = gutils.trim(self.page, u'<title>', u' (')
+        self.o_title = self.o_title.encode(self.encode)
+
+    def get_title(self):
+        self.title = gutils.trim(self.page, u'<div class="info-content">       "', u'" - Brasil<br>')
+        self.title = self.title.encode(self.encode)
+
+    def get_director(self):
+        self.director = gutils.trim(self.page, u'<h5>Diretor:</h5>', u'</a><br/>')
+        self.director = gutils.strip_tags(self.director)
+
+    def get_plot(self):
+        self.plot = gutils.trim(self.page, u'<meta name="description" content="', u'Visit IMDb for Photos, Showtimes, Cast, Crew, Reviews, Plot Summary, Comments, Discussions, Taglines, Trailers, Posters, Fan Sites">')
+        self.plot = self.plot.encode(self.encode)
+
+    def get_year(self):
+        self.year = gutils.trim(self.page, u' (', u')</title>')
+
+    def get_runtime(self):
+        self.runtime = gutils.trim(self.page, u'<h5>Dura??o:</h5><div class="info-content">', u' min')
+        self.runtime = self.runtime.encode(self.encode)
+
+    def get_genre(self):
+        self.genre = gutils.trim(self.page, u'<h5>G?nero:</h5>', u'</div>')
+        self.genre = gutils.strip_tags(self.genre)
+        self.genre = string.replace(self.genre, " | ", ", ")
+        self.genre = self.genre.encode(self.encode)
+
+    def get_cast(self):
+        #self.cast = gutils.trim(self.page, u'Int?rpretes:</b><br />', u'</p>')
+        #self.cast = gutils.strip_tags(self.cast)
+        #self.cast = string.replace(self.cast, ', ', '\n')
+        self.cast = "" # FIXME
+
+    def get_classification(self):
+        self.classification = gutils.trim(self.page, u'<h5>Certifica??o:</h5><div class="info-content">', u'</div>')
+        self.classification = gutils.strip_tags(self.classification)
+        self.classification = string.replace(self.classification, " | ", ", ")
+        self.classification = self.classification.encode(self.encode)
+
+    def get_studio(self):
+        self.studio = ''
+
+    def get_o_site(self):
+        self.o_site = self.url
+
+    def get_site(self):
+        self.site = self.url
+
+    def get_trailer(self):
+        self.trailer = ''
+
+    def get_country(self):
+        self.country = gutils.trim(self.page, u'<h5>Pa?s:</h5><div class="info-content">', '</div>')
+        self.country = string.replace(self.country, " | ", ", ")
+        self.country = self.country.encode(self.encode)
+        
+    def get_notes(self):
+        self.notes = ''
+
+    def get_rating(self):
+        self.rating = gutils.trim(self.page, u'<div class="starbar-meta">', '/10')
+    	self.rating = gutils.strip_tags(self.rating)
+    	self.rating = string.replace(self.rating, ",", ".")
+        self.rating = float(self.rating)
+    	self.rating = round(self.rating)
+
+class SearchPlugin(movie.SearchMovie):
+    def __init__(self):
+        self.original_url_search   = 'http://www.imdb.pt/find?s=all&q='
+        self.translated_url_search = 'http://www.imdb.pt/find?s=all&q='
+        self.encode                = 'iso-8859-1'
+
+    def search(self, parent_window):
+        """Perform the web search"""
+        if not self.open_search(parent_window):
+            return None
+            self.sub_search()
+        return self.page
+
+    def sub_search(self):
+        """Isolating just a portion (with the data we want) of the results"""
+        self.page = gutils.trim(self.page, \
+            "Resultado)<table>", "<p><b>Nomes (Coincid")
+
+    def get_searches(self):
+        """Try to find both id and film title for each search result"""
+        elements = string.split(self.page, 'height="6"><br><a href="')
+        self.number_results = elements[-1]
+
+        if (len(elements[0])):
+            for element in elements:
+                self.ids.append(gutils.trim(element, "title/", '/" onclick="'))
+                self.titles.append(gutils.convert_entities \
+                    (gutils.trim(element, """/';">""", "</a> ")))
+        else:
+            self.number_results = 0
\ No newline at end of file



From lanus at mail.berlios.de  Sat Feb  5 15:31:35 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sat,  5 Feb 2011 15:31:35 +0100
Subject: [Griffith-svn] r1518 - in trunk: . lib
Message-ID: <20110205143136.23FA4481364@sheep.berlios.de>

Author: lanus
Date: 2011-02-05 15:31:35 +0100 (Sat, 05 Feb 2011)
New Revision: 1518

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/backup.py
   trunk/lib/gutils.py
Log:
Fixed and re-enabled Mac OS X UI integration.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-05 11:09:10 UTC (rev 1517)
+++ trunk/ChangeLog	2011-02-05 14:31:35 UTC (rev 1518)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 2011-02-05  Ivo Nunes
+    * Fixed and re-enabled Mac OS X UI Cocoa menu integration
+
+2011-02-05  Ivo Nunes
     * Mac OS X UI Cocoa menu integration temporarily disabled due to being broken - using native GTK
     * IMDB-pt plugin added
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-05 11:09:10 UTC (rev 1517)
+++ trunk/griffith	2011-02-05 14:31:35 UTC (rev 1518)
@@ -143,15 +143,15 @@
         # macosx integration
         #hide gtk menubar and implement a native Cocoa replacement
         #using gtk_osxapplication 
-        #if self.mac:
-        #    import gtk_osxapplication  
-        #    self.macapp = gtk_osxapplication.OSXApplication()
-        #    self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
-        #    gtk.Widget.hide(self.widgets['menu']['menubar']);
-        #    self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
-        #    self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
-        #    self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
-        #    self.macapp.ready()
+        if self.mac:
+            import gtk_osxapplication  
+            self.macapp = gtk_osxapplication.OSXApplication()
+            self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
+            gtk.Widget.hide(self.widgets['menu']['menubar']);
+            self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
+            self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
+            self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
+            self.macapp.ready()
         # end macosx integration 
 
         self.restore_state()
@@ -1023,18 +1023,32 @@
         create(self)
 
     def restore(self, *args):
-        if gutils.question(_("""Are you sure you want to restore?
+	if self.mac:
+	    if gutils.questionmac(_("""Are you sure you want to restore?
 Your current movie collection will be replaced.
 You can't undo this operation."""), self.widgets['window']):
-            from backup import restore
-            restore(self)
+		from backup import restore
+		restore(self)
+	else:
+	    if gutils.question(_("""Are you sure you want to restore?
+Your current movie collection will be replaced.
+You can't undo this operation."""), self.widgets['window']):
+		from backup import restore
+		restore(self)
 
     def merge(self, *args):
-        if gutils.question(_("""Are you sure you want to merge?
+        if self.mac:
+	    if gutils.questionmac(_("""Are you sure you want to merge?
 Your current movie collection will be merged with a backup.
 You can't undo this operation."""), self.widgets['window']):
-            from backup import restore
-            restore(self, merge=True)
+		from backup import restore
+		restore(self, merge=True)
+	else:
+	    if gutils.question(_("""Are you sure you want to merge?
+Your current movie collection will be merged with a backup.
+You can't undo this operation."""), self.widgets['window']):
+		from backup import restore
+		restore(self, merge=True)
 
     # cover ---------------------------------------------------------------
 
@@ -1323,45 +1337,86 @@
 
     def new_dbb(self, *args):
         """initializes a new Griffith Database file"""
-        if gutils.question(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
-            log.debug('NEW DATABASE')
-            if gutils.question(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
-                from sqlalchemy import select
-                from sql import GriffithSQL
-                from delete import delete_poster_from_cache
-                # delete images
-                posters_dir = self.locations['posters']
-                # NOTE: only used images are removed (posters are shared between various db)
-                log.debug('removing old images...')
+	if self.mac:
+	    if gutils.questionmac(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
+	        log.debug('NEW DATABASE')
+	        if gutils.questionmac(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
+	            from sqlalchemy import select
+		    from sql import GriffithSQL
+		    from delete import delete_poster_from_cache
+		    # delete images
+		    posters_dir = self.locations['posters']
+		    # NOTE: only used images are removed (posters are shared between various db)
+		    log.debug('removing old images...')
 
-                posters = self.db.session.query(db.Movie.poster_md5).all()
-                for poster in posters:
-                    delete_poster_from_cache(poster[0], posters_dir)
+		    posters = self.db.session.query(db.Movie.poster_md5).all()
+		    for poster in posters:
+			delete_poster_from_cache(poster[0], posters_dir)
 
-                log.debug('dropping old tables...')
-                self.db.session.rollback() # cancel all pending operations
-                db.metadata.drop_all(self.db.session.bind.engine)
-                #from sqlalchemy.orm import clear_mappers
-                #clear_mappers()
-                # disposing current db connection
-                self.db.dispose()
-                # dispose isn't enough here, I don't know why, but unlink fails
-                # but I think unlink should not be necessary because all tables are dropped
-                #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
-                #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
-                #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
-                #        self.config.set('file', 'griffith.db', section='database')
-                # create/connect db
-                log.debug('creating new ones...')
-                self.db = GriffithSQL(self.config, self.griffith_dir)
-                self.clear_details()
-                self.total = 0
-                self.count_statusbar()
-                self.treemodel.clear()
-                from initialize import dictionaries, people_treeview
-                dictionaries(self)
-                people_treeview(self)
+		    log.debug('dropping old tables...')
+		    self.db.session.rollback() # cancel all pending operations
+		    db.metadata.drop_all(self.db.session.bind.engine)
+		    #from sqlalchemy.orm import clear_mappers
+		    #clear_mappers()
+		    # disposing current db connection
+		    self.db.dispose()
+		    # dispose isn't enough here, I don't know why, but unlink fails
+		    # but I think unlink should not be necessary because all tables are dropped
+		    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
+		    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
+		    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
+		    #        self.config.set('file', 'griffith.db', section='database')
+		    #	 create/connect db
+		    log.debug('creating new ones...')
+		    self.db = GriffithSQL(self.config, self.griffith_dir)
+		    self.clear_details()
+		    self.total = 0
+		    self.count_statusbar()
+		    self.treemodel.clear()
+		    from initialize import dictionaries, people_treeview
+		    dictionaries(self)
+		    people_treeview(self)
+	    
+	else:	
+	    if gutils.question(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
+	        log.debug('NEW DATABASE')
+	        if gutils.question(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
+	            from sqlalchemy import select
+		    from sql import GriffithSQL
+		    from delete import delete_poster_from_cache
+		    # delete images
+		    posters_dir = self.locations['posters']
+		    # NOTE: only used images are removed (posters are shared between various db)
+		    log.debug('removing old images...')
 
+		    posters = self.db.session.query(db.Movie.poster_md5).all()
+		    for poster in posters:
+			delete_poster_from_cache(poster[0], posters_dir)
+
+		    log.debug('dropping old tables...')
+		    self.db.session.rollback() # cancel all pending operations
+		    db.metadata.drop_all(self.db.session.bind.engine)
+		    #from sqlalchemy.orm import clear_mappers
+		    #clear_mappers()
+		    # disposing current db connection
+		    self.db.dispose()
+		    # dispose isn't enough here, I don't know why, but unlink fails
+		    # but I think unlink should not be necessary because all tables are dropped
+		    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
+		    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
+		    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
+		    #        self.config.set('file', 'griffith.db', section='database')
+		    #	 create/connect db
+		    log.debug('creating new ones...')
+		    self.db = GriffithSQL(self.config, self.griffith_dir)
+		    self.clear_details()
+		    self.total = 0
+		    self.count_statusbar()
+		    self.treemodel.clear()
+		    from initialize import dictionaries, people_treeview
+		    dictionaries(self)
+		    people_treeview(self)
+
     # key events ----------------------------------------------------------
 
     def on_key_press_event(self, widget, event):

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-05 11:09:10 UTC (rev 1517)
+++ trunk/lib/backup.py	2011-02-05 14:31:35 UTC (rev 1518)
@@ -32,6 +32,7 @@
 
 import gtk
 from sqlalchemy import create_engine
+from platform import system
 
 import config
 import gutils
@@ -39,6 +40,14 @@
 import sql
 from initialize import dictionaries, people_treeview
 
+try:
+    import EasyDialogs
+except:
+    pass
+
+if system() == "Darwin":
+    mac = True
+
 log = logging.getLogger('Griffith')
 
 
@@ -47,22 +56,31 @@
     #if self.db.session.bind.engine.name != 'sqlite':
     #    gutils.error(_("Backup function is available only for SQLite engine for now"), self.widgets['window'])
     #    return False
+    
+    if mac:
+        filename = EasyDialogs.AskFileForSave()
 
-    default_name = "%s_backup_%s.zip" % (self.config.get('name', 'griffith', section='database'),\
-                    datetime.date.isoformat(datetime.datetime.now()))
-    filename = gutils.file_chooser(_("Save Griffith backup"), \
-        action=gtk.FILE_CHOOSER_ACTION_SAVE, name=default_name, \
-        buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK))
+    else:
+        default_name = "%s_backup_%s.zip" % (self.config.get('name', 'griffith', section='database'),\
+                        datetime.date.isoformat(datetime.datetime.now()))
+        filename = gutils.file_chooser(_("Save Griffith backup"), \
+            action=gtk.FILE_CHOOSER_ACTION_SAVE, name=default_name, \
+            buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK))
 
     if filename and filename[0]:
         proceed = True
+        
+        if mac:
+            zipfilename = filename + ".zip"
+            print zipfilename
+            
+        else:
+            zipfilename = filename[0].decode('utf-8')
+            log.debug('Backup filename: %s', zipfilename)
+            if os.path.isfile(zipfilename):
+                if not gutils.question(_("File exists. Do you want to overwrite it?"), window=self.widgets['window']):
+                    proceed = False
 
-        zipfilename = filename[0].decode('utf-8')
-        log.debug('Backup filename: %s', zipfilename)
-        if os.path.isfile(zipfilename):
-            if not gutils.question(_("File exists. Do you want to overwrite it?"), window=self.widgets['window']):
-                proceed = False
-
         if proceed:
             try:
                 if zipfile.zlib is not None:
@@ -72,7 +90,10 @@
                     log.debug('Creating zip file without compression')
                     mzip = zipfile.ZipFile(zipfilename, 'w')
             except:
-                gutils.error(_("Error creating backup"), self.widgets['window'])
+                if mac:
+                    gutils.errormac("Error creating backup")
+                else:
+                    gutils.error(_("Error creating backup"), self.widgets['window'])
                 return False
             log.debug('Preparing data and saving it to the zip archive')
             if self.db.session.bind.engine.name == 'sqlite':
@@ -112,7 +133,10 @@
                     # disposing the temporary db connection before rmtree and in finally block to avoid locked db file
                     tmp_engine.dispose()
                     rmtree(tmp_dir)
-            gutils.info(_("Backup has been created"), self.widgets['window'])
+            if mac:
+                gutils.infomac("Backup has been created")
+            else:
+                gutils.info(_("Backup has been created"), self.widgets['window'])
 
 
 @gutils.popup_message(_('Restoring database...'))
@@ -197,12 +221,15 @@
     """
 
     # let user select a backup file
-    filename = gutils.file_chooser(_("Restore Griffith backup"), \
-                    action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))[0]
-    if not filename:
-        log.debug('no file selected')
-        return False
+    if mac:
+        filename = EasyDialogs.AskFileForOpen()
+    else:
+        filename = gutils.file_chooser(_("Restore Griffith backup"), \
+                        action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
+                        buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))[0]
+        if not filename:
+            log.debug('no file selected')
+            return False
 
     try:
         tmp_db = None
@@ -213,7 +240,10 @@
             try:
                 zip_file = zipfile.ZipFile(filename, 'r')
             except:
-                gutils.error(_("Can't read backup file"), self.widgets['window'])
+                if mac:
+                    gutils.errormac("Can't read backup file")
+                else:
+                    gutils.error(_("Can't read backup file"), self.widgets['window'])
                 return False
 
             old_config_file = False
@@ -284,7 +314,10 @@
         self.clear_details()
         self.populate_treeview()
         #gutils.info(_("Databases merged!\n\nProcessed movies: %s\nMerged movies: %s"%(movies, merged)), self.widgets['window'])
-        gutils.info(_("Backup restored"), self.widgets['window'])
+        if mac:
+            gutils.infomac("Backup restored")
+        else:
+            gutils.info(_("Backup restored"), self.widgets['window'])
     except:
         log.exception('')
         raise

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2011-02-05 11:09:10 UTC (rev 1517)
+++ trunk/lib/gutils.py	2011-02-05 14:31:35 UTC (rev 1518)
@@ -36,6 +36,12 @@
 except:
     gtk = None
     pass
+
+try:
+    import EasyDialogs
+except:
+    pass
+
 log = logging.getLogger("Griffith")
 
 ENTITY = re.compile(r'\&.\w*?\;')
@@ -286,8 +292,23 @@
     response = dialog.run()
     dialog.destroy()
     return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
+    
 
+def questionmac(msg, window=None):
+    response = EasyDialogs.AskYesNoCancel(str(msg))
+    if response == -1:
+        response = 0
+    return response
 
+def infomac(msg, parent=None):
+    EasyDialogs.Message(str(msg))
+    
+def warningmac(msg, parent=None):
+    EasyDialogs.Message(str(msg))
+    
+def errormac(msg, parent=None):
+    EasyDialogs.Message(str(msg))
+
 def popup_message(message):
     """shows popup message while executing decorated function"""
 



From iznogoud at mail.berlios.de  Sat Feb  5 16:32:36 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Sat,  5 Feb 2011 16:32:36 +0100
Subject: [Griffith-svn] r1519 - in trunk: . lib
Message-ID: <20110205153236.99C0B481364@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-05 16:32:36 +0100 (Sat, 05 Feb 2011)
New Revision: 1519

Modified:
   trunk/ChangeLog
   trunk/lib/about.py
   trunk/lib/backup.py
Log:
Fixed about dialog on macosx

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-05 14:31:35 UTC (rev 1518)
+++ trunk/ChangeLog	2011-02-05 15:32:36 UTC (rev 1519)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-05  Vasco Nunes
+	* Fixed about dialog on macosx
+
 2011-02-05  Ivo Nunes
     * Fixed and re-enabled Mac OS X UI Cocoa menu integration
 

Modified: trunk/lib/about.py
===================================================================
--- trunk/lib/about.py	2011-02-05 14:31:35 UTC (rev 1518)
+++ trunk/lib/about.py	2011-02-05 15:32:36 UTC (rev 1519)
@@ -91,5 +91,5 @@
                 "General Public License.\n" + \
                 "Please visit http://www.gnu.org/copyleft/gpl.html for details."))
         dialog.set_comments(version.pdescription)
-        dialog.run()
-        dialog.destroy()
+        dialog.connect("response", lambda d, r: d.destroy())
+        dialog.show()
\ No newline at end of file

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-05 14:31:35 UTC (rev 1518)
+++ trunk/lib/backup.py	2011-02-05 15:32:36 UTC (rev 1519)
@@ -44,10 +44,9 @@
     import EasyDialogs
 except:
     pass
+    
+mac = True if system() == "Darwin" else False
 
-if system() == "Darwin":
-    mac = True
-
 log = logging.getLogger('Griffith')
 
 
@@ -72,7 +71,6 @@
         
         if mac:
             zipfilename = filename + ".zip"
-            print zipfilename
             
         else:
             zipfilename = filename[0].decode('utf-8')



From lanus at mail.berlios.de  Sat Feb  5 19:39:19 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sat,  5 Feb 2011 19:39:19 +0100
Subject: [Griffith-svn] r1520 - trunk
Message-ID: <20110205183919.C1ABF481364@sheep.berlios.de>

Author: lanus
Date: 2011-02-05 19:39:19 +0100 (Sat, 05 Feb 2011)
New Revision: 1520

Modified:
   trunk/ChangeLog
Log:
Updated IMDb-pt plugin

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-05 15:32:36 UTC (rev 1519)
+++ trunk/ChangeLog	2011-02-05 18:39:19 UTC (rev 1520)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-05  Ivo Nunes
+    * Updated IMDb-pt plugin
+
 2011-02-05  Vasco Nunes
 	* Fixed about dialog on macosx
 



From lanus at mail.berlios.de  Sat Feb  5 19:40:53 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sat,  5 Feb 2011 19:40:53 +0100
Subject: [Griffith-svn] r1521 - trunk/lib/plugins/movie
Message-ID: <20110205184053.102FF48135F@sheep.berlios.de>

Author: lanus
Date: 2011-02-05 19:40:52 +0100 (Sat, 05 Feb 2011)
New Revision: 1521

Modified:
   trunk/lib/plugins/movie/PluginMovieIMDB-pt.py
Log:
IMDb-pt plugin update

Modified: trunk/lib/plugins/movie/PluginMovieIMDB-pt.py
===================================================================
--- trunk/lib/plugins/movie/PluginMovieIMDB-pt.py	2011-02-05 18:39:19 UTC (rev 1520)
+++ trunk/lib/plugins/movie/PluginMovieIMDB-pt.py	2011-02-05 18:40:52 UTC (rev 1521)
@@ -1,6 +1,6 @@
 # -*- coding: UTF-8 -*-
 
-__revision__ = '$Id: $'
+__revision__ = '$Id$'
 
 # Copyright (c) 2011 Ivo Nunes
 #
@@ -25,6 +25,7 @@
 import movie
 import string
 import re
+import urllib
 
 plugin_name         = "IMDb-pt"
 plugin_description  = "Internet Movie Database Portuguese"
@@ -42,25 +43,30 @@
 
     def initialize(self):
         self.page = gutils.convert_entities(self.page)
+	self.cast_page = self.open_page(url=self.url + '/fullcredits')
+	self.cast_page = gutils.convert_entities(self.cast_page)
+	self.plot_page = self.open_page(url=self.url + '/plotsummary')
+	self.plot_page = gutils.convert_entities(self.plot_page)
 
     def get_image(self):
         self.image_url = gutils.trim(self.page, u'src="http://ia.media-imdb.com/images/', u'.jpg" /></a>')
         self.image_url = "http://ia.media-imdb.com/images/" + self.image_url + ".jpg"
         
+    def get_title(self):
+        self.title = gutils.trim(self.page, u'<title>', u' (')
+        self.title = self.title.encode(self.encode)
+
     def get_o_title(self):
-        self.o_title = gutils.trim(self.page, u'<title>', u' (')
+        self.o_title = gutils.trim(self.page, u'Conhecido Como:</h5><div class="info-content">"', u'"')
         self.o_title = self.o_title.encode(self.encode)
 
-    def get_title(self):
-        self.title = gutils.trim(self.page, u'<div class="info-content">       "', u'" - Brasil<br>')
-        self.title = self.title.encode(self.encode)
-
     def get_director(self):
         self.director = gutils.trim(self.page, u'<h5>Diretor:</h5>', u'</a><br/>')
         self.director = gutils.strip_tags(self.director)
 
     def get_plot(self):
-        self.plot = gutils.trim(self.page, u'<meta name="description" content="', u'Visit IMDb for Photos, Showtimes, Cast, Crew, Reviews, Plot Summary, Comments, Discussions, Taglines, Trailers, Posters, Fan Sites">')
+	self.plot = gutils.trim(self.plot_page, u'<div id="swiki.2.1">', u'</div>')
+	self.plot = gutils.strip_tags(self.plot)
         self.plot = self.plot.encode(self.encode)
 
     def get_year(self):
@@ -77,10 +83,17 @@
         self.genre = self.genre.encode(self.encode)
 
     def get_cast(self):
-        #self.cast = gutils.trim(self.page, u'Int?rpretes:</b><br />', u'</p>')
-        #self.cast = gutils.strip_tags(self.cast)
-        #self.cast = string.replace(self.cast, ', ', '\n')
-        self.cast = "" # FIXME
+        self.cast = ''
+        self.cast = gutils.trim(self.cast_page, '<table class="cast">', '</table>')
+        if self.cast == '':
+            self.cast = gutils.trim(self.page, '<table class="cast">', '</table>')
+        self.cast = string.replace(self.cast, ' ... ', _(' como ').encode('utf8'))
+        self.cast = string.replace(self.cast, '...', _(' como ').encode('utf8'))
+        self.cast = string.replace(self.cast, '</tr><tr>', "\n")
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="even">', "\n", self.cast)
+        self.cast = re.sub('</tr>[ \t]*<tr[ \t]*class="odd">', "\n", self.cast)
+        self.cast = self.__before_more(self.cast)
+        self.cast = re.sub('[ ]+', ' ', self.cast)
 
     def get_classification(self):
         self.classification = gutils.trim(self.page, u'<h5>Certifica??o:</h5><div class="info-content">', u'</div>')
@@ -89,16 +102,18 @@
         self.classification = self.classification.encode(self.encode)
 
     def get_studio(self):
-        self.studio = ''
+        self.studio = gutils.trim(self.page, u'<h5>Companhia :</h5><div class="info-content">', u'Exibir mais</a>')
+	self.studio = gutils.strip_tags(self.studio)
+	self.studio = self.studio.encode(self.encode)
 
     def get_o_site(self):
-        self.o_site = self.url
+        self.o_site = ""
 
     def get_site(self):
         self.site = self.url
 
     def get_trailer(self):
-        self.trailer = ''
+        self.trailer = "http://www.imdb.com/title/" + str(self.movie_id) + "/trailers"
 
     def get_country(self):
         self.country = gutils.trim(self.page, u'<h5>Pa?s:</h5><div class="info-content">', '</div>')
@@ -114,6 +129,30 @@
     	self.rating = string.replace(self.rating, ",", ".")
         self.rating = float(self.rating)
     	self.rating = round(self.rating)
+	
+    def get_screenplay(self):
+        self.screenplay = ''
+        parts = re.split('<a href=', gutils.trim(self.cast_page, u'>Cr?ditos como roteirista<', '</table>'))
+        if len(parts) > 1:
+            for part in parts[1:]:
+                screenplay = gutils.trim(part, '>', '<')
+                if screenplay == 'WGA':
+                    continue
+                screenplay = screenplay.replace(' (escrito por)', '')
+                screenplay = screenplay.replace(' and<', '<')
+                self.screenplay = self.screenplay + screenplay + ', '
+            if len(self.screenplay) > 2:
+                self.screenplay = self.screenplay[0:len(self.screenplay) - 2]
+		
+    def get_cameraman(self):
+        self.cameraman = string.replace('<' + gutils.trim(self.cast_page, u'>Dire??o de Fotografia de<', '</table>'), u'(diretor de fotografia) ', '')
+	
+    def __before_more(self, data):
+        for element in [u'>Exibir mais<', '>Full summary<', '>Full synopsis<']:
+            tmp = string.find(data, element)
+            if tmp>0:
+                data = data[:tmp] + '>'
+        return data
 
 class SearchPlugin(movie.SearchMovie):
     def __init__(self):



From iznogoud at mail.berlios.de  Sat Feb  5 20:59:38 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Sat,  5 Feb 2011 20:59:38 +0100
Subject: [Griffith-svn] r1522 - in trunk: . lib
Message-ID: <20110205195938.CD4F6481364@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-05 20:59:38 +0100 (Sat, 05 Feb 2011)
New Revision: 1522

Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/loan.py
   trunk/lib/view.py
Log:
fixed [#703576] no automatic refresh after get back a dvd

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-05 18:40:52 UTC (rev 1521)
+++ trunk/ChangeLog	2011-02-05 19:59:38 UTC (rev 1522)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-05  Vasco Nunes
+	* [#703576] no automatic refresh after get back a dvd
+	
 2011-02-05  Ivo Nunes
     * Updated IMDb-pt plugin
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-05 18:40:52 UTC (rev 1521)
+++ trunk/griffith	2011-02-05 19:59:38 UTC (rev 1522)
@@ -429,6 +429,7 @@
             self.db.session.commit()
             self.treemodel.set_value(m_iter,6,movie.seen)
             self.treeview_clicked()
+            self.populate_treeview()
             self.count_statusbar()
 
     def sugest_movie(self, *args):

Modified: trunk/lib/loan.py
===================================================================
--- trunk/lib/loan.py	2011-02-05 18:40:52 UTC (rev 1521)
+++ trunk/lib/loan.py	2011-02-05 19:59:38 UTC (rev 1522)
@@ -101,4 +101,5 @@
     movie.loan_details.returned_on() # current date will be used be default
     session.commit()
     self.treeview_clicked()
+    self.populate_treeview()
 

Modified: trunk/lib/view.py
===================================================================
--- trunk/lib/view.py	2011-02-05 18:40:52 UTC (rev 1521)
+++ trunk/lib/view.py	2011-02-05 19:59:38 UTC (rev 1522)
@@ -46,5 +46,4 @@
     clear_filter(self, populate=False)
     self.populate_treeview(where={'collection_id':collection_id})
     collection_name = self.db.Collection.query.filter_by(collection_id=collection_id).one().name
-    self.update_statusbar(_("Filter activated. Showing only movies from collection: %s")%collection_name)
-
+    self.update_statusbar(_("Filter activated. Showing only movies from collection: %s")%collection_name)
\ No newline at end of file



From iznogoud at mail.berlios.de  Sat Feb  5 21:16:22 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Sat,  5 Feb 2011 21:16:22 +0100
Subject: [Griffith-svn] r1523 - in trunk: . lib
Message-ID: <20110205201622.4844D481364@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-05 21:16:21 +0100 (Sat, 05 Feb 2011)
New Revision: 1523

Modified:
   trunk/ChangeLog
   trunk/lib/main_treeview.py
Log:
sync mac menubar when menuCheckItems are changed

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-05 19:59:38 UTC (rev 1522)
+++ trunk/ChangeLog	2011-02-05 20:16:21 UTC (rev 1523)
@@ -6,6 +6,7 @@
 
 2011-02-05  Vasco Nunes
 	* [#703576] no automatic refresh after get back a dvd
+	* Sync mac menubar when menu checkMenuItems are changed
 	
 2011-02-05  Ivo Nunes
     * Updated IMDb-pt plugin

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2011-02-05 19:59:38 UTC (rev 1522)
+++ trunk/lib/main_treeview.py	2011-02-05 20:16:21 UTC (rev 1523)
@@ -62,7 +62,6 @@
     else:
         set_details(self, {})
 
-
 def set_details(self, item=None):#{{{
     if item is None:
         item = {}
@@ -499,6 +498,8 @@
     if self.total:
         self.widgets['treeview'].set_cursor_on_cell(0)
     self.count_statusbar()
+    
+    if self.mac: self.macapp.sync_menubar()
 #}}}
 
 def addmovie(self, movie): #{{{



From mikej06 at mail.berlios.de  Sun Feb  6 13:43:18 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun,  6 Feb 2011 13:43:18 +0100
Subject: [Griffith-svn] r1524 - trunk/po
Message-ID: <20110206124318.9BFFB48138B@sheep.berlios.de>

Author: mikej06
Date: 2011-02-06 13:43:18 +0100 (Sun, 06 Feb 2011)
New Revision: 1524

Modified:
   trunk/po/Makefile
Log:
missing db directory added

Modified: trunk/po/Makefile
===================================================================
--- trunk/po/Makefile	2011-02-05 20:16:21 UTC (rev 1523)
+++ trunk/po/Makefile	2011-02-06 12:43:18 UTC (rev 1524)
@@ -1,7 +1,7 @@
 # $Id$
 INSTALL ?= install
 
-PYFILES = ../griffith $(wildcard ../lib/*.py ../lib/plugins/movie/*.py ../lib/plugins/export/*.py ../lib/plugins/imp/*.py) 
+PYFILES = ../griffith $(wildcard ../lib/*.py ../lib/db/*.py ../lib/plugins/movie/*.py ../lib/plugins/export/*.py ../lib/plugins/imp/*.py) 
 GLADEFILES = $(wildcard ../glade/*.glade)
 POFILES = $(wildcard *.po)
 



From mikej06 at mail.berlios.de  Sun Feb  6 13:59:51 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Sun,  6 Feb 2011 13:59:51 +0100
Subject: [Griffith-svn] r1525 - in trunk/i18n: . ar ar/LC_MESSAGES
	bg/LC_MESSAGES ca/LC_MESSAGES cs/LC_MESSAGES da/LC_MESSAGES
	de/LC_MESSAGES el/LC_MESSAGES en_GB/LC_MESSAGES
	es/LC_MESSAGES et/LC_MESSAGES fa/LC_MESSAGES fi/LC_MESSAGES
	fr/LC_MESSAGES gl gl/LC_MESSAGES hr/LC_MESSAGES
	hu/LC_MESSAGES id/LC_MESSAGES it/LC_MESSAGES ja/LC_MESSAGES
	ko/LC_MESSAGES lv/LC_MESSAGES nb/LC_MESSAGES nds/LC_MESSAGES
	nl/LC_MESSAGES oc/LC_MESSAGES pl/LC_MESSAGES ps/LC_MESSAGES
	pt/LC_MESSAGES pt_BR/LC_MESSAGES ro ro/LC_MESSAGES
	ru/LC_MESSAGES sk/LC_MESSAGES sr/LC_MESSAGES sv/LC_MESSAGES
	th th/LC_MESSAGES tr/LC_MESSAGES uk/LC_MESSAGES zh_CN/LC_MESSAGES
Message-ID: <20110206125952.4439748138B@sheep.berlios.de>

Author: mikej06
Date: 2011-02-06 13:59:51 +0100 (Sun, 06 Feb 2011)
New Revision: 1525

Added:
   trunk/i18n/ar/
   trunk/i18n/ar/LC_MESSAGES/
   trunk/i18n/ar/LC_MESSAGES/griffith.mo
   trunk/i18n/gl/
   trunk/i18n/gl/LC_MESSAGES/
   trunk/i18n/gl/LC_MESSAGES/griffith.mo
   trunk/i18n/ro/
   trunk/i18n/ro/LC_MESSAGES/
   trunk/i18n/ro/LC_MESSAGES/griffith.mo
   trunk/i18n/th/
   trunk/i18n/th/LC_MESSAGES/
   trunk/i18n/th/LC_MESSAGES/griffith.mo
Modified:
   trunk/i18n/bg/LC_MESSAGES/griffith.mo
   trunk/i18n/ca/LC_MESSAGES/griffith.mo
   trunk/i18n/cs/LC_MESSAGES/griffith.mo
   trunk/i18n/da/LC_MESSAGES/griffith.mo
   trunk/i18n/de/LC_MESSAGES/griffith.mo
   trunk/i18n/el/LC_MESSAGES/griffith.mo
   trunk/i18n/en_GB/LC_MESSAGES/griffith.mo
   trunk/i18n/es/LC_MESSAGES/griffith.mo
   trunk/i18n/et/LC_MESSAGES/griffith.mo
   trunk/i18n/fa/LC_MESSAGES/griffith.mo
   trunk/i18n/fi/LC_MESSAGES/griffith.mo
   trunk/i18n/fr/LC_MESSAGES/griffith.mo
   trunk/i18n/hr/LC_MESSAGES/griffith.mo
   trunk/i18n/hu/LC_MESSAGES/griffith.mo
   trunk/i18n/id/LC_MESSAGES/griffith.mo
   trunk/i18n/it/LC_MESSAGES/griffith.mo
   trunk/i18n/ja/LC_MESSAGES/griffith.mo
   trunk/i18n/ko/LC_MESSAGES/griffith.mo
   trunk/i18n/lv/LC_MESSAGES/griffith.mo
   trunk/i18n/nb/LC_MESSAGES/griffith.mo
   trunk/i18n/nds/LC_MESSAGES/griffith.mo
   trunk/i18n/nl/LC_MESSAGES/griffith.mo
   trunk/i18n/oc/LC_MESSAGES/griffith.mo
   trunk/i18n/pl/LC_MESSAGES/griffith.mo
   trunk/i18n/ps/LC_MESSAGES/griffith.mo
   trunk/i18n/pt/LC_MESSAGES/griffith.mo
   trunk/i18n/pt_BR/LC_MESSAGES/griffith.mo
   trunk/i18n/ru/LC_MESSAGES/griffith.mo
   trunk/i18n/sk/LC_MESSAGES/griffith.mo
   trunk/i18n/sr/LC_MESSAGES/griffith.mo
   trunk/i18n/sv/LC_MESSAGES/griffith.mo
   trunk/i18n/tr/LC_MESSAGES/griffith.mo
   trunk/i18n/uk/LC_MESSAGES/griffith.mo
   trunk/i18n/zh_CN/LC_MESSAGES/griffith.mo
Log:
translations updated

Added: trunk/i18n/ar/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)


Property changes on: trunk/i18n/ar/LC_MESSAGES/griffith.mo
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/i18n/bg/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/ca/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/cs/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/da/LC_MESSAGES/griffith.mo
===================================================================
--- trunk/i18n/da/LC_MESSAGES/griffith.mo	2011-02-06 12:43:18 UTC (rev 1524)
+++ trunk/i18n/da/LC_MESSAGES/griffith.mo	2011-02-06 12:59:51 UTC (rev 1525)
@@ -1,112 +1,113 @@
-??    ?     t-  9  ?      ?#     ?#     ?#  /   ?#     ?#  +   $     1$     C$     Y$     m$     z$     ?$     ?$     ?$     ?$  -   ?$  -   ?$  (   ?$     %     .%  -   ?%     M%     a%     n%     ?%     ?%  &   ?%    ?%     ?&     ?&     '     '     *'     ;'     G'  2   W'     ?'  -   ?'     ?'     ?'     ?'  	   ?'     ?'     ?'  
-   ?'  	   	(  T   (  +   h(  ,   ?(  w   ?(  p   9)     ?)      ?)     ?)     ?)     ?)     ?)     -*     *     %*     5*  	   J*     T*  -   [*  
-   i*  
-   t*  	   *     ?*     ?*     ?*     ?*     ?*     ?*     ?*  3   ?*     2+     7+     ?+     H+     U+     g+     v+     ?+     ?+  
-   ?+     ?+  	   ?+     ?+     ?+  -   ?+     ?+     ?+     ?+  -   ,     !,  
-   ',  
-   2,     =,     E,     L,     Q,  ?   Z,     -  	   -     -     )-     5-     =-  8   J-     ?-  9   ?-     ?-  %   ?-      ?-     .     0.     F.     ^.     d.     k.     {.     ?.  -   ?.  
-   ?.     ?.     ?.     ?.     ?.     ?.     /  	   /     /      /     5/     B/     N/     S/  	   i/  -   s/     ?/     ?/  )   ?/     ?/     ?/     ?/  -   ?/  9   0  5   V0  /   ?0     ?0     ?0     ?0  -   ?0     ?0     ?0     ?0     1     01     L1     R1     Y1     f1     {1     ?1     ?1  &   ?1  v   ?1     42  ?   K2  ?   ?2     ?3     ?3  	   ?3     ?3  ?   ?3  E   T4     ?4     ?4     ?4  -   ?4     ?4     ?4  
-   ?4  -    5     5     5     5     &5  
-   /5  	   :5  
-   D5  D   O5     ?5     ?5     ?5  -   ?5  %   ?5  X   ?5     O6     e6  	   j6     t6  
-   ?6     ?6     ?6  -   ?6  	   ?6     ?6     ?6  8   ?6     7  	   "7  -   ,7     :7  -   I7     W7     ]7     d7     p7  -   v7     ?7  "   ?7     ?7     ?7     ?7  C   ?7     /8     >8     B8  -   G8     U8     j8     w8     z8     ?8  
-   ?8     ?8     ?8     ?8     ?8     ?8     ?8  -   ?8  8   ?8     /9     >9     M9     S9     e9  
-   {9     ?9     ?9     ?9     ?9     ?9  '   ?9  0   ?9     :     :     !:  #   (:     L:     T:     [:     `:  
-   e:     p:     w:  -   ?:     ?:     ?:     ?:     ?:     ?:  	   ?:     ?:     ?:     ?:     ?:     ?:  +   ;  8   F;  9   ;  >   ?;  :   ?;  $   3<  /   X<      ?<  "   ?<     ?<  -   ?<     ?<     ?<  
-   ?<  
-   	=     =     ,=     @=     G=     S=     [=     h=     p=  	   x=     ?=     ?=  -   ?=  
-   ?=  	   ?=     ?=     ?=     ?=     ?=     >     >     (>     :>     L>     b>  $   x>      ?>     ?>     ?>     ?>     ?>     
-?     ?     ?     ?     "?  "   *?     M?     g?     n?     ~?     ??     ??     ??     ??  (   ??  1   ??  ?   @  '   ?@     ?@  S   ?@  9   9A  *   sA  &   ?A     ?A     ?A     ?A     ?A     ?A     ?A  ?   ?A     ?B     ?B     ?B     ?B  ?   ?B     ?C     ?C     ?C     ?C     ?C     ?C  -   ?C     ?C     ?C     ?C  *   ?C  #   )D  +   MD  6   yD     ?D  N   ?D     E     %E     +E     1E     8E     ?E  $   EE      jE  A  ?E     ?M     ?M      ?M     N  
-   N     #N     ,N     <N     ON     WN     mN     ~N     ?N     ?N     ?N     ?N     ?N     ?N     ?N     ?N     ?N  
-   ?N     ?N  -   O     !O     )O     0O     5O     :O     AO     JO     ZO     cO     ~O  	   ?O     ?O  	   ?O     ?O     ?O     ?O     ?O     ?O  ?  ?O     ?Q     ?Q  '   ?Q     ?Q  -   ?Q     R     4R     FR  
-   [R     fR     uR     ?R     ?R     ?R     ?R     ?R  -   ?R     S     S     &S     <S     SS     `S     sS     ?S  $   ?S    ?S  -   ?T     ?T     ?T     ?T     	U     U     ,U  3   <U     pU  -   ?U     ?U     ?U     ?U     ?U     ?U     ?U  	   ?U  
-   ?U  f   V  5   nV  7   ?V  ?   ?V  ?   gW  -   ?W      ?W     X  	   X     )X     DX  	   _X  	   iX     sX     ?X  	   ?X     ?X     ?X  
-   ?X  
-   ?X     ?X     ?X     ?X     Y     Y  "   6Y     YY     mY  :   vY  
-   ?Y  	   ?Y     ?Y  -   ?Y  -   ?Y     ?Y  -   ?Y     Z     Z     Z     Z  
-   "Z     -Z     >Z     ZZ     gZ     vZ     {Z     ?Z  	   ?Z     ?Z  
-   ?Z  
-   ?Z     ?Z     ?Z     ?Z  ?   ?Z     ?[  
-   ?[     ?[     ?[     ?[  	   ?[  7   ?[     \  9   &\     `\  %   f\     ?\     ?\     ?\     ?\  
-   ?\     ?\  -   ?\     ]     ]     $]     4]     =]     P]     X]  #   a]  !   ?]     ?]     ?]     ?]     ?]     ?]     ?]     ?]     ^     ^     %^     1^     A^  /   H^     x^     ?^     ?^  *   ?^  2   ?^  /   _  +   7_     c_     v_     }_     ?_     ?_  
-   ?_  %   ?_  $   ?_  %   ?_     `     `     %`     :`     M`     Q`     X`  ,   h`  s   ?`     	a  ?   a  ?   ?a  
-   {b     ?b     ?b     ?b  ?   ?b  S   8c     ?c     ?c     ?c     ?c     ?c     ?c  
-   ?c  -   ?c  
-   d     d     d     !d     'd     /d     5d  K   Ed     ?d     ?d  
-   ?d  	   ?d  ,   ?d  \   ?d     Qe     fe     me     |e     ?e     ?e     ?e  -   ?e     ?e     ?e     ?e  8   ?e     &f  
-   6f     Af     Sf     cf     sf     yf     f     ?f     ?f     ?f  #   ?f     ?f     ?f     ?f  W   g  -   gg     ug     wg     |g     ?g     ?g     ?g     ?g      ?g     ?g     ?g     ?g     h  -   h     "h  	   (h  -   2h  ?   @h     ?h     ?h     ?h     ?h     ?h  
-   ?h     ?h     ?h     ?h     i     i     i  9   3i     mi     ~i     ?i  2   ?i     ?i     ?i     ?i     ?i     ?i     ?i  -    j     j     j     $j     1j     >j     Kj     Tj     cj     oj     ?j     ?j     ?j     ?j  8   ?j  9   k  <   Hk  E   ?k     ?k  *   ?k  &   l     -l     Ll     Rl     bl  
-   xl     ?l  
-   ?l      ?l     ?l     ?l     ?l     ?l  	   ?l     	m     m  	   m     $m     0m     Dm     Qm     Zm     am     um     ?m     ?m     ?m  -   ?m     ?m     ?m     ?m     n     n     9n     Vn     \n     on     n     ?n  
-   ?n  	   ?n     ?n     ?n  )   ?n     ?n     ?n     	o     o     :o     Bo     Jo     ^o  "   go  4   ?o  m   ?o  (   -p     Vp  c   qp  8   ?p  0   q  "   ?q     bq     hq     xq     ?q     ?q     ?q  ?   ?q     =r     Cr  	   Wr     ar  ?   wr  
-   Cs     Ns     Vs     cs      {s     ?s     ?s     ?s     ?s     ?s  /   ?s      ?s  #   t  1   =t     ot  W   ?t     ?t     ?t     ?t     ?t     u     u  '   u  %   ?u  ?  eu     }     }  "   &}     I}     `}  
-   l}     w}     ?}     ?}     ?}     ?}     ?}  "   ?}     ?}     ~     ~  
-   ~     '~     7~     >~     F~  
-   R~     ]~  
-   x~     ?~     ?~     ?~     ?~     ?~     ?~     ?~     ?~     ?~     ?~     ?~            	     	   )     3     C     G     ?  P   \                    ?   z     ?  ?   [                  U  ?   ?  ?   k      ?   ,   ?   m  ?   {       ?  k   -  -   M   	       ?  ?  ?   a   ?   W       ?   ?   r  f   ?           [   ?   C            ?   ?       |                 ?   ?   ?   <   R   B      ?  "           4      m                 ?   D           ?   ?       p  ?       ]      ?   ?  ?   M  8       A   ?   ?   ?   G  L    H   ?   ?  ;           ?   ?               <  `       ?   5  ?   6      ?       '     4   ?       u   ?   ?      ?     ?   e           ?  ?   @        ?       @   ?  )  ,  |  a  ?       ?                ?  =     ?   U   0  ?  ?   :   3  H  q   I  ?   ?   ?         ?         ]   b       g  ?   ?   c   ?                ?   ?   Y   &  O  N           q  ?
   ?  ?   1  ?   ?  X   v      w   L      ?       ?  y         ?       ?       ?   '  y  S  0       i      X  Q    i   ?   }   ?  ?  $   N  ;      2  /  d      b  J  W      e  ?       ?   v     ?        ?             Y  ?       %                   ?  ?   
-   ?  D          2   ?      K       ?   w      B       7   ?  ?   c  _   ?   u  ?   `  ?         %  V      ?  ?   S       ?          ?      C   ?   F   ?   _  ?   ?   ?   d   >    ?   ?   ?      ?  ?   #   ?   5           s          E   ?   ?   F  ?   ?   +      n  ?  -   .         f  ?   ?   (   >   T      9   (  p   ?   ?   t        ?      g   j   ?  9  o  ?     ~   ?           ?      A      ?   *     	  ?       ?          x  ?      ?   ?   8      l      R  ?                      ?  :      ?   ?       ?   !   ?   G          ?          ?               l       ?   ?   ?   n           ?     ?  -  &       ?  )               ~    1   ?  ?    o           ?       P  ?     7  E  ?   h     ?   {      ?   ^   ?          V   j      ?       ?   \          I              ?  =  ?         s  ?   Q         ?   ?       #  "      x       ?             h  6   Z  ?      J       K  /   ?        
    ?           
-  ?   }  T   ?      ?   $  ?       ?               .  ?   ?  !      ^  ?  t   ?   +   Z       *  ?   O   ?  z      r   3   ?       as   min %s
+??    ?     ,+  -  <      ?"     ?"     ?"  /   ?"     +#  +   E#     q#     ?#     ?#     ?#     ?#     ?#     ?#     ?#     $  +   $  +   #$  (   1$     Z$     n$  +   $     ?$     ?$     ?$     ?$     ?$  &   ?$    %     $&     3&     E&     R&     j&     {&     ?&  2   ?&     ?&  +   ?&     ?&     ?&      '  	   '     '     /'  
+   >'  	   I'  T   S'  +   ?'  ,   ?'  p   (     r(      (     ?(     ?(     ?(     ?(     ?(     ?(     ?(     ?(  	   )     )  +   #)  
+   1)  
+   <)  	   G)     Q)     `)     q)     ?)     ?)     ?)     ?)  3   ?)     ?)     ?)     *     *     *     /*     >*     K*     Q*  
+   W*     b*  	   h*     r*     ?*  +   ?*     ?*     ?*     ?*  +   ?*     ?*  
+   ?*  
+   ?*     +     ++     +     +  ?   "+     ?+  	   ?+     ?+     ?+     ?+     ,  8   ,     K,  9   T,     ?,      ?,     ?,     ?,     ?,      -     -     +-     -  +   %-  
+   3-     >-     Q-     Z-     b-     x-     ?-  	   ?-     ?-     ?-     ?-     ?-     ?-     ?-  	   ?-  +   ?-     .     .  )   #.     M.     Z.     q.  -   y.  9   ?.  5   ?.  /   /     G/     X/     _/  +   e/     s/     z/     ?/     ?/     ?/     ?/     ?/     ?/     ?/     0     0     0  &   !0  v   H0     ?0  ?   ?0  ?   ?1     52     >2  	   C2     M2  ?   U2  E   ?2     %3     +3     B3  +   I3     W3     k3  
+   ?3  +   ?3     ?3     ?3     ?3     ?3  
+   ?3  	   ?3  
+   ?3  D   ?3     4     &4  +   >4     L4     b4  	   g4     q4  
+   ?4     ?4     ?4  +   ?4  	   ?4     ?4     ?4  8   ?4     5  	   5  +   )5     75  +   F5     T5     Z5     a5     m5  +   s5     ?5  "   ?5     ?5     ?5     ?5  C   ?5     ,6     ;6     ?6  +   D6     R6     g6     t6     w6     ?6  
+   ?6     ?6     ?6     ?6     ?6     ?6     ?6  +   ?6  8   ?6     ,7     ;7     J7     P7     b7  
+   x7     ?7     ?7     ?7     ?7     ?7  '   ?7  0   ?7     8     8     8  #   %8     I8     Q8     X8     ]8  
+   b8     m8     t8  +   ?8     ?8     ?8     ?8     ?8     ?8  	   ?8     ?8     ?8     ?8     ?8     ?8  +   9  8   C9  9   |9  >   ?9  :   ?9  $   0:  /   U:      ?:  "   ?:     ?:  +   ?:     ?:     ?:  
+   ?:  
+   ;     ;     );     =;     D;     P;     X;     e;     m;  	   u;     ;     ?;  +   ?;  
+   ?;  	   ?;     ?;     ?;     ?;     ?;     <     <     %<     7<     I<     _<  $   u<      ?<     ?<     ?<     ?<     ?<     =     =     =     =     =  "   '=     J=     d=     k=     {=     ?=     ?=     ?=     ?=  (   ?=  1   ?=  ?   >  '   ?>     ?>  S   ?>  9   6?  *   p?  &   ??     ??     ??     ??     ??     ??     ??     ??     ??     +@     @  ?   &@     ?@     ?@     ?@     A     A  +   $A     2A     DA     IA  *   MA  #   xA  +   ?A  6   ?A     ?A  N   B     nB     tB     zB     ?B     ?B     ?B  $   ?B      ?B  A  ?B     K     $K      3K     TK  
+   gK     rK     {K     ?K     ?K     ?K     ?K     ?K     ?K     ?K     ?K     ?K     L     L     L     L  
+   +L     6L  +   LL     ZL     bL     iL     nL     sL     zL     ?L     ?L     ?L     ?L  	   ?L     ?L  	   ?L     ?L     ?L     ?L     M     M  ?  M     ?N     ?N  '   ?N     
+O  -    O     NO     kO     }O  
+   ?O     ?O     ?O     ?O     ?O     ?O     ?O     P  -   P     ?P     PP     ]P     sP     ?P     ?P     ?P     ?P  $   ?P    ?P  +   ?Q     R     R     'R     @R     TR     cR  3   sR     ?R  +   ?R     ?R     ?R     ?R     ?R     S     S  	   )S  
+   3S  f   >S  5   ?S  7   ?S  ?   T  +   ?T      ?T     ?T  	   ?T     ?T     ?T  	   U  	   U     U     ,U  	   EU     OU     XU  
+   kU  
+   vU     ?U     ?U     ?U     ?U     ?U  "   ?U     V     V  :   "V  
+   ]V  	   hV     rV  +   zV  +   ?V     ?V  +   ?V     ?V     ?V     ?V     ?V  
+   ?V     ?V     ?V     W     W     "W     'W     BW  	   WW     aW  
+   iW  
+   tW     W     ?W     ?W  ?   ?W     IX  
+   XX     cX     oX     {X  	   ?X  7   ?X     ?X  9   ?X     Y     Y     2Y     HY     YY  
+   jY     uY  +   |Y     ?Y     ?Y     ?Y     ?Y     ?Y     ?Y  #   ?Y  !   ?Y     Z     Z     )Z     1Z     JZ     [Z     hZ     pZ     ?Z     ?Z     ?Z     ?Z  /   ?Z     ?Z     ?Z     [  *   [  2   C[  /   v[  +   ?[     ?[     ?[     ?[     ?[     \  
+   \  %   \  $   =\  %   b\     ?\     ?\     ?\     ?\     ?\     ?\     ?\  ,   ?\  s   ]     x]  ?   ?]  ?   ^  
+   ?^     ?^     _     _  ?   _  S   ?_     ?_     `      `     )`     5`     I`  
+   [`  +   f`  
+   t`     `     ?`     ?`     ?`     ?`     ?`  K   ?`      a     a  	   !a     +a     @a     Ga     Va     ha     ta     ?a  +   ?a     ?a     ?a     ?a  8   ?a      b  
+   b     b     -b     =b     Mb     Sb     Yb     lb     tb     ?b  #   ?b     ?b     ?b     ?b  W   ?b  +   Ac     Oc     Qc     Vc     cc     yc     ?c     ?c      ?c     ?c     ?c     ?c     ?c  +   ?c     ?c  	   d  +   d  ?   d     Zd     id     xd     ?d     ?d  
+   ?d     ?d     ?d     ?d     ?d     ?d     ?d  9   +e     Ge     Xe     ]e  2   oe     ?e     ?e     ?e     ?e     ?e     ?e  +   ?e     ?e     ?e     ?e     f     f     %f     .f     =f     If     ]f     tf     {f     ?f  8   ?f  9   ?f  <   "g  E   _g     ?g  *   ?g  &   ?g     h     &h     ,h     <h  
+   Rh     ]h  
+   ih      th     ?h     ?h     ?h     ?h  	   ?h     ?h     ?h  	   ?h     ?h     
+i     i     +i     4i     ;i     Oi     ci     ki     zi  +   ?i     ?i     ?i     ?i     ?i     ?i     j     0j     6j     Ij     Yj     ij  
+   nj  	   yj     ?j     ?j  )   ?j     ?j     ?j     ?j     ?j     k     k     $k     8k  "   Ak  4   dk  m   ?k  (   l     0l  c   Kl  8   ?l  0   ?l  "   m     <m     Bm     Rm     gm     om     wm     |m     ?m  	   ?m     ?m  ?   ?m  
+   ?n     ?n     ?n     ?n     ?n     ?n     ?n     ?n     ?n  /   ?n      o  #   7o  1   [o     ?o  W   ?o     p     p     p     p     #p     0p  '   5p  %   ]p  ?  ?p     -x     5x  "   Dx     gx     ~x  
+   ?x     ?x     ?x     ?x     ?x     ?x  "   ?x     ?x     y     y  
+   !y     ,y     <y     Cy     Ky  
+   Wy     by  
+   }y     ?y     ?y     ?y     ?y     ?y     ?y     ?y     ?y     ?y     ?y     z     z     z  	   $z  	   .z     8z     Hz     Lz       ?              ?   =   ?   i  ?   P    G     :       v  _       ?   f       ?      ~   ?               ?   ?      ?   4      ?  <   Z  ?   ?           g   1   2  N   F   f   a       ?   ?  ?  c  ?   u  ?   +   !   r  ;   R  ?   a  ?   ?   W   D     @      ?       0   c       ?   M        l  A   ?   S  v   \  J   ?      ?               ?    w   ?  "   B  q    8           ?       t  w  N    x        ?              ?       /  ,       ?   H     `   ?   ?     ?     ?   p   z           {  ?      9   (          ?           ?   B               ?   ?   $  ?   ?       ?      ?   ?       J             ?       ?       ?   ?   -   ?      ?      ?  ?   =     )  T     ?  >  7          ?       "  ?      ?          ?   ?       ?   ?  ?       y       ? 
   ?       r   3      ?       |  j  m   G   *   V      ?  b   ?          ?       z      ?     o  ?   ;      ?  O      U   X   Y   ?       S           	   ?  ?   I  K    Q  +  0  D  ?   ?     )   ?      ?     ?       V     ?   ?       +   ?   ?   9  ?   ?   ?  C   d  6  ?      ?   ?         ?   ?           t   ?       U  q   l   b      2       &      6   7  m  @   ?   ?       ?   ?          ?  M  ?       }          ?   &       ?   .         ?                  h   5   !  ?       ?   ?          [   p  i   ?         1      ?  h      ?     ?   [                          ?         <  O   ?             u   
+   %  ?   ?       ]  ?   >   ^  ?       :  T  R   I   ?   e         {   _  3  ?       ?   n   ?             	            E  4   ?   Z   ^   ?           H  X  ?   ?           W      ?           ?   ?         E       s      ?   Y  K   ,    ?  x     ?  ?  ?     ?   Q   ?      ?   8          ]       ?  }       %         ?   -  +         o   ?      ?   ?   y  g  .       L   ?  ?           ?   5  d       \   ?   j   ?   ?   ?  ?   ?  ?   ?   '  ?       ?   F      #       L  ?   ?          /   k          '   $   ?  e  `      
+  C  ?   |   *      (      ?      s                       ?   ?         ?       #  n  ?      ?   A  k   P   ?   ?     ~  ?     as   min %s
 Are you sure you want to delete this person? %s file has been created. %s file has been imported. %s movies added. 0 means no limits <b>Audio channels</b> <b>Audio codecs</b> <b>Audio</b> <b>Collection</b> <b>Collections</b> <b>Defaults</b> <b>E-mail reminder</b> <b>Example</b> <b>Export</b> <b>Header</b> <b>Import only fields selected below</b> <b>Importing...</b> <b>Languages</b> <b>Limits</b> <b>Loan History</b> <b>Media</b> <b>Search for:</b> <b>Search results</b> <b>Select database to use</b> <b>Show only the following columns</b> <b>Some Hints</b>:
 
 On the next step you can assign your csv fields with the one in Griffith.
 One CSV-field can be assigned to multiple griffith-fields, i.e. if you have only one title.
 Your cast-list should be comma-seperated to break it apart in multiple lines. <b>Sort by</b> <b>Split into</b> <b>Style</b> <b>Subtitle formats</b> <b>Subtitles</b> <b>Tags</b> <b>Template</b> <b>Use spell checking on the following fields:</b> <b>Video codecs</b> <b>Volume</b> Add Add a new movie Add a new person Add movie Add movie and close Adds new movie All Movies All files Are you sure you want to create a new database?
-You will lose ALL your current data! Are you sure you want to delete this movie? Are you sure you want to delete this poster? Are you sure you want to mix?
-Your current movie collection will be mixed with a backup.
-You can't undo this operation. Are you sure you want to restore?
+You will lose ALL your current data! Are you sure you want to delete this movie? Are you sure you want to delete this poster? Are you sure you want to restore?
 Your current movie collection will be replaced.
 You can't undo this operation. Aspect ratio Assigned Fields (CSV > Griffith) Audio Author Backup has been created Backup restored Barcode Black and White Black and white Brazilian Portuguese Bulgarian Buy me By Collection CSV Fields CSV Import Cameraman Can't copy %s! Can't create %s! Can't open %s! Can't open the file %s Can't read backup file Can't remove %s! Cancel Cannot connect to database.
 Falling back to SQLite. Cast Catalan Channels Choose Image Choose style file Classification Clear filter Clone Codec Collection Color Condition Connection error Connection timed out Contributors: Convert images Country Cover generated by Griffith v Create backup Czech DVD layers DVD region Damaged Danish Data Database Define here the PDF reader you want to use within Griffith. Popular choices are xpdf, gpdf, evince or kpdf. Make sure you have this program installed and working first. Delete a person Delimiter Description Destination Details Dictionaries Dictionary not available. Spellcheck will be disabled. 
  Director Directory %s already exists.
-Do you want to overwrite it? Discs Do you want to loan whole collection? Document generated by Griffith v Document has been generated. Dual Side, Dual Layer Dual Side, Single Layer Dutch E-mail E-mail reminder E-mail sent sucessfuly E_xport Edit a person Edit movie Edit movie details Encoding English Error creating backup Error sending e-mail: %s Estonian Excellent Export Export a %s document Export a PDF Export data Fair Favorite Movie Plugin Favourite Fetching data Fetching poster Fields File exists. Do you want to overwrite it? File-Options Fill empty fields only Filter  Filter activated. Showing only loaned movies. Filter activated. Showing only movies from collection: %s Filter activated. Showing only movies from volume: %s Filter activated. Showing only not seen movies. Font for reports Format Forum Found Results French From Row Full CSV list export plugin Full CSV list import plugin Full XML list export plugin Genre German Get from web Get movie data from: Good Greek 
 Griffith Fields Griffith is a film collection manager. Griffith will now convert your database to the new format. This can take several minutes if you have a large database. Griffith's movies list Here you can define the desired language to use while spell checking some fields. Use you locale setting. For example, to use european portuguese spell checking enter 'pt' Here you can define the smtp server port to use. If you want to use your gmail account service to send e-mails, try to enter '587' here. Default (and the most common one) is '25' Homepage Host Hungarian I_mport If you need TLS support, please check this checkbox. This is needed, for example, when using gmail service to send your reminder e-mails. If your file has no column headers then you should import from row 0. Image Image has been updated Images Import window Include Front Image Include movie number Indonesian International Italian Japanese Korean Language Language:  Languages Last added Last chance!
+Do you want to overwrite it? Discs Document generated by Griffith v Document has been generated. Dual Side, Dual Layer Dual Side, Single Layer Dutch E-mail E-mail reminder E_xport Edit a person Edit movie Edit movie details Encoding English Error creating backup Error sending e-mail: %s Estonian Excellent Export Export a %s document Export a PDF Export data Fair Favorite Movie Plugin Favourite Fetching data Fetching poster Fields File exists. Do you want to overwrite it? File-Options Fill empty fields only Filter  Filter activated. Showing only loaned movies. Filter activated. Showing only movies from collection: %s Filter activated. Showing only movies from volume: %s Filter activated. Showing only not seen movies. Font for reports Format Forum Found Results French From Row Full CSV list export plugin Full CSV list import plugin Full XML list export plugin Genre German Get from web Get movie data from: Good Greek Griffith Fields Griffith is a film collection manager. Griffi
 th will now convert your database to the new format. This can take several minutes if you have a large database. Griffith's movies list Here you can define the desired language to use while spell checking some fields. Use you locale setting. For example, to use european portuguese spell checking enter 'pt' Here you can define the smtp server port to use. If you want to use your gmail account service to send e-mails, try to enter '587' here. Default (and the most common one) is '25' Homepage Host Hungarian I_mport If you need TLS support, please check this checkbox. This is needed, for example, when using gmail service to send your reminder e-mails. If your file has no column headers then you should import from row 0. Image Image has been updated Images Import window Include Front Image Include movie number Indonesian International Italian Japanese Korean Language Language:  Languages Last added Last chance!
 Do you confirm that you want
-to lose your current data? Layers Limit search results to Lineterminator List of films List was successful exported to iPod. List was successful exported. Now you should move it to the 'Notes' folder on your iPod. Load poster from disk Loan Loan Date Loan Management Loan movie Loan to Loaned Loaned Movies Loaned To Loans Logo, icon and general artwork  Mail could not be sent. Please check e-mail preferences. Main Authors Main list Manage People Maximal height Maximal width Media Medium Meter
+to lose your current data? Layers Limit search results to List of films Load poster from disk Loan Loan Date Loan Management Loan movie Loan to Loaned Loaned Movies Loaned To Loans Logo, icon and general artwork  Mail could not be sent. Please check e-mail preferences. Main Authors Main list Manage People Maximal height Maximal width Media Medium Meter
 Stars Mixed Movie details Movie information Movie information has been updated Movie loan reminder Movie loaned Movie not loaned Movie with that title already exists, are you sure you want to add? My Movies List N/A Name Name is empty Needs authentication New database No No movie found No person is defined yet. No results No. Norwegian Bokmal Not Seen Movies Notes Number Occitan Official site Old DB conversion: please install pysqlite legacy (v1.0) Original Title Original title Other PDF export plugin PDF has been created. PDF reader Page %d Pashto Password People Phone Please assign at least one field first! Please check debug output for more informations. Please wait a moment... Plot Plugin Plugin exports data using templates Plugins Polish Poor Port Portuguese Poster Poster image Poster viewer Posters Preferences Print Cover Print cover Programmers Quotechar Rating Rating image Record updated Region Region 0 (No Region Coding) Region 1 (United States of America, Canada) R
 egion 2 (Europe, Egypt, Arabia, Japan and South Africa) Region 3 (Korea, Thailand, Vietnam, Borneo and Indonesia) Region 4 (Australia and New Zealand, Mexico and South America) Region 5 (India, Africa, Russia and former USSR countries) Region 6 (Popular Republic of China) Region 7 (Reserved for Unspecified Special Use) Region 8 (Airlines/Cruise Ships) Released Under the GNU/GPL License Remove Remove poster Remove selected movie Rename Report bug Resolution Restore Griffith backup Restore from backup Return Return Date Reverse Running Time Runtime Russian SMTP port SMTP server Save Griffith backup Saved filters Screenplay Searching Searching on the web See TRANSLATORS file Seen it Select database Select first movie Select image Select last movie Select next movie Select previous movie Sender E-mail address Show other movies in this collection Show other movies in this volume Simple Simplified Chinese Single Side, Dual Layer Single Side, Single Layer Site Size Slovak Source Sp
 anish Spell check the following language Standard
 Slim
 Double Slim Studio Subtitle format Suggest an unseen movie Swedish Tags Technical information Template The format of the file is not supported. This database requires newer version of Griffith. This is the from e-mail address that should be used to all outgoing e-mail. You want to include your own e-mail address here probably. This item is in use.
-Operation aborted! This movie is part of... This person has data in the loan history. This data will be erased if you continue. This person has loaned films from you. Return them first. This person has no e-mail address defined. This program is released under the GNU Title Toolbar Total Movies: %s Trailer Turkish Type Type in the original film tile, select source and choose <i>Get from web</i>. Griffith will try to fetch all the related information from the Web. Url:  Use Spellchecker Use TLS? Use custom file Use this entry to define the SMTP server you want to use to send e-mails. On *nix systems, 'localhost' should work. Alternatively, you can use your Internet Service Provider's SMTP server address. Username Version Video codec Visit movie web site Visit the oficial web site Volume Wait a moment Watch the trailer Year Yes You can't delete movie while it is loaned. You have no movies in your database You have seen all films in your collection! You should fill the original 
 title
+Operation aborted! This movie is part of... This person has data in the loan history. This data will be erased if you continue. This person has loaned films from you. Return them first. This person has no e-mail address defined. This program is released under the GNU Title Toolbar Total Movies: %s Trailer Turkish Type Url:  Use Spellchecker Use TLS? Use custom file Use this entry to define the SMTP server you want to use to send e-mails. On *nix systems, 'localhost' should work. Alternatively, you can use your Internet Service Provider's SMTP server address. Username Version Video codec Visit movie web site Volume Wait a moment Watch the trailer Year Yes You can't delete movie while it is loaned. You have no movies in your database You have seen all films in your collection! You should fill the original title
 or the movie title. You should fill the person name Your database is most probably in SQLite2 format, please convert it to SQLite3 _Edit _File _Help _Loans _Tools _View add entered name to collections list add entered name to volumes list ascii (English)
 big5 (Traditional Chinese)
 big5hkscs (Traditional Chinese)
@@ -191,38 +192,36 @@
 utf_16_be (all languages (BMP only))
 utf_16_le (all languages (BMP only))
 utf_7 (all languages)
-utf_8 (all languages) backups classification click here if movie was returned collection details commentary contains doesn't contain doesn't start with dubbing enable this extension entries per page files iPod Notes export plugin iPod is not connected. ignore in is equal to is not equal to lector like loaned only loaned to  loans movie or volume login failure minutes movies next none not in not like not loaned only previous remove selected collection remove selected volume seen only starts with subtitles tags unseen only volume details with without Project-Id-Version: Griffith 0.10-beta1
+utf_8 (all languages) backups classification click here if movie was returned collection details commentary contains doesn't contain doesn't start with dubbing entries per page files iPod Notes export plugin iPod is not connected. ignore in is equal to is not equal to lector like loaned only loaned to  loans movie or volume login failure minutes movies next none not in not like not loaned only previous remove selected collection remove selected volume seen only starts with subtitles tags unseen only volume details with without Project-Id-Version: Griffith 0.10-beta1
 Report-Msgid-Bugs-To: 
-POT-Creation-Date: 2010-10-03 21:34+0200
-PO-Revision-Date: 2010-03-19 20:36+0000
+POT-Creation-Date: 2011-02-03 21:56+0100
+PO-Revision-Date: 2010-10-09 10:04+0000
 Last-Translator: Lars J. Nielsen <lars.j.nielsen at gmail.com>
 Language-Team: Dansk-gruppen <dansk at dansk-gruppen.dk>
-Language: 
 MIME-Version: 1.0
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: 8bit
-X-Launchpad-Export-Date: 2010-10-03 19:04+0000
-X-Generator: Launchpad (build Unknown)
+X-Launchpad-Export-Date: 2011-02-06 12:52+0000
+X-Generator: Launchpad (build 12309)
+Language: 
   som   min %s
 Vil du virkelig slette denne person? Filen %s er oprettet. Filen %s er importeret. %s film er tilf??jet. 0 betyder ingen begr??nsning <b>Lydkanaler</b> <b>Lyd kodninger</b> <b>Lyd</b> <b>Samling</b> <b>Samlinger</b> <b>Standardvalg</b> <b>E-pos husker</b> <b>Eksempel</b> <b>Eksport</b> <b>Hoved</b> <b>Importer kun de nedenfor valgte felter</b> <b>Henter...</b> <b>Sprog</b> <b>Begr??nsninger</b> <b>Udl??n historie</b> <b>Medie</b> <b>S??g efter:</b> <b>S??ge resultat</b> <b>V??lg database</b> <b>Vis kun de f??lgende kolonner</b> <b>Nogle fif</b>
 
 Ved n??ste valgmulighed kan du tildele dine csv felter med dem i Griffith.
 Et CSV-felt kan tildeles flere Griffith-felter. for eksempel hvis du kun har en titel.
 Din skuespillerliste b??r v??re kommasepareret s?? den opdeles i flere linjer. <b>Sorter</b> <b>Opdel i</b> <b>Stil</b> <b>Undertekst format</b> <b>Undertekster</b> <b>M??rker</b> <b>Skabelon</b> <b>Anvend stavekontrol p?? de f??lgende felter:</b> <b>Videokodninger</b> <b>Volume</b> Tilf??j Tilf??j en ny film Tilf??j ny person Tilf??j film Tilf??j film og luk Tilf??j ny film Alle film Alle filer Er du sikker p??, at du ??nsker at oprette en ny database?
-Du mister ALLE dine nuv??rende oplysninger! Er du sikker p??, at du ??nsker at slette denne film? Er du sikker p??, at du ??nsker at slette denne plakat? Er du sikker p?? at du ??nsker at sammenblande?
-Du nuv??rende filmsamling sammenblandes med en backup.
-Du kan ikke omg??re denne handling. Er du sikker p?? at du vil indl??se sikkerhedskopi?
+Du mister ALLE dine nuv??rende oplysninger! Er du sikker p??, at du ??nsker at slette denne film? Er du sikker p??, at du ??nsker at slette denne plakat? Er du sikker p?? at du vil indl??se sikkerhedskopi?
 Din nuv??rende filmsamling bliver erstattet.
 Du kan ikke omg??re denne handling. Formatforhold Tildelte felter (CSV > Griffith) Lyd Forfatter Sikkerhedskopi er oprettet Sikkerhedskopi genoprettet Stregkode Sort/hvid Sort og hvid Brasiliansk portugisiske Bulgarske K??b mig Efter samlingsnavn CSV felter CSV import Kamera mand Kan ikke kopiere %s! Kan ikke oprette %s! Kan ikke ??bne %s! Kan ikke ??bne filen %s Kan ikke l??se sikkerhedskopifilen Kan ikke fjerne %s! Annuller Kan ikke forbinde til databasen
 Skifter tilbage til SQlite Rolleliste Catalansk Kanaler V??lg billede V??lg stilfil Klassifikation Rydder filtre Klon Kodning Samling Farve Betingelse Forbindelsesfejl Tidsudl??b p?? forbindelsen Bidragydere: Omdan billeder Land Omslag skabt af Griffith v Opret sikkerhedskopi Tjekkiske DVD-lag DVD-region Beskadiget Dansk Data Database Her defineres PDF l??seren som du ??nsker at anvende i Griffith. Popul??re valg er xpdf, gpdf, evince eller kpdf. Du skal f??rst sikre dig at dette program er installeret og virker. Slet en person Afgr??nser Beskrivelse Destination Detajler Ordb??ger Ordbod ikke tilg??ngelig. Stavekontrol er sl??et fra. 
  Instrukt??r Katalog %s eksisterer allerede.
-??nsker du at overskrive? Diske ??nsker du at udl??ne hele samlingen? Dokument oprettet af Griffith v Dokument er oprettet. To sider, to lag To sider, et lag Hollandske E-post E-post husker E-post sendt vellykket E_ksport ??ndr en person Ret film ??ndr filmdetaljer Kodning Engelske Fejl ved fors??g p?? sikkerhedskopi Fejl ved udsendelse af e-post: %s Estisk Fremragende Eksport Eksporter et %s dokument Eksporter en PDF Eksport data Rimelig Favorit filmudvidelsesmodul Favorit Henter data Henter plakater Felter Filen eksisterer. ??nsker du at overskrive den? Filindstillinger Udfyld kun tomme felter Filter  Filter aktiveret. Viser kun udl??nte film. Filter aktiveret. Viser kun film fra samlingen: %s Filter aktiveret. Viser kun film fra volume: %s Filter aktiveret. Viser kun ikke sete film. Font til rapporter Format Forum Fundne resultater Franske Fra r??kke Full CSV eksportliste udvidelsesmodul Fuld CSV importliste udvidelsesmodul Fuld XML eksportliste udvidelsesmodul Genre Tysk
 e Hent fra internettet Hent filmdata fra: God Gr??sk Griffith felter Griffith er et h??ndteringsprogram til film. Griffith vil nu omdanne din database til det nye format. Dette kan, hvis din database er stor, tage flere minutter. Griffiths filmliste Her kan du definere det ??nskede sprog til stavekontrol i udvalgte felter. Anvend dine lokale instilligner. For eksempel ??pt?? for portugisisk Her kan du definere hvilken smtp serverport, der skal anvendes. Hvis du ??nsker at anvende din gmail konto til at sende e-mails, s?? pr??v at indtaste '587' her. Standard (og den mest almindelige) er '25'. Hjemmeside V??rtscomputer Ungarsk I_mport Hvis du har brug for TLS support, kryds af i denne boks. der er brug for dette, blandt andet ved brug af; Gmail service til at sende huske e-mails Hvis din fil ikke har nogen kolonneoverskrifter s?? skal du importere fra r??kke 0. Billede Billedet er blevet opdateret billeder Hent vindue Medtag frontbillede Medtag filmnummer Indonesisk Internati
 onal Italienske Japansk Koreansk Sprog Sprog:  Sprog Sidst tilf??jet Sidste chance!
+??nsker du at overskrive? Diske Dokument oprettet af Griffith v Dokument er oprettet. To sider, to lag To sider, et lag Hollandske E-post E-post husker E_ksport ??ndr en person Ret film ??ndr filmdetaljer Kodning Engelske Fejl ved fors??g p?? sikkerhedskopi Fejl ved udsendelse af e-post: %s Estisk Fremragende Eksport Eksporter et %s dokument Eksporter en PDF Eksport data Rimelig Favorit filmudvidelsesmodul Favorit Henter data Henter plakater Felter Filen eksisterer. ??nsker du at overskrive den? Filindstillinger Udfyld kun tomme felter Filter  Filter aktiveret. Viser kun udl??nte film. Filter aktiveret. Viser kun film fra samlingen: %s Filter aktiveret. Viser kun film fra volume: %s Filter aktiveret. Viser kun ikke sete film. Font til rapporter Format Forum Fundne resultater Franske Fra r??kke Full CSV eksportliste udvidelsesmodul Fuld CSV importliste udvidelsesmodul Fuld XML eksportliste udvidelsesmodul Genre Tyske Hent fra internettet Hent filmdata fra: God Gr??sk Griffith
  felter Griffith er et h??ndteringsprogram til film. Griffith vil nu omdanne din database til det nye format. Dette kan, hvis din database er stor, tage flere minutter. Griffiths filmliste Her kan du definere det ??nskede sprog til stavekontrol i udvalgte felter. Anvend dine lokale instilligner. For eksempel ??pt?? for portugisisk Her kan du definere hvilken smtp serverport, der skal anvendes. Hvis du ??nsker at anvende din gmail konto til at sende e-mails, s?? pr??v at indtaste '587' her. Standard (og den mest almindelige) er '25'. Hjemmeside V??rtscomputer Ungarsk I_mport Hvis du har brug for TLS support, kryds af i denne boks. der er brug for dette, blandt andet ved brug af; Gmail service til at sende huske e-mails Hvis din fil ikke har nogen kolonneoverskrifter s?? skal du importere fra r??kke 0. Billede Billedet er blevet opdateret billeder Hent vindue Medtag frontbillede Medtag filmnummer Indonesisk International Italienske Japansk Koreansk Sprog Sprog:  Sprog Sidst ti
 lf??jet Sidste chance!
 Bekr??ft at du ??nsker
-at miste dine nuv??rende oplysninger? Lag Begr??ns s??geresultatet til Linjeskift Filmliste Listen blev med succes eksporteret til iPod. Listen blev med succes eksporteret. Nu b??r du flytte den til ??Notes?? mappen p?? din iPod. Hent plakat fra disk Udl??n Udl??ningsdato Udl??nh??ndtering Udl??n film Udl??nt til Udl??nt Udl??nte film Udl??nt til Udl??n Logo, ikon og generel grafik  Mail kunne ikke sendes. Tjek venligst e-mail ops??tning. Hovedforfattere Hovedliste H??ndter personer Maksimal h??jde Maksimal bredde Medie Medie Vurdering
+at miste dine nuv??rende oplysninger? Lag Begr??ns s??geresultatet til Filmliste Hent plakat fra disk Udl??n Udl??ningsdato Udl??nh??ndtering Udl??n film Udl??nt til Udl??nt Udl??nte film Udl??nt til Udl??n Logo, ikon og generel grafik  Mail kunne ikke sendes. Tjek venligst e-mail ops??tning. Hovedforfattere Hovedliste H??ndter personer Maksimal h??jde Maksimal bredde Medie Medie Vurdering
 Stjerner Blandet Filmdetaljer Filminformation Filminformation er blevet opdateret Filmudl??nshusker Film udl??nt Film er ikke udl??nt En film med den titel eksisterer allerede, er du sikker p??, at du ??nsker at tilf??je? Min filmliste - Navn Navn er tomt Beh??ver bekr??ftelse Ny database Nej Ingen film fundet Ingen person er endnu defineret. Ingen resultater - Norsk (bokm??l) Ikke sete film Bem??rkninger Antal Occitansk Officiel side Gammel DB omdanning: Installere venligst pysqlite legacy (v1.0) Original titel Original titel Andre oplysninger PDF eksportudvidelsesmodul PDF er oprettet. PDF l??ser Side %d Pashto Adgangskode Personer Telefon Tildel venligst f??rst et felt! Unders??g fejlfindings udskriften for flere informationer Vent venligst... Plot Tilf??jelsesmodul Dataeksport udvidelsesmodul ved brug af skabeloner Udvidelsesmodul Polske D??rlig Port Portugisiske Plakat Plakatbillede Plakat viser Plakater pr??ferancer Print omslag Print omslag Udvikler Citeret person Bed
 ??mmelse Bed??mmelsesbillede Registrering opdateret Region Region 0 (ingen regionskode) Region 1 (USA, Canada) Region 2 (Europa, Egypten, Arabien, Japan and Sydafrika) Region 3 (Korea, Thailand, Vietnam, Borneo og Indonesien) Region 4 (Australien and New Zealand, Mexico and Sydamerika) Region 5 (Indien, Afrika, Rusland og tidligere lande i Sovjetunionen) Region 6 (Kina) Region (Reserveret til udefineret form??l) Region 8 (Flyselskaber/krydstogtskibe) Udgivet under licensen GNU/GPL Fjern Fjerne plakater Fjern den valgte film Skift navn Anmeld fejl Opl??sning Genopret Griffith-sikkerhedskopi Genopret fra sikkerhedskopifil Tilbage Tilbageleveringsdato Bagside Spilletid Varighed Russisk SMTP port SMTP server Gem Griffith backup Gemte filtre Skuespil S??ger S??gning p?? nettet Se OVERS??TTERS fil Set den V??lg database V??lg den f??rste film V??lg billede V??lg den sidste film V??lg n??ste film V??lg tidligere film Afsender e-post-adresse Vis andre film i denne samling Vi andre f
 ilm i denne volume Enkel Forenklet kinesisk En side, to lag En side, et lag Side St??rrelse Slovakisk Kilde Spanske Udf??r stavekontrol i det f??lgende sprog Standard
 Slank
 Ekstra slank Filmselskab Undertitelformat Foresl?? en endnu ikke set film Svenske M??rker Teknisk information Skabelon Filformatet er ikke underst??ttet. Denne database kr??ver en nyere version af Griffith. Dette er e-post-adressen som b??r bruges til al udg??ende e-post. Her kan du anf??re din egen e-post-adresse. Denne enhed er i brug.
-Handling afbrudt! Denne film er en del af... Denne person har informationer i udl??nshistorien. Disse informationer slettes hvis du forts??tter. Denne person har l??nt film af dig. Returner dem f??rst. Denne person har ingen e-post-adresse defineret. Dette program er udgivet under GNU Titel V??rkt??jslinje Total antal film: %s Forfilm Tyrkisk Type Indtast den originale filmtitel, v??lg kilde og v??lg <i>Hent fra internettet</i>, s?? vil Griffith fors??gt at hente de relevante oplysninger fra nettet. Url:  Anvend stavekontrol Brug TLS? Brug egenudviklet fil Anvend dette felt til at definere SMTP-serveren som du vil bruge til at sende e-post med. P?? *nix systemer b??r ??localhost?? virke. Alternativt kan du bruge din Internetleverand??rs SMTP-serveradresse. Brugernavn Version Videokodning Bes??g filminternetside Bes??g den officielle hjemmeside Volume Vent et ??jeblik Se forfilmen ??r Ja Du kan ikke slette en film n??r den er udl??nt. Du har ingen film i din database Du har s
 et alle film i din samling! Du b??r indtaste originaltitlen
+Handling afbrudt! Denne film er en del af... Denne person har informationer i udl??nshistorien. Disse informationer slettes hvis du forts??tter. Denne person har l??nt film af dig. Returner dem f??rst. Denne person har ingen e-post-adresse defineret. Dette program er udgivet under GNU Titel V??rkt??jslinje Total antal film: %s Forfilm Tyrkisk Type Url:  Anvend stavekontrol Brug TLS? Brug egenudviklet fil Anvend dette felt til at definere SMTP-serveren som du vil bruge til at sende e-post med. P?? *nix systemer b??r ??localhost?? virke. Alternativt kan du bruge din Internetleverand??rs SMTP-serveradresse. Brugernavn Version Videokodning Bes??g filminternetside Volume Vent et ??jeblik Se forfilmen ??r Ja Du kan ikke slette en film n??r den er udl??nt. Du har ingen film i din database Du har set alle film i din samling! Du b??r indtaste originaltitlen
 eller filmtitlen. Du b??r indtaste personens navn Din database er h??jst sandsynlig i SQLite2 format, konvereter den venligst til SQLite3 _Rediger _Fil _Hj??lp _Udl??n _V??rkt??jer _Vis tilf??j anf??rt navn til samlingslisten tilf??j anf??rt navn til volumelisten ascii (Engelsk)
 big5 (Kinesisk)
 big5hkscs (Kinesisk)
@@ -307,4 +306,4 @@
 utf_16_be (alle sprog (kun BMP))
 utf_16_le (alle sprog (kun BMP))
 utf_7 (alle sprog)
-utf_8 (alle sprog) backups Klassifikation Tryk her hvis filmen er returneret Deltaljer om samlingen kommentarer indeholder indeholder ikke starter ikke med nyt lydspor Sl?? denne udvidelse til Elementer per side filer iPod Notes eksport udvidelsesmodul iPod er ikke forbundet. ignor??r i er lig med er ikke lig med lektor ligesom Kun udl??nt l??nt til  Udl??ner film eller volume Login fejl minutter film n??ste Ingen ikke i ikke ligesom ikke kun udl??nte forrige fjern den valgte samling fjern den valgte volume kun sete starter med Undertekster m??rkater Kun usete volume detaljer med uden 
\ No newline at end of file
+utf_8 (alle sprog) backups Klassifikation Tryk her hvis filmen er returneret Deltaljer om samlingen kommentarer indeholder indeholder ikke starter ikke med nyt lydspor Elementer per side filer iPod Notes eksport udvidelsesmodul iPod er ikke forbundet. ignor??r i er lig med er ikke lig med lektor ligesom Kun udl??nt l??nt til  Udl??ner film eller volume Login fejl minutter film n??ste Ingen ikke i ikke ligesom ikke kun udl??nte forrige fjern den valgte samling fjern den valgte volume kun sete starter med Undertekster m??rkater Kun usete volume detaljer med uden 
\ No newline at end of file

Modified: trunk/i18n/de/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/el/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/en_GB/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/es/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/et/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/fa/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/fi/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/fr/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Added: trunk/i18n/gl/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)


Property changes on: trunk/i18n/gl/LC_MESSAGES/griffith.mo
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/i18n/hr/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/hu/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/id/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/it/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/ja/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/ko/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/lv/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/nb/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/nds/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/nl/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/oc/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/pl/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/ps/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/pt/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/pt_BR/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Added: trunk/i18n/ro/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)


Property changes on: trunk/i18n/ro/LC_MESSAGES/griffith.mo
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/i18n/ru/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/sk/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/sr/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/sv/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Added: trunk/i18n/th/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)


Property changes on: trunk/i18n/th/LC_MESSAGES/griffith.mo
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/i18n/tr/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/uk/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)

Modified: trunk/i18n/zh_CN/LC_MESSAGES/griffith.mo
===================================================================
(Binary files differ)



From lanus at mail.berlios.de  Sun Feb  6 21:51:20 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sun,  6 Feb 2011 21:51:20 +0100
Subject: [Griffith-svn] r1526 - trunk
Message-ID: <20110206205120.4F7B548138B@sheep.berlios.de>

Author: lanus
Date: 2011-02-06 21:51:19 +0100 (Sun, 06 Feb 2011)
New Revision: 1526

Added:
   trunk/maclauncher.sh
Log:
Added MacOSX launcher to fix application name in menubar and icon.

Added: trunk/maclauncher.sh
===================================================================
--- trunk/maclauncher.sh	                        (rev 0)
+++ trunk/maclauncher.sh	2011-02-06 20:51:19 UTC (rev 1526)
@@ -0,0 +1,33 @@
+#!/bin/sh
+
+# We need this to get the application path
+name="`basename $0`"
+tmp="`pwd`/$0"
+tmp="`dirname $tmp`"
+bundle="`dirname $tmp`"
+bundle_contents="$bundle"
+bundle_res="$bundle_contents"/Resources
+bundle_lib="$bundle_res"/lib
+bundle_bin="$bundle_res"/bin
+bundle_data="$bundle_res"/share
+bundle_etc="$bundle_res"/etc
+
+# We need to export the paths so that GTK works well
+export PYTHONPATH="/Library/gtk/lib/python2.6/site-packages/"
+export PYTHON="$bundle_contents/MacOS/python"
+PYTHON="$bundle_contents/MacOS/python"
+export VERSIONER_PYTHON_PREFER_32_BIT=yes
+export GDK_PIXBUF_MODULE_FILE="/Library/gtk/etc/gtk-2.0/gdk-pixbuf.loaders"
+export GTK2_RC_FILES="/Library/gtk/etc/gtk-2.0/gtkrc"
+export GTK_DATA_PREFIX="/Library/gtk"
+export GTK_EXE_PREFIX="/Library/gtk"
+export GTK_IM_MODULE_FILE="/Library/gtk/etc/gtk-2.0/gtk.immodules"
+export GTK_PATH="/Library/gtk"
+export XDG_DATA_DIRS="/Library/gtk/share"
+
+# We need a UTF-8 locale.
+export LANG="en_US.UTF-8"
+export LC_ALL="en_US.UTF-8"
+
+# Here we call the python script
+exec $PYTHON "$bundle_contents/Resources/griffith"
\ No newline at end of file


Property changes on: trunk/maclauncher.sh
___________________________________________________________________
Added: svn:executable
   + *



From lanus at mail.berlios.de  Sun Feb  6 22:36:55 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Sun,  6 Feb 2011 22:36:55 +0100
Subject: [Griffith-svn] r1527 - in trunk: . lib
Message-ID: <20110206213655.4FE7D48138B@sheep.berlios.de>

Author: lanus
Date: 2011-02-06 22:36:54 +0100 (Sun, 06 Feb 2011)
New Revision: 1527

Modified:
   trunk/AUTHORS
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/backup.py
Log:
Fixed creating a new database and restoring backups under Mac OS X.

Modified: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2011-02-06 20:51:19 UTC (rev 1526)
+++ trunk/AUTHORS	2011-02-06 21:36:54 UTC (rev 1527)
@@ -20,6 +20,7 @@
 * CSFD movie plugin
 
 Michael Jahn <mikej06 at hotmail.com>
+* Programmer
 * Movie plugins: DVDEmpire, DVD-Palace, FilmDb, FilmeVonAZ, IMDb-de, Kino.de, Zelluloid
 
 Jessica Katharina Parth <Jessica.K.P at women-at-work.org>
@@ -28,3 +29,6 @@
 
 dragonskulle <dragonskulle at gmail.com>:
 * seen / unseen icons
+
+Ivo Nunes <netherblood at gmail.com>
+* Programmer

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-06 20:51:19 UTC (rev 1526)
+++ trunk/ChangeLog	2011-02-06 21:36:54 UTC (rev 1527)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-06  Ivo Nunes
+	* Fixed creating a new database and restoring backups under Mac OS X
+
 2011-02-05  Vasco Nunes
 	* [#703576] no automatic refresh after get back a dvd
 	* Sync mac menubar when menu checkMenuItems are changed

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-06 20:51:19 UTC (rev 1526)
+++ trunk/griffith	2011-02-06 21:36:54 UTC (rev 1527)
@@ -1342,41 +1342,11 @@
 	    if gutils.questionmac(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
 	        log.debug('NEW DATABASE')
 	        if gutils.questionmac(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
-	            from sqlalchemy import select
-		    from sql import GriffithSQL
-		    from delete import delete_poster_from_cache
-		    # delete images
-		    posters_dir = self.locations['posters']
-		    # NOTE: only used images are removed (posters are shared between various db)
-		    log.debug('removing old images...')
-
-		    posters = self.db.session.query(db.Movie.poster_md5).all()
-		    for poster in posters:
-			delete_poster_from_cache(poster[0], posters_dir)
-
-		    log.debug('dropping old tables...')
-		    self.db.session.rollback() # cancel all pending operations
-		    db.metadata.drop_all(self.db.session.bind.engine)
-		    #from sqlalchemy.orm import clear_mappers
-		    #clear_mappers()
-		    # disposing current db connection
-		    self.db.dispose()
-		    # dispose isn't enough here, I don't know why, but unlink fails
-		    # but I think unlink should not be necessary because all tables are dropped
-		    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
-		    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
-		    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
-		    #        self.config.set('file', 'griffith.db', section='database')
-		    #	 create/connect db
-		    log.debug('creating new ones...')
-		    self.db = GriffithSQL(self.config, self.griffith_dir)
-		    self.clear_details()
-		    self.total = 0
-		    self.count_statusbar()
-		    self.treemodel.clear()
-		    from initialize import dictionaries, people_treeview
-		    dictionaries(self)
-		    people_treeview(self)
+		    from os import system
+		    system("rm -R ~/.griffith")
+		    log.debug("Deleting database")
+		    python = sys.executable
+		    os.execl(python, python, * sys.argv)
 	    
 	else:	
 	    if gutils.question(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-06 20:51:19 UTC (rev 1526)
+++ trunk/lib/backup.py	2011-02-06 21:36:54 UTC (rev 1527)
@@ -306,11 +306,17 @@
             self.config = tmp_config
             self.config.save()
 
-        dictionaries(self)
-        people_treeview(self)
-        # let's refresh the treeview
-        self.clear_details()
-        self.populate_treeview()
+        if mac:
+	    log.debug("Restoring database")
+            import sys
+	    python = sys.executable
+	    os.execl(python, python, * sys.argv)
+        else:
+            dictionaries(self)
+            people_treeview(self)
+            # let's refresh the treeview
+            self.clear_details()
+            self.populate_treeview()
         #gutils.info(_("Databases merged!\n\nProcessed movies: %s\nMerged movies: %s"%(movies, merged)), self.widgets['window'])
         if mac:
             gutils.infomac("Backup restored")



From lanus at mail.berlios.de  Mon Feb  7 15:41:35 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Mon,  7 Feb 2011 15:41:35 +0100
Subject: [Griffith-svn] r1528 - in trunk: . lib/plugins/export
Message-ID: <20110207144135.51FCC481391@sheep.berlios.de>

Author: lanus
Date: 2011-02-07 15:41:34 +0100 (Mon, 07 Feb 2011)
New Revision: 1528

Modified:
   trunk/ChangeLog
   trunk/lib/plugins/export/PluginExportCSV.py
   trunk/lib/plugins/export/PluginExportPDF.py
   trunk/lib/plugins/export/PluginExportXML.py
   trunk/lib/plugins/export/PluginExportiPod.py
   trunk/lib/plugins/export/__init__.py
Log:
Fixed exporting under Mac OS X.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/ChangeLog	2011-02-07 14:41:34 UTC (rev 1528)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-07  Ivo Nunes
+	* Fixed exporting under Mac OS X
+
 2011-02-06  Ivo Nunes
 	* Fixed creating a new database and restoring backups under Mac OS X
 

Modified: trunk/lib/plugins/export/PluginExportCSV.py
===================================================================
--- trunk/lib/plugins/export/PluginExportCSV.py	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/lib/plugins/export/PluginExportCSV.py	2011-02-07 14:41:34 UTC (rev 1528)
@@ -27,8 +27,18 @@
 import gutils
 import db
 from plugins.export import Base
+from platform import system
 
+mac = False
+if system() == "Darwin":
+    mac = True
 
+try:
+    import EasyDialogs
+except:
+    pass
+
+
 class ExportPlugin(Base):
     name = "CSV"
     description = _("Full CSV list export plugin")
@@ -46,27 +56,37 @@
         basedir = None
         if self.config is not None:
             basedir = self.config.get('export_dir', None, section='export-csv')
-        if not basedir:
-            filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name='griffith_list.csv')
+        if mac:
+            filename = EasyDialogs.AskFileForSave()
+            filename = filename + ".csv"
         else:
-            filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE,gtk.RESPONSE_OK), name='griffith_list.csv', folder=basedir)
-        if filename and filename[0]:
-            if self.config is not None and filename[1]:
-                self.config.set('export_dir', filename[1], section='export-csv')
-                self.config.save()
-            overwrite = None
-            if os.path.isfile(filename[0]):
-                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                    overwrite = True
-                else:
-                    overwrite = False
+            if not basedir:
+                filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name='griffith_list.csv')
+            else:
+                filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE,gtk.RESPONSE_OK), name='griffith_list.csv', folder=basedir)
+        if filename and filename[0] or filenamemac:
+            if mac:
+                overwrite = True
+            else:
+                if self.config is not None and filename[1]:
+                    self.config.set('export_dir', filename[1], section='export-csv')
+                    self.config.save()
+                overwrite = None
+                if os.path.isfile(filename[0]):
+                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                        overwrite = True
+                    else:
+                        overwrite = False
             
             if overwrite or overwrite is None:
                 movies = self.get_query().execute()
 
-                writer = csv.writer(file(filename[0], 'w'), dialect=csv.excel)
+                if mac:
+                    writer = csv.writer(file(filename, 'w'), dialect=csv.excel)
+                else:
+                    writer = csv.writer(file(filename[0], 'w'), dialect=csv.excel)
                 # write column header row
                 writer.writerow(self.fields_to_export)
                 # write data rows
@@ -75,5 +95,8 @@
                     for s in self.exported_columns:
                         t.append(movie[s])
                     writer.writerow(t)
-                gutils.info(_("%s file has been created.") % "CSV", self.parent_window)
+                if mac:
+                    EasyDialogs.Message("%s file has been created." % "CSV")
+                else:
+                    gutils.info(_("%s file has been created.") % "CSV", self.parent_window)
 

Modified: trunk/lib/plugins/export/PluginExportPDF.py
===================================================================
--- trunk/lib/plugins/export/PluginExportPDF.py	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/lib/plugins/export/PluginExportPDF.py	2011-02-07 14:41:34 UTC (rev 1528)
@@ -42,7 +42,17 @@
 import gutils
 import version
 from plugins.export import Base
+from platform import system
 
+mac = False
+if system() == "Darwin":
+    mac = True
+
+try:
+    import EasyDialogs
+except:
+    pass
+
 class ExportPlugin(Base):
     name = "PDF"
     description = _("PDF export plugin")
@@ -62,21 +72,29 @@
         basedir = None
         if not self.config is None:
             basedir = self.config.get('export_dir', None, section='export-pdf')
-        if basedir is None:
-            filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf")
+        if mac:
+            filename = EasyDialogs.AskFileForSave()
+            filename = filename + ".pdf"
         else:
-            filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf",folder=basedir)
+            if basedir is None:
+                filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf")
+            else:
+                filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf",folder=basedir)
         if filename is not False and filename[0]:
-            if not self.config is None and filename[1]:
-                self.config.set('export_dir', filename[1], section='export-pdf')
-                self.config.save()
-            overwrite = None
-            pdffilename = filename[0].decode('utf-8')
-            if os.path.isfile(pdffilename):
-                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                    overwrite = True
-                else:
-                    overwrite = False
+            if mac:
+                overwrite = True
+                pdffilename = filename.decode('utf-8')
+            else:
+                if not self.config is None and filename[1]:
+                    self.config.set('export_dir', filename[1], section='export-pdf')
+                    self.config.save()
+                overwrite = None
+                pdffilename = filename[0].decode('utf-8')
+                if os.path.isfile(pdffilename):
+                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                        overwrite = True
+                    else:
+                        overwrite = False
 
             if overwrite == True or overwrite is None:
                 # filename encoding
@@ -196,7 +214,10 @@
                         p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Normal'])
                         Story.append(p)
                 c.build(Story, onFirstPage=self.page_template, onLaterPages=self.page_template)
-                gutils.info(_('PDF has been created.'), self.parent_window)
+                if mac:
+                    EasyDialogs.Message("PDF has been created.")
+                else:
+                    gutils.info(_('PDF has been created.'), self.parent_window)
 
     def create_styles(self):
         self.styles = getSampleStyleSheet()

Modified: trunk/lib/plugins/export/PluginExportXML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportXML.py	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/lib/plugins/export/PluginExportXML.py	2011-02-07 14:41:34 UTC (rev 1528)
@@ -27,7 +27,17 @@
 import db
 import gutils
 from plugins.export import Base
+from platform import system
 
+mac = False
+if system() == "Darwin":
+    mac = True
+
+try:
+    import EasyDialogs
+except:
+    pass
+
 class ExportPlugin(Base):
     name = "XML"
     description = _("Full XML list export plugin")
@@ -43,26 +53,38 @@
         basedir = None
         if self.config is not None:
             basedir = self.config.get('export_dir', None, section='export-xml')
-        if basedir is None:
-            filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml')
+        if mac:
+            filename = EasyDialogs.AskFileForSave()
+            filename = filename + ".xml"
         else:
-            filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml',folder=basedir)
+            if basedir is None:
+                filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml')
+            else:
+                filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml',folder=basedir)
         if filename and filename[0]:
-            if self.config is not None and filename[1]:
-                self.config.set('export_dir', filename[1], section='export-xml')
-                self.config.save()
-            overwrite = None
-            if os.path.isfile(filename[0]):
-                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                    overwrite = True
-                else:
-                    overwrite = False
+            if mac:
+                overwrite = True
+            else:
+                if self.config is not None and filename[1]:
+                    self.config.set('export_dir', filename[1], section='export-xml')
+                    self.config.save()
+                overwrite = None
+                if os.path.isfile(filename[0]):
+                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                        overwrite = True
+                    else:
+                        overwrite = False
             
-            posterdir = os.path.join(os.path.dirname(filename[0]), 'posters')
-            if not os.path.exists(posterdir):
-                os.mkdir(posterdir)
+            if mac:
+                posterdir = os.path.join(os.path.dirname(filename), 'posters')
+                if not os.path.exists(posterdir):
+                    os.mkdir(posterdir)
+            else:
+                posterdir = os.path.join(os.path.dirname(filename[0]), 'posters')
+                if not os.path.exists(posterdir):
+                    os.mkdir(posterdir)
             
             if overwrite or overwrite is None:
                 # create document
@@ -107,10 +129,16 @@
                     
                 # write XML to file
                 xmldata = doc.toprettyxml(encoding='utf-8')
-                fp = open(filename[0], "w")
+                if mac:
+                    fp = open(filename, "w")
+                else:
+                    fp = open(filename[0], "w")
                 try:
                     fp.write(xmldata)
                 finally:
                     fp.close()
-                gutils.info( _("%s file has been created.")%"XML", self.parent_window)
+                if mac:
+                    EasyDialogs.Message("%s file has been created." % "XML")
+                else:
+                    gutils.info( _("%s file has been created.")%"XML", self.parent_window)
 

Modified: trunk/lib/plugins/export/PluginExportiPod.py
===================================================================
--- trunk/lib/plugins/export/PluginExportiPod.py	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/lib/plugins/export/PluginExportiPod.py	2011-02-07 14:41:34 UTC (rev 1528)
@@ -33,6 +33,11 @@
 import db
 from plugins.export import Base
 
+try:
+  import EasyDialogs
+except:
+  pass
+
 # TODO: bypass the 4Kb file limit on the iPod notes folder, splitting the file in multiple ones and linking them.
 
 class Path2iPod(object):
@@ -100,9 +105,9 @@
         
             if thisPath:
                 commands.getoutput('mv '+os.path.join(tmp_dir,"movies")+' "'+thisPath+'/Notes/"') # FIXME: WTF?
-                gutils.info(_("List successfully exported to iPod."), self.parent_window)
+                EasyDialogs.Message("List successfully exported to iPod.")
             else:
-                gutils.info(_("iPod is not connected."), self.parent_window)
+                EasyDialogs.Message("iPod is not connected.")
         # this is not a mac, lets save the file
         else:
             filename = gutils.file_chooser(_("Export a %s document")%"iPod", action=gtk.FILE_CHOOSER_ACTION_SAVE, \

Modified: trunk/lib/plugins/export/__init__.py
===================================================================
--- trunk/lib/plugins/export/__init__.py	2011-02-06 21:36:54 UTC (rev 1527)
+++ trunk/lib/plugins/export/__init__.py	2011-02-07 14:41:34 UTC (rev 1528)
@@ -27,6 +27,7 @@
 import gtk
 import xml.dom.minidom
 import os
+from platform import system
 
 import logging
 log = logging.getLogger("Griffith.%s" % __name__)
@@ -35,6 +36,15 @@
 import db
 from sql import update_whereclause
 
+mac = False
+if system() == "Darwin":
+    mac = True
+
+try:
+    import EasyDialogs
+except:
+    pass
+
 # detect all plugins:
 __all__ = [os.path.basename(x)[:-3] for x in glob.glob("%s/PluginExport*.py" % os.path.dirname(__file__))]
 
@@ -133,7 +143,10 @@
             self.export_to_document(doc, doc.documentElement)
             # write xml document to file
             self.export_document_to_file(doc, self.filepath)
-            gutils.info(_('%s file has been created.') % self.export_name, self.parent_window)
+            if mac:
+                EasyDialogs.Message("%s file has been created." % self.export_name)
+            else:    
+                gutils.info(_('%s file has been created.') % self.export_name, self.parent_window)
 
     def show_dialog(self):
         # shows a file dialog and sets self.filepath
@@ -141,32 +154,38 @@
         basedir = None
         if not self.config is None and not self.config_section is None:
             basedir = self.config.get('export_dir', None, section=self.config_section)
-        if basedir is None:
-            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename)
+        if mac:
+            self.filepath = EasyDialogs.AskFileForSave()
         else:
-            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename, folder=basedir)
-        if filenames[0]:
-            self.filepath = filenames[0]
-            if len(filenames) > 1:
-                self.dirpath = filenames[1]
+            if basedir is None:
+                filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename)
             else:
-                self.dirpath = os.path.dirname(self.filepath)
-            self.filename = os.path.basename(self.filepath)
-            if not self.config is None and self.dirpath and not self.config_section is None:
-                self.config.set('export_dir', self.dirpath, section=self.config_section)
-                self.config.save()
-            overwrite = None
-            if os.path.isfile(self.filepath):
-                if gutils.question(_('File exists. Do you want to overwrite it?'), self.parent_window):
-                    overwrite = True
+                filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename, folder=basedir)
+        if mac:
+            return True
+        else:
+            if filenames[0]:
+                self.filepath = filenames[0]
+                if len(filenames) > 1:
+                    self.dirpath = filenames[1]
                 else:
-                    overwrite = False
+                    self.dirpath = os.path.dirname(self.filepath)
+                self.filename = os.path.basename(self.filepath)
+                if not self.config is None and self.dirpath and not self.config_section is None:
+                    self.config.set('export_dir', self.dirpath, section=self.config_section)
+                    self.config.save()
+                overwrite = None
+                if os.path.isfile(self.filepath):
+                    if gutils.question(_('File exists. Do you want to overwrite it?'), self.parent_window):
+                       overwrite = True
+                    else:
+                       overwrite = False
                     
-            if overwrite == True or overwrite is None:
-                return True
-        return False
+                if overwrite == True or overwrite is None:
+                   return True
+            return False
 
     def export_document_to_file(self, document, filename):
         # write XML to file



From lanus at mail.berlios.de  Mon Feb  7 17:24:47 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Mon,  7 Feb 2011 17:24:47 +0100
Subject: [Griffith-svn] r1529 - trunk
Message-ID: <20110207162447.C7284481391@sheep.berlios.de>

Author: lanus
Date: 2011-02-07 17:24:47 +0100 (Mon, 07 Feb 2011)
New Revision: 1529

Modified:
   trunk/ChangeLog
   trunk/griffith
Log:
Changed the way Mac OS X creates a new database so that it doesn't open external applications.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-07 14:41:34 UTC (rev 1528)
+++ trunk/ChangeLog	2011-02-07 16:24:47 UTC (rev 1529)
@@ -5,6 +5,9 @@
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
 2011-02-07  Ivo Nunes
+	* Changed the way Mac OS X creates a new database so that it doesn't open external applications
+
+2011-02-07  Ivo Nunes
 	* Fixed exporting under Mac OS X
 
 2011-02-06  Ivo Nunes

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-07 14:41:34 UTC (rev 1528)
+++ trunk/griffith	2011-02-07 16:24:47 UTC (rev 1529)
@@ -1342,8 +1342,8 @@
 	    if gutils.questionmac(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
 	        log.debug('NEW DATABASE')
 	        if gutils.questionmac(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
-		    from os import system
-		    system("rm -R ~/.griffith")
+		    from shutil import rmtree
+		    rmtree(os.path.join(os.getenv('HOME'), '.griffith'))
 		    log.debug("Deleting database")
 		    python = sys.executable
 		    os.execl(python, python, * sys.argv)



From lanus at mail.berlios.de  Mon Feb  7 18:07:35 2011
From: lanus at mail.berlios.de (lanus at mail.berlios.de)
Date: Mon,  7 Feb 2011 18:07:35 +0100
Subject: [Griffith-svn] r1530 - trunk
Message-ID: <20110207170735.C34A2481391@sheep.berlios.de>

Author: lanus
Date: 2011-02-07 18:07:35 +0100 (Mon, 07 Feb 2011)
New Revision: 1530

Modified:
   trunk/griffith
Log:
Optimized the way Mac OS X creates a new database.

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-07 16:24:47 UTC (rev 1529)
+++ trunk/griffith	2011-02-07 17:07:35 UTC (rev 1530)
@@ -1343,7 +1343,7 @@
 	        log.debug('NEW DATABASE')
 	        if gutils.questionmac(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
 		    from shutil import rmtree
-		    rmtree(os.path.join(os.getenv('HOME'), '.griffith'))
+		    rmtree(os.path.expanduser('~/.griffith'))
 		    log.debug("Deleting database")
 		    python = sys.executable
 		    os.execl(python, python, * sys.argv)



From iznogoud at mail.berlios.de  Tue Feb  8 01:12:39 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Tue,  8 Feb 2011 01:12:39 +0100
Subject: [Griffith-svn] r1531 - in trunk: . lib
Message-ID: <20110208001240.1B702481391@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-08 01:12:39 +0100 (Tue, 08 Feb 2011)
New Revision: 1531

Modified:
   trunk/griffith
   trunk/lib/gutils.py
Log:
some code cleanup.

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-07 17:07:35 UTC (rev 1530)
+++ trunk/griffith	2011-02-08 00:12:39 UTC (rev 1531)
@@ -52,7 +52,9 @@
 # end macosx
 
 # check dependencies
+
 import gutils
+
 (required, extra) = gutils.get_dependencies()
 missing = []
 for i in required:
@@ -72,7 +74,6 @@
 
 # other imports
 import gtk
-
 import add
 import config
 import db
@@ -141,8 +142,8 @@
         self.initialized = True
         
         # macosx integration
-        #hide gtk menubar and implement a native Cocoa replacement
-        #using gtk_osxapplication 
+        # hide gtk menubar and implement a native Cocoa replacement
+        # using gtk_osxapplication 
         if self.mac:
             import gtk_osxapplication  
             self.macapp = gtk_osxapplication.OSXApplication()
@@ -215,11 +216,11 @@
 
     def destroy(self, widget, data=None):
         self.save_state()
-        #macosx - macosx integration fails with gtk.main_quit()
-        #this is just a dirty workaround
+        # macosx - macosx integration fails with gtk.main_quit()
+        # this is just a dirty workaround
         if self.mac:
-        	sys.exit(0)
-        #end macosx
+            sys.exit(0)
+        # end macosx
         gtk.main_quit()
 
     def on_configure(self, widget, data=None):
@@ -604,6 +605,7 @@
 
     def on_am_lang_add_clicked(self, widget):
         self.create_language_row()
+        
     def on_am_lang_remove_clicked(self, widget):
         treeselection = self.widgets['add']['lang_treeview'].get_selection()
         if treeselection:
@@ -1024,32 +1026,14 @@
         create(self)
 
     def restore(self, *args):
-	if self.mac:
-	    if gutils.questionmac(_("""Are you sure you want to restore?
-Your current movie collection will be replaced.
-You can't undo this operation."""), self.widgets['window']):
-		from backup import restore
-		restore(self)
-	else:
-	    if gutils.question(_("""Are you sure you want to restore?
-Your current movie collection will be replaced.
-You can't undo this operation."""), self.widgets['window']):
-		from backup import restore
-		restore(self)
+        if gutils.question(_("""Are you sure you want to restore? Your current movie collection will be replaced. You can't undo this operation."""), self.widgets['window']):
+            from backup import restore
+            restore(self)
 
     def merge(self, *args):
-        if self.mac:
-	    if gutils.questionmac(_("""Are you sure you want to merge?
-Your current movie collection will be merged with a backup.
-You can't undo this operation."""), self.widgets['window']):
-		from backup import restore
-		restore(self, merge=True)
-	else:
-	    if gutils.question(_("""Are you sure you want to merge?
-Your current movie collection will be merged with a backup.
-You can't undo this operation."""), self.widgets['window']):
-		from backup import restore
-		restore(self, merge=True)
+        if gutils.question(_("""Are you sure you want to merge? Your current movie collection will be merged with a backup. You can't undo this operation."""), self.widgets['window']):
+            from backup import restore
+            restore(self, merge=True)
 
     # cover ---------------------------------------------------------------
 
@@ -1338,56 +1322,51 @@
 
     def new_dbb(self, *args):
         """initializes a new Griffith Database file"""
-	if self.mac:
-	    if gutils.questionmac(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
-	        log.debug('NEW DATABASE')
-	        if gutils.questionmac(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
-		    from shutil import rmtree
-		    rmtree(os.path.expanduser('~/.griffith'))
-		    log.debug("Deleting database")
-		    python = sys.executable
-		    os.execl(python, python, * sys.argv)
-	    
-	else:	
-	    if gutils.question(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
-	        log.debug('NEW DATABASE')
-	        if gutils.question(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
-	            from sqlalchemy import select
-		    from sql import GriffithSQL
-		    from delete import delete_poster_from_cache
-		    # delete images
-		    posters_dir = self.locations['posters']
-		    # NOTE: only used images are removed (posters are shared between various db)
-		    log.debug('removing old images...')
+        if gutils.question(_('Are you sure you want to create a new database?\nYou will lose ALL your current data!'), self.widgets['window']):
+            log.debug('NEW DATABASE')
+            if gutils.question(_('Last chance!\nDo you confirm that you want\nto lose your current data?'), self.widgets['window']):
+                from sqlalchemy import select
+                from sql import GriffithSQL
+                from delete import delete_poster_from_cache
+                # TODO: change this! seems sqlalchemy are crashing under mac when creating new db...
+                if self.mac:
+                    from shutil import rmtree
+                    rmtree(os.path.expanduser('~/.griffith'))
+                    log.debug("Deleting database")
+                    python = sys.executable
+                    os.execl(python, python, * sys.argv)
+                else:
+                    # delete images
+                    posters_dir = self.locations['posters']
+                    # NOTE: only used images are removed (posters are shared between various db)
+                    log.debug('removing old images...')
+                    posters = self.db.session.query(db.Movie.poster_md5).all()
+                    for poster in posters:
+                        delete_poster_from_cache(poster[0], posters_dir)
+                    log.debug('dropping old tables...')
+                    self.db.session.rollback() # cancel all pending operations
+                    db.metadata.drop_all(self.db.session.bind.engine)
+                    #from sqlalchemy.orm import clear_mappers
+                    #clear_mappers()
+                    # disposing current db connection
+                    self.db.dispose()
+                    # dispose isn't enough here, I don't know why, but unlink fails
+                    # but I think unlink should not be necessary because all tables are dropped
+                    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
+                    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
+                    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
+                    #        self.config.set('file', 'griffith.db', section='database')
+                    #    create/connect db
+                    log.debug('creating new ones...')
+                    self.db = GriffithSQL(self.config, self.griffith_dir)
+                    self.clear_details()
+                    self.total = 0
+                    self.count_statusbar()
+                    self.treemodel.clear()
+                    from initialize import dictionaries, people_treeview
+                    dictionaries(self)
+                    people_treeview(self)
 
-		    posters = self.db.session.query(db.Movie.poster_md5).all()
-		    for poster in posters:
-			delete_poster_from_cache(poster[0], posters_dir)
-
-		    log.debug('dropping old tables...')
-		    self.db.session.rollback() # cancel all pending operations
-		    db.metadata.drop_all(self.db.session.bind.engine)
-		    #from sqlalchemy.orm import clear_mappers
-		    #clear_mappers()
-		    # disposing current db connection
-		    self.db.dispose()
-		    # dispose isn't enough here, I don't know why, but unlink fails
-		    # but I think unlink should not be necessary because all tables are dropped
-		    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
-		    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
-		    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
-		    #        self.config.set('file', 'griffith.db', section='database')
-		    #	 create/connect db
-		    log.debug('creating new ones...')
-		    self.db = GriffithSQL(self.config, self.griffith_dir)
-		    self.clear_details()
-		    self.total = 0
-		    self.count_statusbar()
-		    self.treemodel.clear()
-		    from initialize import dictionaries, people_treeview
-		    dictionaries(self)
-		    people_treeview(self)
-
     # key events ----------------------------------------------------------
 
     def on_key_press_event(self, widget, event):
@@ -1519,4 +1498,4 @@
     griffith = Griffith(home_dir, config)
     griffith.main()
 
-# vim: fdm=marker
+# vim: fdm=marker
\ No newline at end of file

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2011-02-07 17:07:35 UTC (rev 1530)
+++ trunk/lib/gutils.py	2011-02-08 00:12:39 UTC (rev 1531)
@@ -30,6 +30,8 @@
 import sys
 import webbrowser
 from StringIO import StringIO
+import platform
+
 try:
     import gtk
     import db
@@ -273,36 +275,33 @@
 
 
 def info(msg, parent=None):
-    dialog = gtk.MessageDialog(parent,
-            gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
-            gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
-    dialog.set_skip_taskbar_hint(False)
-    dialog.run()
-    dialog.destroy()
+    if platform.system() == 'Darwin':
+        EasyDialogs.Message(str(msg))
+    else:
+        dialog = gtk.MessageDialog(parent,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
+        dialog.set_skip_taskbar_hint(False)
+        dialog.run()
+        dialog.destroy()
 
-
 def question(msg, window=None):
-    dialog = gtk.MessageDialog(window,
+    if platform.system() == 'Darwin':
+        response = EasyDialogs.AskYesNoCancel(str(msg))
+        if response == -1: response = 0
+        return response
+    else:
+        dialog = gtk.MessageDialog(window,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
             gtk.MESSAGE_QUESTION, gtk.BUTTONS_NONE, msg)
-    dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
+        dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
             gtk.STOCK_NO, gtk.RESPONSE_NO)
-    dialog.set_default_response(gtk.RESPONSE_NO)
-    dialog.set_skip_taskbar_hint(False)
-    response = dialog.run()
-    dialog.destroy()
-    return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
+        dialog.set_default_response(gtk.RESPONSE_NO)
+        dialog.set_skip_taskbar_hint(False)
+        response = dialog.run()
+        dialog.destroy()
+        return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
     
-
-def questionmac(msg, window=None):
-    response = EasyDialogs.AskYesNoCancel(str(msg))
-    if response == -1:
-        response = 0
-    return response
-
-def infomac(msg, parent=None):
-    EasyDialogs.Message(str(msg))
-    
 def warningmac(msg, parent=None):
     EasyDialogs.Message(str(msg))
     
@@ -805,4 +804,4 @@
     if pagesize < 1024:
         pagesize = 1024
 
-    return pagesize
+    return pagesize
\ No newline at end of file



From iznogoud at mail.berlios.de  Tue Feb  8 02:58:47 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Tue,  8 Feb 2011 02:58:47 +0100
Subject: [Griffith-svn] r1532 - trunk/lib
Message-ID: <20110208015848.03B57481391@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-08 02:58:47 +0100 (Tue, 08 Feb 2011)
New Revision: 1532

Modified:
   trunk/lib/backup.py
Log:
code cleanup

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-08 00:12:39 UTC (rev 1531)
+++ trunk/lib/backup.py	2011-02-08 01:58:47 UTC (rev 1532)
@@ -58,7 +58,6 @@
     
     if mac:
         filename = EasyDialogs.AskFileForSave()
-
     else:
         default_name = "%s_backup_%s.zip" % (self.config.get('name', 'griffith', section='database'),\
                         datetime.date.isoformat(datetime.datetime.now()))
@@ -71,7 +70,6 @@
         
         if mac:
             zipfilename = filename + ".zip"
-            
         else:
             zipfilename = filename[0].decode('utf-8')
             log.debug('Backup filename: %s', zipfilename)
@@ -88,10 +86,7 @@
                     log.debug('Creating zip file without compression')
                     mzip = zipfile.ZipFile(zipfilename, 'w')
             except:
-                if mac:
-                    gutils.errormac("Error creating backup")
-                else:
-                    gutils.error(_("Error creating backup"), self.widgets['window'])
+                gutils.error(_("Error creating backup"), self.widgets['window'])
                 return False
             log.debug('Preparing data and saving it to the zip archive')
             if self.db.session.bind.engine.name == 'sqlite':
@@ -131,10 +126,7 @@
                     # disposing the temporary db connection before rmtree and in finally block to avoid locked db file
                     tmp_engine.dispose()
                     rmtree(tmp_dir)
-            if mac:
-                gutils.infomac("Backup has been created")
-            else:
-                gutils.info(_("Backup has been created"), self.widgets['window'])
+            gutils.info(_("Backup has been created"), self.widgets['window'])
 
 
 @gutils.popup_message(_('Restoring database...'))
@@ -217,17 +209,16 @@
     * SQLite2 *.gri file
     * SQLite3 *.db file
     """
-
     # let user select a backup file
     if mac:
         filename = EasyDialogs.AskFileForOpen()
     else:
         filename = gutils.file_chooser(_("Restore Griffith backup"), \
-                        action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
-                        buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))[0]
-        if not filename:
-            log.debug('no file selected')
-            return False
+                    action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
+                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))
+    if not filename:
+        log.debug('no file selected')
+        return False
 
     try:
         tmp_db = None
@@ -238,10 +229,7 @@
             try:
                 zip_file = zipfile.ZipFile(filename, 'r')
             except:
-                if mac:
-                    gutils.errormac("Can't read backup file")
-                else:
-                    gutils.error(_("Can't read backup file"), self.widgets['window'])
+                gutils.error(_("Can't read backup file"), self.widgets['window'])
                 return False
 
             old_config_file = False
@@ -307,10 +295,10 @@
             self.config.save()
 
         if mac:
-	    log.debug("Restoring database")
+            log.debug("Restoring database")
             import sys
-	    python = sys.executable
-	    os.execl(python, python, * sys.argv)
+            python = sys.executable
+            os.execl(python, python, * sys.argv)
         else:
             dictionaries(self)
             people_treeview(self)
@@ -318,10 +306,7 @@
             self.clear_details()
             self.populate_treeview()
         #gutils.info(_("Databases merged!\n\nProcessed movies: %s\nMerged movies: %s"%(movies, merged)), self.widgets['window'])
-        if mac:
-            gutils.infomac("Backup restored")
-        else:
-            gutils.info(_("Backup restored"), self.widgets['window'])
+        gutils.info(_("Backup restored"), self.widgets['window'])
     except:
         log.exception('')
         raise



From iznogoud at mail.berlios.de  Tue Feb  8 22:04:38 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Tue,  8 Feb 2011 22:04:38 +0100
Subject: [Griffith-svn] r1533 - in trunk: . lib lib/plugins/export
Message-ID: <20110208210438.93D3248138D@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-08 22:04:38 +0100 (Tue, 08 Feb 2011)
New Revision: 1533

Modified:
   trunk/griffith
   trunk/lib/backup.py
   trunk/lib/gutils.py
   trunk/lib/main_treeview.py
   trunk/lib/plugins/export/PluginExportCSV.py
   trunk/lib/plugins/export/PluginExportPDF.py
   trunk/lib/plugins/export/PluginExportXML.py
   trunk/lib/plugins/export/PluginExportiPod.py
   trunk/lib/plugins/export/__init__.py
Log:
macosx menubar and dialogs integration removed (igemacintegration libs are quite buggy). using native gtk ones under mac.

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/griffith	2011-02-08 21:04:38 UTC (rev 1533)
@@ -140,21 +140,6 @@
         initialize.people_treeview(self)
         initialize.web_results(self)
         self.initialized = True
-        
-        # macosx integration
-        # hide gtk menubar and implement a native Cocoa replacement
-        # using gtk_osxapplication 
-        if self.mac:
-            import gtk_osxapplication  
-            self.macapp = gtk_osxapplication.OSXApplication()
-            self.macapp.connect("NSApplicationBlockTermination", self.destroy)      
-            gtk.Widget.hide(self.widgets['menu']['menubar']);
-            self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
-            self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
-            self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
-            self.macapp.ready()
-        # end macosx integration 
-
         self.restore_state()
         self.clear_details()
         self.populate_treeview()
@@ -216,11 +201,6 @@
 
     def destroy(self, widget, data=None):
         self.save_state()
-        # macosx - macosx integration fails with gtk.main_quit()
-        # this is just a dirty workaround
-        if self.mac:
-            sys.exit(0)
-        # end macosx
         gtk.main_quit()
 
     def on_configure(self, widget, data=None):
@@ -1328,44 +1308,36 @@
                 from sqlalchemy import select
                 from sql import GriffithSQL
                 from delete import delete_poster_from_cache
-                # TODO: change this! seems sqlalchemy are crashing under mac when creating new db...
-                if self.mac:
-                    from shutil import rmtree
-                    rmtree(os.path.expanduser('~/.griffith'))
-                    log.debug("Deleting database")
-                    python = sys.executable
-                    os.execl(python, python, * sys.argv)
-                else:
-                    # delete images
-                    posters_dir = self.locations['posters']
-                    # NOTE: only used images are removed (posters are shared between various db)
-                    log.debug('removing old images...')
-                    posters = self.db.session.query(db.Movie.poster_md5).all()
-                    for poster in posters:
-                        delete_poster_from_cache(poster[0], posters_dir)
-                    log.debug('dropping old tables...')
-                    self.db.session.rollback() # cancel all pending operations
-                    db.metadata.drop_all(self.db.session.bind.engine)
-                    #from sqlalchemy.orm import clear_mappers
-                    #clear_mappers()
-                    # disposing current db connection
-                    self.db.dispose()
-                    # dispose isn't enough here, I don't know why, but unlink fails
-                    # but I think unlink should not be necessary because all tables are dropped
-                    #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
-                    #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
-                    #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
-                    #        self.config.set('file', 'griffith.db', section='database')
-                    #    create/connect db
-                    log.debug('creating new ones...')
-                    self.db = GriffithSQL(self.config, self.griffith_dir)
-                    self.clear_details()
-                    self.total = 0
-                    self.count_statusbar()
-                    self.treemodel.clear()
-                    from initialize import dictionaries, people_treeview
-                    dictionaries(self)
-                    people_treeview(self)
+                # delete images
+                posters_dir = self.locations['posters']
+                # NOTE: only used images are removed (posters are shared between various db)
+                log.debug('removing old images...')
+                posters = self.db.session.query(db.Movie.poster_md5).all()
+                for poster in posters:
+                    delete_poster_from_cache(poster[0], posters_dir)
+                log.debug('dropping old tables...')
+                self.db.session.rollback() # cancel all pending operations
+                db.metadata.drop_all(self.db.session.bind.engine)
+                #from sqlalchemy.orm import clear_mappers
+                #clear_mappers()
+                # disposing current db connection
+                self.db.dispose()
+                # dispose isn't enough here, I don't know why, but unlink fails
+                # but I think unlink should not be necessary because all tables are dropped
+                #if self.config.get('type', 'sqlite', section='database') == 'sqlite':
+                #    os.unlink(os.path.join(self.locations['home'],self.config.get('name', 'griffith', section='database') + '.db'))
+                #    if self.config.get('file', 'griffith.db', section='database') == 'griffith.gri':
+                #        self.config.set('file', 'griffith.db', section='database')
+                #    create/connect db
+                log.debug('creating new ones...')
+                self.db = GriffithSQL(self.config, self.griffith_dir)
+                self.clear_details()
+                self.total = 0
+                self.count_statusbar()
+                self.treemodel.clear()
+                from initialize import dictionaries, people_treeview
+                dictionaries(self)
+                people_treeview(self)
 
     # key events ----------------------------------------------------------
 

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/backup.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -45,37 +45,27 @@
 except:
     pass
     
-mac = True if system() == "Darwin" else False
-
 log = logging.getLogger('Griffith')
 
-
 def create(self):
     """perform a compressed griffith database/posters/preferences backup"""
     #if self.db.session.bind.engine.name != 'sqlite':
     #    gutils.error(_("Backup function is available only for SQLite engine for now"), self.widgets['window'])
     #    return False
     
-    if mac:
-        filename = EasyDialogs.AskFileForSave()
-    else:
-        default_name = "%s_backup_%s.zip" % (self.config.get('name', 'griffith', section='database'),\
-                        datetime.date.isoformat(datetime.datetime.now()))
-        filename = gutils.file_chooser(_("Save Griffith backup"), \
-            action=gtk.FILE_CHOOSER_ACTION_SAVE, name=default_name, \
-            buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK))
+    default_name = "%s_backup_%s.zip" % (self.config.get('name', 'griffith', section='database'),\
+                    datetime.date.isoformat(datetime.datetime.now()))
+    filename = gutils.file_chooser(_("Save Griffith backup"), \
+        action=gtk.FILE_CHOOSER_ACTION_SAVE, name=default_name, \
+        buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK))
 
     if filename and filename[0]:
         proceed = True
-        
-        if mac:
-            zipfilename = filename + ".zip"
-        else:
-            zipfilename = filename[0].decode('utf-8')
-            log.debug('Backup filename: %s', zipfilename)
-            if os.path.isfile(zipfilename):
-                if not gutils.question(_("File exists. Do you want to overwrite it?"), window=self.widgets['window']):
-                    proceed = False
+        zipfilename = filename[0].decode('utf-8')
+        log.debug('Backup filename: %s', zipfilename)
+        if os.path.isfile(zipfilename):
+            if not gutils.question(_("File exists. Do you want to overwrite it?"), window=self.widgets['window']):
+                proceed = False
 
         if proceed:
             try:
@@ -210,12 +200,9 @@
     * SQLite3 *.db file
     """
     # let user select a backup file
-    if mac:
-        filename = EasyDialogs.AskFileForOpen()
-    else:
-        filename = gutils.file_chooser(_("Restore Griffith backup"), \
-                    action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))
+    filename = gutils.file_chooser(_("Restore Griffith backup"), \
+                action=gtk.FILE_CHOOSER_ACTION_OPEN, backup=True, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))
     if not filename:
         log.debug('no file selected')
         return False
@@ -293,13 +280,6 @@
             tmp_config._file = self.config._file
             self.config = tmp_config
             self.config.save()
-
-        if mac:
-            log.debug("Restoring database")
-            import sys
-            python = sys.executable
-            os.execl(python, python, * sys.argv)
-        else:
             dictionaries(self)
             people_treeview(self)
             # let's refresh the treeview

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/gutils.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -275,38 +275,24 @@
 
 
 def info(msg, parent=None):
-    if platform.system() == 'Darwin':
-        EasyDialogs.Message(str(msg))
-    else:
-        dialog = gtk.MessageDialog(parent,
-                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
-                gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
-        dialog.set_skip_taskbar_hint(False)
-        dialog.run()
-        dialog.destroy()
+    dialog = gtk.MessageDialog(parent,
+            gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+            gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
+    dialog.set_skip_taskbar_hint(False)
+    dialog.run()
+    dialog.destroy()
 
 def question(msg, window=None):
-    if platform.system() == 'Darwin':
-        response = EasyDialogs.AskYesNoCancel(str(msg))
-        if response == -1: response = 0
-        return response
-    else:
-        dialog = gtk.MessageDialog(window,
-            gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
-            gtk.MESSAGE_QUESTION, gtk.BUTTONS_NONE, msg)
-        dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
-            gtk.STOCK_NO, gtk.RESPONSE_NO)
-        dialog.set_default_response(gtk.RESPONSE_NO)
-        dialog.set_skip_taskbar_hint(False)
-        response = dialog.run()
-        dialog.destroy()
-        return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
-    
-def warningmac(msg, parent=None):
-    EasyDialogs.Message(str(msg))
-    
-def errormac(msg, parent=None):
-    EasyDialogs.Message(str(msg))
+    dialog = gtk.MessageDialog(window,
+        gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+        gtk.MESSAGE_QUESTION, gtk.BUTTONS_NONE, msg)
+    dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
+        gtk.STOCK_NO, gtk.RESPONSE_NO)
+    dialog.set_default_response(gtk.RESPONSE_NO)
+    dialog.set_skip_taskbar_hint(False)
+    response = dialog.run()
+    dialog.destroy()
+    return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
 
 def popup_message(message):
     """shows popup message while executing decorated function"""

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/main_treeview.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -498,8 +498,6 @@
     if self.total:
         self.widgets['treeview'].set_cursor_on_cell(0)
     self.count_statusbar()
-    
-    if self.mac: self.macapp.sync_menubar()
 #}}}
 
 def addmovie(self, movie): #{{{

Modified: trunk/lib/plugins/export/PluginExportCSV.py
===================================================================
--- trunk/lib/plugins/export/PluginExportCSV.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/plugins/export/PluginExportCSV.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -27,18 +27,8 @@
 import gutils
 import db
 from plugins.export import Base
-from platform import system
 
-mac = False
-if system() == "Darwin":
-    mac = True
 
-try:
-    import EasyDialogs
-except:
-    pass
-
-
 class ExportPlugin(Base):
     name = "CSV"
     description = _("Full CSV list export plugin")
@@ -56,37 +46,27 @@
         basedir = None
         if self.config is not None:
             basedir = self.config.get('export_dir', None, section='export-csv')
-        if mac:
-            filename = EasyDialogs.AskFileForSave()
-            filename = filename + ".csv"
+        if not basedir:
+            filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name='griffith_list.csv')
         else:
-            if not basedir:
-                filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name='griffith_list.csv')
-            else:
-                filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE,gtk.RESPONSE_OK), name='griffith_list.csv', folder=basedir)
-        if filename and filename[0] or filenamemac:
-            if mac:
-                overwrite = True
-            else:
-                if self.config is not None and filename[1]:
-                    self.config.set('export_dir', filename[1], section='export-csv')
-                    self.config.save()
-                overwrite = None
-                if os.path.isfile(filename[0]):
-                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                        overwrite = True
-                    else:
-                        overwrite = False
+            filename = gutils.file_chooser(_("Export a %s document")%"CSV", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE,gtk.RESPONSE_OK), name='griffith_list.csv', folder=basedir)
+        if filename and filename[0]:
+            if self.config is not None and filename[1]:
+                self.config.set('export_dir', filename[1], section='export-csv')
+                self.config.save()
+            overwrite = None
+            if os.path.isfile(filename[0]):
+                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                    overwrite = True
+                else:
+                    overwrite = False
             
             if overwrite or overwrite is None:
                 movies = self.get_query().execute()
 
-                if mac:
-                    writer = csv.writer(file(filename, 'w'), dialect=csv.excel)
-                else:
-                    writer = csv.writer(file(filename[0], 'w'), dialect=csv.excel)
+                writer = csv.writer(file(filename[0], 'w'), dialect=csv.excel)
                 # write column header row
                 writer.writerow(self.fields_to_export)
                 # write data rows
@@ -95,8 +75,5 @@
                     for s in self.exported_columns:
                         t.append(movie[s])
                     writer.writerow(t)
-                if mac:
-                    EasyDialogs.Message("%s file has been created." % "CSV")
-                else:
-                    gutils.info(_("%s file has been created.") % "CSV", self.parent_window)
+                gutils.info(_("%s file has been created.") % "CSV", self.parent_window)
 

Modified: trunk/lib/plugins/export/PluginExportPDF.py
===================================================================
--- trunk/lib/plugins/export/PluginExportPDF.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/plugins/export/PluginExportPDF.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -42,17 +42,7 @@
 import gutils
 import version
 from plugins.export import Base
-from platform import system
 
-mac = False
-if system() == "Darwin":
-    mac = True
-
-try:
-    import EasyDialogs
-except:
-    pass
-
 class ExportPlugin(Base):
     name = "PDF"
     description = _("PDF export plugin")
@@ -72,29 +62,21 @@
         basedir = None
         if not self.config is None:
             basedir = self.config.get('export_dir', None, section='export-pdf')
-        if mac:
-            filename = EasyDialogs.AskFileForSave()
-            filename = filename + ".pdf"
+        if basedir is None:
+            filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf")
         else:
-            if basedir is None:
-                filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf")
-            else:
-                filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf",folder=basedir)
+            filename = gutils.file_chooser(_("Export a PDF"), action=gtk.FILE_CHOOSER_ACTION_SAVE, buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name="griffith_simple_list.pdf",folder=basedir)
         if filename is not False and filename[0]:
-            if mac:
-                overwrite = True
-                pdffilename = filename.decode('utf-8')
-            else:
-                if not self.config is None and filename[1]:
-                    self.config.set('export_dir', filename[1], section='export-pdf')
-                    self.config.save()
-                overwrite = None
-                pdffilename = filename[0].decode('utf-8')
-                if os.path.isfile(pdffilename):
-                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                        overwrite = True
-                    else:
-                        overwrite = False
+            if not self.config is None and filename[1]:
+                self.config.set('export_dir', filename[1], section='export-pdf')
+                self.config.save()
+            overwrite = None
+            pdffilename = filename[0].decode('utf-8')
+            if os.path.isfile(pdffilename):
+                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                    overwrite = True
+                else:
+                    overwrite = False
 
             if overwrite == True or overwrite is None:
                 # filename encoding
@@ -214,10 +196,7 @@
                         p = Paragraph(paragraph_text.decode(defaultEnc), self.styles['Normal'])
                         Story.append(p)
                 c.build(Story, onFirstPage=self.page_template, onLaterPages=self.page_template)
-                if mac:
-                    EasyDialogs.Message("PDF has been created.")
-                else:
-                    gutils.info(_('PDF has been created.'), self.parent_window)
+                gutils.info(_('PDF has been created.'), self.parent_window)
 
     def create_styles(self):
         self.styles = getSampleStyleSheet()

Modified: trunk/lib/plugins/export/PluginExportXML.py
===================================================================
--- trunk/lib/plugins/export/PluginExportXML.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/plugins/export/PluginExportXML.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -27,17 +27,7 @@
 import db
 import gutils
 from plugins.export import Base
-from platform import system
 
-mac = False
-if system() == "Darwin":
-    mac = True
-
-try:
-    import EasyDialogs
-except:
-    pass
-
 class ExportPlugin(Base):
     name = "XML"
     description = _("Full XML list export plugin")
@@ -53,38 +43,26 @@
         basedir = None
         if self.config is not None:
             basedir = self.config.get('export_dir', None, section='export-xml')
-        if mac:
-            filename = EasyDialogs.AskFileForSave()
-            filename = filename + ".xml"
+        if basedir is None:
+            filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml')
         else:
-            if basedir is None:
-                filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml')
-            else:
-                filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml',folder=basedir)
+            filename = gutils.file_chooser(_("Export a %s document")%"XML", action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK),name='griffith_list.xml',folder=basedir)
         if filename and filename[0]:
-            if mac:
-                overwrite = True
-            else:
-                if self.config is not None and filename[1]:
-                    self.config.set('export_dir', filename[1], section='export-xml')
-                    self.config.save()
-                overwrite = None
-                if os.path.isfile(filename[0]):
-                    if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
-                        overwrite = True
-                    else:
-                        overwrite = False
+            if self.config is not None and filename[1]:
+                self.config.set('export_dir', filename[1], section='export-xml')
+                self.config.save()
+            overwrite = None
+            if os.path.isfile(filename[0]):
+                if gutils.question(_("File exists. Do you want to overwrite it?"), self.parent_window):
+                    overwrite = True
+                else:
+                    overwrite = False
             
-            if mac:
-                posterdir = os.path.join(os.path.dirname(filename), 'posters')
-                if not os.path.exists(posterdir):
-                    os.mkdir(posterdir)
-            else:
-                posterdir = os.path.join(os.path.dirname(filename[0]), 'posters')
-                if not os.path.exists(posterdir):
-                    os.mkdir(posterdir)
+            posterdir = os.path.join(os.path.dirname(filename[0]), 'posters')
+            if not os.path.exists(posterdir):
+                os.mkdir(posterdir)
             
             if overwrite or overwrite is None:
                 # create document
@@ -129,16 +107,10 @@
                     
                 # write XML to file
                 xmldata = doc.toprettyxml(encoding='utf-8')
-                if mac:
-                    fp = open(filename, "w")
-                else:
-                    fp = open(filename[0], "w")
+                fp = open(filename[0], "w")
                 try:
                     fp.write(xmldata)
                 finally:
                     fp.close()
-                if mac:
-                    EasyDialogs.Message("%s file has been created." % "XML")
-                else:
-                    gutils.info( _("%s file has been created.")%"XML", self.parent_window)
+                gutils.info( _("%s file has been created.")%"XML", self.parent_window)
 

Modified: trunk/lib/plugins/export/PluginExportiPod.py
===================================================================
--- trunk/lib/plugins/export/PluginExportiPod.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/plugins/export/PluginExportiPod.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -33,11 +33,6 @@
 import db
 from plugins.export import Base
 
-try:
-  import EasyDialogs
-except:
-  pass
-
 # TODO: bypass the 4Kb file limit on the iPod notes folder, splitting the file in multiple ones and linking them.
 
 class Path2iPod(object):
@@ -105,9 +100,9 @@
         
             if thisPath:
                 commands.getoutput('mv '+os.path.join(tmp_dir,"movies")+' "'+thisPath+'/Notes/"') # FIXME: WTF?
-                EasyDialogs.Message("List successfully exported to iPod.")
+                gutils.info(_("List successfully exported to iPod."), self.parent_window)
             else:
-                EasyDialogs.Message("iPod is not connected.")
+                gutils.info(_("iPod is not connected."), self.parent_window)
         # this is not a mac, lets save the file
         else:
             filename = gutils.file_chooser(_("Export a %s document")%"iPod", action=gtk.FILE_CHOOSER_ACTION_SAVE, \

Modified: trunk/lib/plugins/export/__init__.py
===================================================================
--- trunk/lib/plugins/export/__init__.py	2011-02-08 01:58:47 UTC (rev 1532)
+++ trunk/lib/plugins/export/__init__.py	2011-02-08 21:04:38 UTC (rev 1533)
@@ -27,7 +27,6 @@
 import gtk
 import xml.dom.minidom
 import os
-from platform import system
 
 import logging
 log = logging.getLogger("Griffith.%s" % __name__)
@@ -36,15 +35,6 @@
 import db
 from sql import update_whereclause
 
-mac = False
-if system() == "Darwin":
-    mac = True
-
-try:
-    import EasyDialogs
-except:
-    pass
-
 # detect all plugins:
 __all__ = [os.path.basename(x)[:-3] for x in glob.glob("%s/PluginExport*.py" % os.path.dirname(__file__))]
 
@@ -143,10 +133,7 @@
             self.export_to_document(doc, doc.documentElement)
             # write xml document to file
             self.export_document_to_file(doc, self.filepath)
-            if mac:
-                EasyDialogs.Message("%s file has been created." % self.export_name)
-            else:    
-                gutils.info(_('%s file has been created.') % self.export_name, self.parent_window)
+            gutils.info(_('%s file has been created.') % self.export_name, self.parent_window)
 
     def show_dialog(self):
         # shows a file dialog and sets self.filepath
@@ -154,38 +141,32 @@
         basedir = None
         if not self.config is None and not self.config_section is None:
             basedir = self.config.get('export_dir', None, section=self.config_section)
-        if mac:
-            self.filepath = EasyDialogs.AskFileForSave()
+        if basedir is None:
+            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename)
         else:
-            if basedir is None:
-                filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename)
+            filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
+                buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename, folder=basedir)
+        if filenames[0]:
+            self.filepath = filenames[0]
+            if len(filenames) > 1:
+                self.dirpath = filenames[1]
             else:
-                filenames = gutils.file_chooser(_('Export a %s document') % self.export_name, action=gtk.FILE_CHOOSER_ACTION_SAVE, \
-                    buttons=(gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK), name=self.filename, folder=basedir)
-        if mac:
-            return True
-        else:
-            if filenames[0]:
-                self.filepath = filenames[0]
-                if len(filenames) > 1:
-                    self.dirpath = filenames[1]
+                self.dirpath = os.path.dirname(self.filepath)
+            self.filename = os.path.basename(self.filepath)
+            if not self.config is None and self.dirpath and not self.config_section is None:
+                self.config.set('export_dir', self.dirpath, section=self.config_section)
+                self.config.save()
+            overwrite = None
+            if os.path.isfile(self.filepath):
+                if gutils.question(_('File exists. Do you want to overwrite it?'), self.parent_window):
+                    overwrite = True
                 else:
-                    self.dirpath = os.path.dirname(self.filepath)
-                self.filename = os.path.basename(self.filepath)
-                if not self.config is None and self.dirpath and not self.config_section is None:
-                    self.config.set('export_dir', self.dirpath, section=self.config_section)
-                    self.config.save()
-                overwrite = None
-                if os.path.isfile(self.filepath):
-                    if gutils.question(_('File exists. Do you want to overwrite it?'), self.parent_window):
-                       overwrite = True
-                    else:
-                       overwrite = False
+                    overwrite = False
                     
-                if overwrite == True or overwrite is None:
-                   return True
-            return False
+            if overwrite == True or overwrite is None:
+                return True
+        return False
 
     def export_document_to_file(self, document, filename):
         # write XML to file



From mikej06 at mail.berlios.de  Thu Feb 10 21:38:43 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 10 Feb 2011 21:38:43 +0100
Subject: [Griffith-svn] r1534 - in trunk: . lib
Message-ID: <20110210203843.9F900481396@sheep.berlios.de>

Author: mikej06
Date: 2011-02-10 21:38:43 +0100 (Thu, 10 Feb 2011)
New Revision: 1534

Modified:
   trunk/ChangeLog
   trunk/lib/sql.py
Log:
[#716176] 0.12.1 No postgres support on Windows

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-08 21:04:38 UTC (rev 1533)
+++ trunk/ChangeLog	2011-02-10 20:38:43 UTC (rev 1534)
@@ -4,10 +4,12 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
-2011-02-07  Ivo Nunes
-	* Changed the way Mac OS X creates a new database so that it doesn't open external applications
 
+2011-02-10  Michael Jahn
+	* [#716176] 0.12.1 No postgres support on Windows
+
 2011-02-07  Ivo Nunes
+	* Changed the way Mac OS X creates a new database so that it doesn't open external applications
 	* Fixed exporting under Mac OS X
 
 2011-02-06  Ivo Nunes
@@ -16,17 +18,10 @@
 2011-02-05  Vasco Nunes
 	* [#703576] no automatic refresh after get back a dvd
 	* Sync mac menubar when menu checkMenuItems are changed
-	
-2011-02-05  Ivo Nunes
-    * Updated IMDb-pt plugin
-
-2011-02-05  Vasco Nunes
 	* Fixed about dialog on macosx
 
 2011-02-05  Ivo Nunes
     * Fixed and re-enabled Mac OS X UI Cocoa menu integration
-
-2011-02-05  Ivo Nunes
     * Mac OS X UI Cocoa menu integration temporarily disabled due to being broken - using native GTK
     * IMDB-pt plugin added
 

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2011-02-08 21:04:38 UTC (rev 1533)
+++ trunk/lib/sql.py	2011-02-10 20:38:43 UTC (rev 1534)
@@ -78,7 +78,13 @@
                 dbinitializingsql = 'PRAGMA page_size=' + str(get_filesystem_pagesize(sqlitefile))
             url = "sqlite:///%s" % sqlitefile
         elif config.get('type', section='database') == 'postgres':
-            url = "postgres://%(user)s:%(passwd)s@%(host)s:%(port)d/%(name)s" % conn_params
+            # sqlalchemy version check because postgres dialect is renamed in sqlalchemy>=0.6 from postgres to postgresql
+            from sqlalchemy import __version__ as sqlalchemyversion
+            if map(int, sqlalchemyversion[:3].split('.')) < [0, 6]:
+                url = "postgres"
+            else:
+                url = "postgresql"
+            url = url + "://%(user)s:%(passwd)s@%(host)s:%(port)d/%(name)s" % conn_params
         elif config.get('type', section='database') == 'mysql':
             conn_params['engine_kwargs']['convert_unicode'] = True
             conn_params['engine_kwargs']['pool_recycle'] = int(config.get('pool_recycle', 3600, section='database'))



From mikej06 at mail.berlios.de  Thu Feb 10 21:49:59 2011
From: mikej06 at mail.berlios.de (mikej06 at mail.berlios.de)
Date: Thu, 10 Feb 2011 21:49:59 +0100
Subject: [Griffith-svn] r1535 - trunk/lib
Message-ID: <20110210204959.73F08481396@sheep.berlios.de>

Author: mikej06
Date: 2011-02-10 21:49:59 +0100 (Thu, 10 Feb 2011)
New Revision: 1535

Modified:
   trunk/lib/dbupgrade.py
Log:
[#708472] Upgrade 0.11-0.12 fails with PostgreSQL
added postgresql

Modified: trunk/lib/dbupgrade.py
===================================================================
--- trunk/lib/dbupgrade.py	2011-02-10 20:38:43 UTC (rev 1534)
+++ trunk/lib/dbupgrade.py	2011-02-10 20:49:59 UTC (rev 1535)
@@ -267,7 +267,7 @@
         log.info("Upgrading database to version %d...", version)
         
         # common SQL statements
-        if self.session.bind.name == 'postgres':
+        if self.session.bind.name in ['postgres', 'postgresql']:
             queries = {'created': 'ALTER TABLE movies ADD created TIMESTAMP;',
                        'updated': 'ALTER TABLE movies ADD updated TIMESTAMP;'}
         else:



From iznogoud at mail.berlios.de  Sat Feb 12 01:50:13 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Sat, 12 Feb 2011 01:50:13 +0100
Subject: [Griffith-svn] r1536 - in trunk: . glade lib
Message-ID: <20110212005014.24AA04813A4@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-12 01:50:13 +0100 (Sat, 12 Feb 2011)
New Revision: 1536

Modified:
   trunk/ChangeLog
   trunk/glade/griffith.glade
   trunk/griffith
   trunk/lib/add.py
   trunk/lib/delete.py
   trunk/lib/initialize.py
   trunk/lib/main_treeview.py
   trunk/lib/view.py
   trunk/lib/widgets.py
Log:
Implemented MultiSelection support in MainTreeView; re-implemented macosx menubar integration.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/ChangeLog	2011-02-12 00:50:13 UTC (rev 1536)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-12  Vasco Nunes
+	* Implemented MultiSelection support in MainTreeView
+	* Re-implemented macosx menubar integration 
 
 2011-02-10  Michael Jahn
 	* [#716176] 0.12.1 No postgres support on Windows

Modified: trunk/glade/griffith.glade
===================================================================
--- trunk/glade/griffith.glade	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/glade/griffith.glade	2011-02-12 00:50:13 UTC (rev 1536)
@@ -192,6 +192,21 @@
                       </widget>
                     </child>
                     <child>
+                      <widget class="GtkImageMenuItem" id="select_all">
+                        <property name="visible">True</property>
+                        <property name="label" translatable="yes">Select all</property>
+                        <property name="use_underline">True</property>
+                        <signal name="activate" handler="on_select_all_activate"/>
+                        <child internal-child="image">
+                          <widget class="GtkImage" id="image638">
+                            <property name="visible">True</property>
+                            <property name="stock">gtk-select-all</property>
+                            <property name="icon_size">1</property>
+                          </widget>
+                        </child>
+                      </widget>
+                    </child>
+                    <child>
                       <widget class="GtkSeparatorMenuItem" id="separator7">
                         <property name="visible">True</property>
                       </widget>

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/griffith	2011-02-12 00:50:13 UTC (rev 1536)
@@ -23,11 +23,15 @@
 # GNU General Public License, version 2 or later
 
 import gettext
+import os.path
 gettext.install('griffith', unicode=1)
 import sys
 import logging
+import platform
+
 logging.basicConfig(format='%(asctime)s: %(levelname).1s: %(name)s(%(module)s:%(lineno)d): %(message)s', datefmt='%Y-%m-%dT%H:%M:%S')
 log = logging.getLogger('Griffith')
+
 # print programming warnings in debug mode only (ugly workaround)
 if '--debug' not in sys.argv and '-D' not in sys.argv:
     import warnings
@@ -37,24 +41,30 @@
     log.setLevel(logging.DEBUG)
 
 # set the PATH
-import os.path
 lib = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), 'lib'))
-#lib = os.path.abspath(os.path.join(os.path.dirname(__file__), 'lib'))
+
 if os.path.isdir(lib):
     sys.path.insert(1, lib)
 del lib
-
+    
 # macosx
-import platform
-if platform.system() == 'Darwin':
+if os.name in ('mac') or \
+        (hasattr(os, 'uname') and os.uname()[0] == 'Darwin'):
     import pygtk
     pygtk.require('2.0')
+    import macutils
+    try:
+        from gtk_osxapplication import *
+    except:
+        print "no gtk_osxapplication support."
+        exit(4)
 # end macosx
 
+import gutils
+
+
 # check dependencies
 
-import gutils
-
 (required, extra) = gutils.get_dependencies()
 missing = []
 for i in required:
@@ -83,6 +93,8 @@
 import quick_filter
 import version
 
+# ###################################
+
 class Griffith(object):
     """The main application class"""
 
@@ -103,7 +115,10 @@
 
         initialize.locations(self, home_dir)
         initialize.i18n(self, self.locations['i18n'])
-
+        
+        self.selected = []
+        self.selected_iter = []
+        
         # convert old database
         filename = os.path.join(self.locations['home'], config.get('file', 'griffith.db', section='database'))
         if config.get('file', 'griffith.db', section='database').lower().endswith('.gri'):
@@ -143,20 +158,18 @@
         self.restore_state()
         self.clear_details()
         self.populate_treeview()
-
-        # adding some completion fields - TODO: move it to initialize
-        self.completion = gtk.EntryCompletion()
-        self.widgets['add']['o_title'].set_completion(self.completion)
-        self.completion.set_model(self.treemodel)
-        self.completion.set_text_column(3)
-        # ... title
-        self.completion_t = gtk.EntryCompletion()
-        self.widgets['add']['title'].set_completion(self.completion_t)
-        self.completion_t.set_model(self.treemodel)
-        self.completion_t.set_text_column(4)
-
         initialize.spellcheck(self)
-
+        
+        if self.mac:
+            self.macapp=OSXApplication()
+            self.widgets['window'].connect("destroy", gtk.main_quit)
+            self.macapp.set_menu_bar(self.widgets['menu']['menubar'])
+            # lets hide the gtk menubar. using the macosx integrated one.
+            self.widgets['menu']['menubar'].hide()
+            self.macapp.ready()
+            self.macapp.insert_app_menu_item(self.widgets['menu']['about'],0)
+            self.macapp.insert_app_menu_item(self.widgets['menu']['preferences'],1)
+        
         # add default folders to some select widgets
         if self.windows:
             from win32com.shell import shellcon, shell
@@ -167,13 +180,6 @@
         else:
             self.widgets['preferences']['font'].set_current_folder(os.path.join(sys.prefix, 'share', 'fonts'))
 
-    def main(self):
-        gtk.gdk.threads_init()
-        gtk.gdk.threads_enter()
-        gtk.main()
-        gtk.gdk.threads_leave()
-        return 0
-
     ###########
     # callbacks
     ###########
@@ -228,6 +234,10 @@
             self.widgets['window'].fullscreen()
         else:
             self.widgets['window'].unfullscreen()
+            
+    def select_all(self, widget):
+        self.widgets['treeview'].get_selection().select_all()
+        main_treeview.treeview_clicked(self)
 
     # about dialog    -------------------------------------------------------
 
@@ -378,12 +388,9 @@
         if self.widgets['poster_window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
             self.widgets['poster_window'].hide()
             return
-        treeselection = self.widgets['treeview'].get_selection()
-        (tmp_model, tmp_iter) = treeselection.get_selected()
-        if tmp_iter is None:
+        if len(self.selected) > 1:
             return
-        number = tmp_model.get_value(tmp_iter, 0)
-        poster_md5 = self.db.session.query(db.Movie.poster_md5).filter_by(number=number).first()[0]
+        poster_md5 = self.db.session.query(db.Movie.poster_md5).filter_by(number=int(self.selected[0])).first()[0]
         if poster_md5:
             filename = gutils.get_image_fname(poster_md5, self.db)
             # show before set_from_pixbuf because it doesn't resize otherwise
@@ -399,16 +406,17 @@
         add.change_rating_from_slider(self)
 
     def toggle_seen(self, *args):
-        m_number, m_iter = self.get_maintree_selection()
-        movie = self.db.session.query(db.Movie).filter_by(number=m_number).first()
-        if movie:
-            if movie.seen:
-                movie.seen = False
-            else:
-                movie.seen = True
-            self.db.session.add(movie)
-            self.db.session.commit()
-            self.treemodel.set_value(m_iter,6,movie.seen)
+        for each in self.selected:
+            movie = self.db.session.query(db.Movie).filter_by(number=int(each)).first()
+            if movie:
+                if movie.seen:
+                    movie.seen = False
+                else:
+                    movie.seen = True
+                    self.db.session.add(movie)
+                    self.db.session.commit()
+            for this_iter in self.selected_iter:
+                self.treemodel.set_value(this_iter,6,movie.seen)
             self.treeview_clicked()
             self.populate_treeview()
             self.count_statusbar()
@@ -992,12 +1000,7 @@
         main_treeview.populate(self, statement, where)
 
     def get_maintree_selection(self):
-        treeselection = self.widgets['treeview'].get_selection()
-        (tmp_model, tmp_iter) = treeselection.get_selected()
-        if tmp_model and tmp_iter:
-            return tmp_model.get_value(tmp_iter, 0), tmp_iter
-        else:
-            return None, None
+        return self.selected[0]
 
     # backup/restore ------------------------------------------------------
 
@@ -1026,7 +1029,7 @@
 
     def print_cover_simple_process(self, *args):
         from cover import cover_simple
-        movie_number, movie_iter = self.get_maintree_selection()
+        movie_number = self.get_maintree_selection()
         if movie_number is not None:
             cover_simple(self, movie_number)
         else:
@@ -1039,7 +1042,7 @@
     def print_cover_image_process(self, *args):
         from cover import cover_image
         self.widgets['print_cover']['window_image'].hide()
-        movie_number, movie_iter = self.get_maintree_selection()
+        movie_number = self.get_maintree_selection()
         cover_image(self, movie_number)
 
     def print_cover_image_hide(self, *args):
@@ -1363,7 +1366,6 @@
             if pthinfo is not None:
                 path, col, cellx, celly = pthinfo
                 self.widgets['treeview'].grab_focus()
-                self.widgets['treeview'].set_cursor( path, col, 0)
                 self.widgets['popups']['main'].popup( None, None, None, event.button, time)
             return 1
         elif event.type == gtk.gdk._2BUTTON_PRESS:
@@ -1421,27 +1423,26 @@
         if not treeselection:
             treeview.set_cursor_on_cell(0)
             return 2 # no selection => selecting first movie
-        (treemodel, treeiter) = treeselection.get_selected()
-        if treemodel is None:
-            return False
-        if treeiter is None or direction=='first':
+        if self.selected_iter[0] is None or direction=='first':
             treeview.set_cursor_on_cell(0)
         elif direction == 'next':
-            nextiter = treemodel.iter_next(treeiter)
-            if nextiter is None:
+            nextiter = treeview.get_model().iter_next(self.selected_iter[0])
+            if not nextiter:
+                return
+            if self.selected_iter[0] is None:
                 direction = 'last'
             else:
-                iterpath = treemodel.get_path(nextiter)
+                iterpath = treeview.get_model().get_path(nextiter)
                 treeview.set_cursor_on_cell(iterpath[0])
         elif direction == 'prev':
-            iterpath = treemodel.get_path(treeiter)
+            iterpath = treeview.get_model().get_path(self.selected_iter[0])
             row = iterpath[0]
             if row>0:
                 treeview.set_cursor_on_cell(row-1)
             else:
                 treeview.set_cursor_on_cell(0)
         if direction == 'last':
-            rows = len(treemodel)
+            rows = len(treeview.get_model())
             if rows>0:
                 treeview.set_cursor_on_cell(rows-1)
             else:
@@ -1468,6 +1469,6 @@
             config.set('warned_version', version.pversion, section='devel')
 
     griffith = Griffith(home_dir, config)
-    griffith.main()
+    gtk.main()
 
 # vim: fdm=marker
\ No newline at end of file

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/add.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -117,8 +117,7 @@
     session.add(movie)
     if commit(session):
         treeselection = self.widgets['treeview'].get_selection()
-        (tmp_model, tmp_iter) = treeselection.get_selected()
-        main_treeview.setmovie(self, movie, tmp_iter, tmp_model)
+        main_treeview.setmovie(self, movie, self.selected_iter[0], self.treemodel)
 
         # close add window
         self.widgets['add']['window'].hide()
@@ -642,8 +641,8 @@
 
 def add_movie_db(self, close):
     session = self.db.Session()
-
     details = get_details(self)
+    
     if not details['o_title'] and not details['title']:
         gutils.error(_("You should fill the original title\nor the movie title."),
             parent=self.widgets['add']['window'])
@@ -707,14 +706,11 @@
 
 def clone_movie(self):
     session = self.db.Session()
-
-    treeselection = self.widgets['treeview'].get_selection()
-    (tmp_model, tmp_iter) = treeselection.get_selected()
-    if tmp_iter is None:
+    
+    if self.selected_iter[0] is None:
         log.warn("cannot clone movie: no item selected")
         return False
-    number = tmp_model.get_value(tmp_iter, 0)
-    movie = session.query(db.Movie).filter_by(number=number).first()
+    movie = session.query(db.Movie).filter_by(number=self.selected[0]).first()
 
     if movie is None:
         log.warn("cannot clone movie: Movie(%s) not found", number)

Modified: trunk/lib/delete.py
===================================================================
--- trunk/lib/delete.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/delete.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -25,44 +25,38 @@
 import os
 import db
 import gutils
+from  main_treeview import treeview_selection_on_event
 
 log = logging.getLogger("Griffith")
 
 
 def delete_movie(self):
-    m_id = None
-    number, m_iter = self.get_maintree_selection()
-    movie = self.db.session.query(db.Movie).filter_by(number=number).first()
-    if movie is None:
+    if len(self.selected) == 0:
         gutils.error(_("You have no movies in your database"), self.widgets['window'])
         return False
-
-    if movie.loaned:
-        gutils.warning(msg=_("You can't delete movie while it is loaned."))
-        return False
-
-    if gutils.question(_('Are you sure you want to delete this movie?'), self.widgets['window']):
-        delete_poster(self, movie.poster_md5)
-
-        self.db.session.delete(movie)
-        try:
-            self.db.session.commit()
-        except:
-            log.info("Unexpected problem: %s", e)
-            return False
-
-        # update main treelist
-        self.total -= 1
-        self.clear_details()
-        self.initialized = False
-        self.go_prev()
-        self.treemodel.remove(m_iter)
-        self.initialized = True
-        self.go_next()
-        self.count_statusbar()
     else:
-        return False
+        if gutils.question(_('Are you sure you want to delete?'), self.widgets['window']):
+            for each in self.selected:
+                movie = self.db.session.query(db.Movie).filter_by(number=int(each)).first()
+                if movie.loaned:
+                    gutils.warning(msg=_("You can't delete movie while it is loaned."))
+                    return False
+                delete_poster(self, movie.poster_md5)
+                self.db.session.delete(movie)
+                try:
+                    self.db.session.commit()
+                except:
+                    log.info("Unexpected problem: %s", e)
+                    return False
 
+                # update main treelist
+                self.total -= 1
+                self.clear_details()
+                self.populate_treeview()
+                #self.initialized = False
+                #self.go_prev()
+                #self.go_next()
+                self.count_statusbar()
 
 def delete_poster(self, md5sum, commit=False):
     if commit:

Modified: trunk/lib/initialize.py
===================================================================
--- trunk/lib/initialize.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/initialize.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -25,7 +25,6 @@
 import logging
 import math
 import os
-import platform
 import re
 import sys
 from glob import glob
@@ -125,7 +124,8 @@
 def gui(self):
     self._ = None
 
-    if platform.system() == 'Darwin':
+    if os.name in ('mac') or \
+            (hasattr(os, 'uname') and os.uname()[0] == 'Darwin'):
         self.mac = True
     else:
         self.mac = False
@@ -165,11 +165,16 @@
         self.widgets['extensions']['toolbar_hb'].show()
         self.widgets['menu']['ext_toolbar'].set_active(True)
 
-
 def treeview(self):
+    import main_treeview
+    # set up the treeview to do multiple selection
+    tree = self.widgets['treeview']
     self.treemodel = gtk.TreeStore(str, gtk.gdk.Pixbuf, str, str, str, str, bool, str, str, int, str, str)
-    self.widgets['treeview'].set_model(self.treemodel)
-    self.widgets['treeview'].set_headers_visible(True)
+    tree.set_model(self.treemodel)
+    tree.set_headers_visible(True)
+    tree.get_selection().set_mode(gtk.SELECTION_MULTIPLE)
+    self.widgets['treeview'].get_selection().connect("changed", main_treeview.on_tree_selection, self)
+    
     # number column
     renderer = gtk.CellRendererText()
     self.number_column = gtk.TreeViewColumn(_('No.'), renderer, text=0)
@@ -314,8 +319,18 @@
     self.total = self.db.session.query(db.Movie).count()
     self.widgets['treeview'].set_search_equal_func(search_func_treeview)
     self.widgets['treeview'].show()
+    
+    # adding some completion fields - TODO: move it to initialize
+    self.completion = gtk.EntryCompletion()
+    self.widgets['add']['o_title'].set_completion(self.completion)
+    self.completion.set_model(self.treemodel)
+    self.completion.set_text_column(3)
+    # ... title
+    self.completion_t = gtk.EntryCompletion()
+    self.widgets['add']['title'].set_completion(self.completion_t)
+    self.completion_t.set_model(self.treemodel)
+    self.completion_t.set_text_column(4)
 
-
 def search_func_treeview(model, column, key, iter):
     return not (str(model.get_value(iter, 0)).startswith(key) or 
         str(model.get_value(iter, 2)).lower().startswith(key.lower()) or 

Modified: trunk/lib/main_treeview.py
===================================================================
--- trunk/lib/main_treeview.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/main_treeview.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -23,32 +23,59 @@
 
 import logging
 import os
-
 import gtk
 from sqlalchemy import select, desc
 from sqlalchemy.sql.expression import Select
-
 import db
 import gutils
 import sql
 
 log = logging.getLogger("Griffith")
 
+def on_tree_selection(tree_selection, self):
+    counts = tree_selection.count_selected_rows()
+    treeview_selection_on_event(self, self.widgets['treeview'])
+    treemodel, selected = tree_selection.get_selected_rows()
+    self.selected_iter = [treemodel.get_iter(path) for path in selected]
+    
+    if counts == 1:
+        # TODO: rewrite me
+        self.widgets['menu']['clone'].set_sensitive(True)
+        self.widgets['menu']['make_cover'].set_sensitive(True)
+        self.widgets['menu']['loan'].set_sensitive(True)
+        self.widgets['menu']['edit'].set_sensitive(True)
+        self.widgets['popups']['edit'].set_sensitive(True)
+        self.widgets['popups']['loan'].set_sensitive(True)
+        self.widgets['popups']['clone'].set_sensitive(True)
+        self.widgets['popups']['print_cover'].set_sensitive(True)
+    else:
+        set_details(self)
+        # lets make some options unavailable when multiselction is active. for now.
+        # TODO: rewrite me
+        self.widgets['menu']['clone'].set_sensitive(False)
+        self.widgets['menu']['make_cover'].set_sensitive(False)
+        self.widgets['menu']['loan'].set_sensitive(False)
+        self.widgets['menu']['edit'].set_sensitive(False)
+        self.widgets['popups']['edit'].set_sensitive(False)
+        self.widgets['popups']['loan'].set_sensitive(False)
+        self.widgets['popups']['clone'].set_sensitive(False)
+        self.widgets['popups']['print_cover'].set_sensitive(False)
+    treeview_clicked(self)
 
+def foreach_treeview_selected(model, path, iter, selected):
+    selected.append(model.get_value(iter, 0))
+
+def treeview_selection_on_event(self, treeview, iter = False):
+    self.selected = []
+    treeview.get_selection().selected_foreach(foreach_treeview_selected, self.selected)
+    #return selected
+
 def treeview_clicked(self):
     if self.initialized is False:
         return False
-    if self.total:
-        treeselection = self.widgets['treeview'].get_selection()
-        (tmp_model, tmp_iter) = treeselection.get_selected()
-        if tmp_iter is None:
-            log.info('Treeview: no selection')
-            return False
-        number = tmp_model.get_value(tmp_iter, 0)
-        movie = self.db.session.query(db.Movie).filter_by(number=number).first()
-        if movie is None:
-            log.info("Treeview: movie doesn't exists (number=%s)", number)
-        elif self.widgets['poster_window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
+    if len(self.selected) == 1:
+        movie = self.db.session.query(db.Movie).filter_by(number=int(self.selected[0])).first()
+        if self.widgets['poster_window'].flags() & gtk.VISIBLE == gtk.VISIBLE:
             # poster window is visible
             filename = None
             if movie.poster_md5:
@@ -56,11 +83,11 @@
             if not filename:
                 filename = gutils.get_defaultimage_fname(self)
             self.widgets['big_poster'].set_from_file(filename)
-        for ext in self.extensions:
-            ext.maintree_clicked(treeselection, movie)
+        #for ext in self.extensions:
+            #ext.maintree_clicked(treeselection, movie)
         set_details(self, movie)
     else:
-        set_details(self, {})
+        return False
 
 def set_details(self, item=None):#{{{
     if item is None:

Modified: trunk/lib/view.py
===================================================================
--- trunk/lib/view.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/view.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -26,10 +26,14 @@
 def filter_not_seen(self):
     self.populate_treeview()
     self.update_statusbar(_("Filter activated. Showing only not seen movies."))
+    if self.mac:
+        self.macapp.sync_menubar()
 
 def filter_loaned(self):
     self.populate_treeview()
     self.update_statusbar(_("Filter activated. Showing only loaned movies."))
+    if self.mac:
+        self.macapp.sync_menubar()
 
 def filter_all(self):
     self.populate_treeview()

Modified: trunk/lib/widgets.py
===================================================================
--- trunk/lib/widgets.py	2011-02-10 20:49:59 UTC (rev 1535)
+++ trunk/lib/widgets.py	2011-02-12 00:50:13 UTC (rev 1536)
@@ -353,6 +353,10 @@
         'loan': get('loan1'),
         'email': get('return1'),
         'return': get('e-mail_reminder1'),
+        'select_all': get('select_all'),
+        'clone' : get('clone'),
+        'make_cover': get('make_cover'),
+        'edit': get('edit1'),
     }#}}}
 
     self.widgets['popups'] = {#{{{
@@ -360,6 +364,9 @@
         'loan': get('popup_loan'),
         'return': get('popup_return'),
         'email': get('popup_email'),
+        'clone': get('clone1'),
+        'print_cover': get('print_cover1'),
+        'edit': get('edit2'),
     }#}}}
     self.widgets['extensions'] = {
         'toolbar': get('ext_toolbar'),
@@ -405,6 +412,7 @@
         'on_update_button_clicked': self.update_movie,
         'on_import_activate': self.on_import_activate,
         'on_seen_activate': self.toggle_seen,
+        'on_select_all_activate': self.select_all,
         'on_fullscreen_activate': self.toggle_fullscreen,
         # preferences
         'on_preferences1_activate': self.show_preferences,



From iznogoud at mail.berlios.de  Sat Feb 12 02:26:39 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Sat, 12 Feb 2011 02:26:39 +0100
Subject: [Griffith-svn] r1537 - trunk/lib
Message-ID: <20110212012639.C4B0A4813A4@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-12 02:26:39 +0100 (Sat, 12 Feb 2011)
New Revision: 1537

Modified:
   trunk/lib/edit.py
Log:
fixed poster from disk bug introduced in previous rev

Modified: trunk/lib/edit.py
===================================================================
--- trunk/lib/edit.py	2011-02-12 00:50:13 UTC (rev 1536)
+++ trunk/lib/edit.py	2011-02-12 01:26:39 UTC (rev 1537)
@@ -38,7 +38,7 @@
     showing a file chooser dialog to select it
     """
     picture = self.widgets['movie']['picture']
-    number = self.get_maintree_selection()[0]
+    number = int(self.selected[0])
     if number is None:
         gutils.error(_("You have no movies in your database"), self.widgets['window'])
         return False
@@ -143,10 +143,7 @@
 
 
 def update_tree_thumbnail(self, t_image_path):
-    treeselection = self.widgets['treeview'].get_selection()
-    (tmp_model, tmp_iter) = treeselection.get_selected()
     self.Image.set_from_file(t_image_path)
     pixbuf = self.Image.get_pixbuf()
-    # tmp_iter can be None while importing data
-    if tmp_iter:
-        self.treemodel.set_value(tmp_iter, 1, pixbuf)
+    if self.selected_iter[0]:
+        self.treemodel.set_value(self.selected_iter[0], 1, pixbuf)
\ No newline at end of file



From piotrek at mail.berlios.de  Sun Feb 13 21:04:22 2011
From: piotrek at mail.berlios.de (piotrek at mail.berlios.de)
Date: Sun, 13 Feb 2011 21:04:22 +0100
Subject: [Griffith-svn] r1538 - in trunk: . lib lib/db
Message-ID: <20110213200422.AB6CD4813D3@sheep.berlios.de>

Author: piotrek
Date: 2011-02-13 21:04:22 +0100 (Sun, 13 Feb 2011)
New Revision: 1538

Modified:
   trunk/ChangeLog
   trunk/lib/add.py
   trunk/lib/db/tables.py
   trunk/lib/sql.py
Log:
SQLAlchemy 0.7 compatibility changes


Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-12 01:26:39 UTC (rev 1537)
+++ trunk/ChangeLog	2011-02-13 20:04:22 UTC (rev 1538)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-13  Piotr O?arowski
+	* SQLAlchemy 0.7 compatibility changes
+
 2011-02-12  Vasco Nunes
 	* Implemented MultiSelection support in MainTreeView
 	* Re-implemented macosx menubar integration 

Modified: trunk/lib/add.py
===================================================================
--- trunk/lib/add.py	2011-02-12 01:26:39 UTC (rev 1537)
+++ trunk/lib/add.py	2011-02-13 20:04:22 UTC (rev 1538)
@@ -26,7 +26,7 @@
 import os
 
 import gtk
-from sqlalchemy.exceptions import IntegrityError
+from sqlalchemy.exc import IntegrityError
 
 import quick_filter
 import db

Modified: trunk/lib/db/tables.py
===================================================================
--- trunk/lib/db/tables.py	2011-02-12 01:26:39 UTC (rev 1537)
+++ trunk/lib/db/tables.py	2011-02-13 20:04:22 UTC (rev 1538)
@@ -64,7 +64,7 @@
     Column('poster_md5', ForeignKey(posters.c.md5sum)),
     Column('loaned', Boolean, nullable=False, default=False),
     Column('seen', Boolean, nullable=False, default=False),
-    Column('rating', SmallInteger(2)),
+    Column('rating', SmallInteger),
     Column('color', SmallInteger),
     Column('cond', SmallInteger), # MySQL will not accept name "condition"
     Column('layers', SmallInteger),

Modified: trunk/lib/sql.py
===================================================================
--- trunk/lib/sql.py	2011-02-12 01:26:39 UTC (rev 1537)
+++ trunk/lib/sql.py	2011-02-13 20:04:22 UTC (rev 1538)
@@ -29,7 +29,7 @@
 import os.path
 
 from sqlalchemy import create_engine, or_, and_, not_, exists, asc, desc
-from sqlalchemy.exceptions import OperationalError
+from sqlalchemy.exc import OperationalError
 from sqlalchemy.orm import sessionmaker, scoped_session
 from sqlalchemy.sql.expression import Update, Delete
 



From iznogoud at mail.berlios.de  Thu Feb 17 01:31:19 2011
From: iznogoud at mail.berlios.de (iznogoud at mail.berlios.de)
Date: Thu, 17 Feb 2011 01:31:19 +0100
Subject: [Griffith-svn] r1539 - in trunk: . lib
Message-ID: <20110217003119.A7DD54813E7@sheep.berlios.de>

Author: iznogoud
Date: 2011-02-17 01:31:19 +0100 (Thu, 17 Feb 2011)
New Revision: 1539

Added:
   trunk/lib/macutils.py
Modified:
   trunk/ChangeLog
   trunk/griffith
   trunk/lib/backup.py
   trunk/lib/gutils.py
Log:
Added native Cocoa generic dialogs under macosx, using pyobjc.

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2011-02-13 20:04:22 UTC (rev 1538)
+++ trunk/ChangeLog	2011-02-17 00:31:19 UTC (rev 1539)
@@ -4,6 +4,9 @@
 ------------------
 (c) 2005-2011  Vasco Nunes, Piotr O?arowski
 
+2011-02-17  Vasco Nunes
+	* Added native Cocoa generic dialogs under macosx, using pyobjc.
+
 2011-02-13  Piotr O?arowski
 	* SQLAlchemy 0.7 compatibility changes
 

Modified: trunk/griffith
===================================================================
--- trunk/griffith	2011-02-13 20:04:22 UTC (rev 1538)
+++ trunk/griffith	2011-02-17 00:31:19 UTC (rev 1539)
@@ -52,7 +52,6 @@
         (hasattr(os, 'uname') and os.uname()[0] == 'Darwin'):
     import pygtk
     pygtk.require('2.0')
-    import macutils
     try:
         from gtk_osxapplication import *
     except:

Modified: trunk/lib/backup.py
===================================================================
--- trunk/lib/backup.py	2011-02-13 20:04:22 UTC (rev 1538)
+++ trunk/lib/backup.py	2011-02-17 00:31:19 UTC (rev 1539)
@@ -211,7 +211,7 @@
         tmp_db = None
         tmp_dir = mkdtemp()
         os.mkdir(os.path.join(tmp_dir, 'posters'))
-
+        print filename
         if filename.lower().endswith('.zip'):
             try:
                 zip_file = zipfile.ZipFile(filename, 'r')

Modified: trunk/lib/gutils.py
===================================================================
--- trunk/lib/gutils.py	2011-02-13 20:04:22 UTC (rev 1538)
+++ trunk/lib/gutils.py	2011-02-17 00:31:19 UTC (rev 1539)
@@ -38,11 +38,13 @@
 except:
     gtk = None
     pass
+    
+mac = False
 
-try:
-    import EasyDialogs
-except:
-    pass
+if os.name in ('mac') or \
+    (hasattr(os, 'uname') and os.uname()[0] == 'Darwin'):
+        import macutils
+        mac = True
 
 log = logging.getLogger("Griffith")
 
@@ -266,33 +268,42 @@
 
 
 def warning(msg, parent=None):
-    dialog = gtk.MessageDialog(parent,
+    if mac:
+        macutils.createAlert(msg)
+    else:
+        dialog = gtk.MessageDialog(parent,
             gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
             gtk.MESSAGE_WARNING, gtk.BUTTONS_OK, msg)
-    dialog.set_skip_taskbar_hint(False)
-    dialog.run()
-    dialog.destroy()
+        dialog.set_skip_taskbar_hint(False)
+        dialog.run()
+        dialog.destroy()
 
-
 def info(msg, parent=None):
-    dialog = gtk.MessageDialog(parent,
-            gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
-            gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
-    dialog.set_skip_taskbar_hint(False)
-    dialog.run()
-    dialog.destroy()
+    if mac:
+        macutils.createAlert(msg)
+    else:
+        dialog = gtk.MessageDialog(parent,
+                gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+                gtk.MESSAGE_INFO, gtk.BUTTONS_OK, msg)
+        dialog.set_skip_taskbar_hint(False)
+        dialog.run()
+        dialog.destroy()
 
 def question(msg, window=None):
-    dialog = gtk.MessageDialog(window,
-        gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
-        gtk.MESSAGE_QUESTION, gtk.BUTTONS_NONE, msg)
-    dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
-        gtk.STOCK_NO, gtk.RESPONSE_NO)
-    dialog.set_default_response(gtk.RESPONSE_NO)
-    dialog.set_skip_taskbar_hint(False)
-    response = dialog.run()
-    dialog.destroy()
-    return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
+    if mac:
+        response = macutils.question(msg)
+        return response
+    else:
+        dialog = gtk.MessageDialog(window,
+            gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT,
+            gtk.MESSAGE_QUESTION, gtk.BUTTONS_NONE, msg)
+        dialog.add_buttons(gtk.STOCK_YES, gtk.RESPONSE_YES,
+            gtk.STOCK_NO, gtk.RESPONSE_NO)
+        dialog.set_default_response(gtk.RESPONSE_NO)
+        dialog.set_skip_taskbar_hint(False)
+        response = dialog.run()
+        dialog.destroy()
+        return response in (gtk.RESPONSE_OK, gtk.RESPONSE_YES)
 
 def popup_message(message):
     """shows popup message while executing decorated function"""
@@ -329,49 +340,66 @@
 
 
 def file_chooser(title, action=None, buttons=None, name='', folder=os.path.expanduser('~'), picture=False, backup=False):
-    dialog = gtk.FileChooserDialog(title=title, action=action, buttons=buttons)
-    dialog.set_default_response(gtk.RESPONSE_OK)
-    if name:
-        dialog.set_current_name(name)
-    if folder:
-        dialog.set_current_folder(folder)
-    mfilter = gtk.FileFilter()
-    if picture:
-        preview = gtk.Image()
-        dialog.set_preview_widget(preview)
-        dialog.connect("update-preview", update_preview_cb, preview)
-        mfilter.set_name(_("Images"))
-        mfilter.add_mime_type("image/png")
-        mfilter.add_mime_type("image/jpeg")
-        mfilter.add_mime_type("image/gif")
-        mfilter.add_pattern("*.[pP][nN][gG]")
-        mfilter.add_pattern("*.[jJ][pP][eE]?[gG]")
-        mfilter.add_pattern("*.[gG][iI][fF]")
-        mfilter.add_pattern("*.[tT][iI][fF]{1,2}")
-        mfilter.add_pattern("*.[xX][pP][mM]")
+    if mac:
+        if "SAVE" in str(action):
+            if backup:
+                status, filename, path = macutils.saveDialog(['zip'])
+            else:
+                status, filename, path = macutils.saveDialog()
+        else:
+            status, filename, path = macutils.openDialog(['zip'])
+        if status:
+            if filename.lower().endswith('.zip'):
+                pass
+            else:
+                filename = filename+".zip"
+            return filename, path
+        else:
+            return False 
+    else:
+        dialog = gtk.FileChooserDialog(title=title, action=action, buttons=buttons)
+        dialog.set_default_response(gtk.RESPONSE_OK)
+        if name:
+            dialog.set_current_name(name)
+        if folder:
+            dialog.set_current_folder(folder)
+        mfilter = gtk.FileFilter()
+        if picture:
+            preview = gtk.Image()
+            dialog.set_preview_widget(preview)
+            dialog.connect("update-preview", update_preview_cb, preview)
+            mfilter.set_name(_("Images"))
+            mfilter.add_mime_type("image/png")
+            mfilter.add_mime_type("image/jpeg")
+            mfilter.add_mime_type("image/gif")
+            mfilter.add_pattern("*.[pP][nN][gG]")
+            mfilter.add_pattern("*.[jJ][pP][eE]?[gG]")
+            mfilter.add_pattern("*.[gG][iI][fF]")
+            mfilter.add_pattern("*.[tT][iI][fF]{1,2}")
+            mfilter.add_pattern("*.[xX][pP][mM]")
+            dialog.add_filter(mfilter)
+        elif backup:
+            mfilter.set_name(_('backups'))
+            mfilter.add_pattern('*.[zZ][iI][pP]')
+            mfilter.add_pattern('*.[gG][rR][iI]')
+            mfilter.add_pattern('*.[dD][bB]')
+            dialog.add_filter(mfilter)
+        mfilter = gtk.FileFilter()
+        mfilter.set_name(_("All files"))
+        mfilter.add_pattern("*")
         dialog.add_filter(mfilter)
-    elif backup:
-        mfilter.set_name(_('backups'))
-        mfilter.add_pattern('*.[zZ][iI][pP]')
-        mfilter.add_pattern('*.[gG][rR][iI]')
-        mfilter.add_pattern('*.[dD][bB]')
-        dialog.add_filter(mfilter)
-    mfilter = gtk.FileFilter()
-    mfilter.set_name(_("All files"))
-    mfilter.add_pattern("*")
-    dialog.add_filter(mfilter)
 
 
-    response = dialog.run()
-    if response == gtk.RESPONSE_OK:
-        filename = dialog.get_filename()
-    elif response == gtk.RESPONSE_CANCEL:
-        filename = None
-    else:
-        return False
-    path = dialog.get_current_folder()
-    dialog.destroy()
-    return filename, path
+        response = dialog.run()
+        if response == gtk.RESPONSE_OK:
+            filename = dialog.get_filename()
+        elif response == gtk.RESPONSE_CANCEL:
+            filename = None
+        else:
+            return False
+        path = dialog.get_current_folder()
+        dialog.destroy()
+        return filename, path
 
 
 def update_preview_cb(file_chooser, preview):

Added: trunk/lib/macutils.py
===================================================================
--- trunk/lib/macutils.py	                        (rev 0)
+++ trunk/lib/macutils.py	2011-02-17 00:31:19 UTC (rev 1539)
@@ -0,0 +1,83 @@
+# -*- coding: UTF-8 -*-
+
+__revision__ = '$Id: macutils.py 1519 2011-02-05 15:32:36Z iznogoud $'
+
+# Copyright (c) 2005-2011 Vasco Nunes, Piotr O?arowski
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Library General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+
+# You may use and distribute this software under the terms of the
+# GNU General Public License, version 2 or later
+
+from Cocoa import *
+
+# ================
+# Save file dialog
+# ================
+
+def saveDialog(filetypes=[]):
+    panel = NSSavePanel.savePanel()
+    panel.setCanCreateDirectories_(True)
+    panel.setCanChooseDirectories_(False)
+    panel.setCanChooseFiles_(True)
+    panel.setAllowsOtherFileTypes_(False)
+    result = panel.runModalForDirectory_file_types_(
+        NSHomeDirectory() + '/Desktop',None,filetypes)
+    if result:
+        return True, panel.filename(), panel.directory()
+    else:
+        return False, None, None
+    return
+    
+# ================
+# Open file dialog
+# ================
+
+def openDialog(filetypes=[]):
+    panel = NSOpenPanel.openPanel()
+    panel.setCanCreateDirectories_(False)
+    panel.setCanChooseDirectories_(False)
+    panel.setCanChooseFiles_(True)
+    result = panel.runModalForDirectory_file_types_(
+        NSHomeDirectory() + '/Desktop',None,filetypes)
+    if result:
+        return True, panel.filename(), panel.directory()
+    else:
+        return False, None, None
+    return
+    
+# ================
+# Alert dialog
+# ================  
+    
+def createAlert(msg):
+    alert = NSAlert.alloc().init()
+    alert.setMessageText_(msg)
+    alert.setInformativeText_("")
+    alert.setAlertStyle_(NSInformationalAlertStyle)
+    alert.runModal()
+        
+# ================
+# Question dialog
+# ================
+        
+def question(msg, window=None):
+    alert = NSAlert.alertWithMessageText_defaultButton_alternateButton_otherButton_informativeTextWithFormat_(
+        msg, "Yes", "No", None, "")
+    buttonPressed=alert.runModal()
+    if buttonPressed == 0:
+        return False
+    else:
+        return True
\ No newline at end of file



